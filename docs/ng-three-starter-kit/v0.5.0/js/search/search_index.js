var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.167,1,2.186]],["body/classes/AnimationHolder.html",[0,0.178,1,3.321,2,0.802,3,0.247,4,0.247,5,0.393,6,0.384,7,1.742,8,0.493,9,2.116,10,3.674,11,1.477,12,0.167,13,0.502,14,1.598,15,4.622,16,0.653,17,3.966,18,1.189,19,2.368,20,3.966,21,2.56,22,4.248,23,0.659,24,2.368,25,0.893,26,0.03,27,1.042,28,0.384,29,0.828,30,4.458,31,2.368,32,2.98,33,1.99,34,0.802,35,0.863,36,2.368,37,2.98,38,1.985,39,2.931,40,2.98,41,2.806,42,2.368,43,2.98,44,2.108,45,2.608,46,2.98,47,1.923,48,2.306,49,0.401,50,1.06,51,0.819,52,2.001,53,1.285,54,3.572,55,1.627,56,1.861,57,0.597,58,1.004,59,1.285,60,1.742,61,2.165,62,1.086,63,1.99,64,1.504,65,1.285,66,1.115,67,0.93,68,1.504,69,1.408,70,1.99,71,1.239,72,1.99,73,1.597,74,2.98,75,1.99,76,1.99,77,2.98,78,1.99,79,1.99,80,1.99,81,1.408,82,1.556,83,1.556,84,3.321,85,0.247,86,0.643,87,1.923,88,1.99,89,1.569,90,1.285,91,1.742,92,1.99,93,1.285,94,1.408,95,1.086,96,1.179,97,3.572,98,1.556,99,1.004,100,1.086,101,1.179,102,0.692,103,2.33,104,1.556,105,2.33,106,1.99,107,1.99,108,1.99,109,1.99,110,1.99,111,1.99,112,0.767,113,1.99,114,1.99,115,1.99,116,1.504,117,1.627,118,1.742,119,1.99,120,1.556,121,1.556,122,1.99,123,1.99,124,1.99,125,1.99,126,2.33,127,1.99,128,1.99,129,1.408,130,1.285,131,1.99,132,0.93,133,1.99,134,1.742,135,1.285,136,1.99,137,2.98,138,1.99,139,1.99,140,1.99,141,1.99,142,1.99,143,1.99,144,1.99,145,1.99,146,2.98,147,1.99,148,2.98,149,1.99,150,2.98,151,1.99,152,3.572,153,1.179,154,1.99,155,0.93,156,1.627,157,1.285,158,1.004,159,1.408,160,1.99,161,1.99,162,1.556,163,0.802,164,1.99,165,0.015,166,0.015]],["title/components/AppComponent.html",[167,1.978,168,1.805]],["body/components/AppComponent.html",[0,0.208,3,0.431,4,0.431,5,0.383,8,0.48,12,0.292,13,0.738,23,0.642,26,0.029,27,0.96,28,0.337,34,1.4,35,1.508,41,2.459,51,0.586,57,1.439,85,0.431,90,2.829,165,0.022,166,0.022,167,3.675,168,3.253,169,3.427,170,3.043,171,3.477,172,3.043,173,3.477,174,3.477,175,3.1,176,3.94,177,3.836,178,3.477,179,5.04,180,5.04,181,4.383,182,5.71,183,4.383,184,5.214,185,5.195,186,4.383,187,4.383,188,4.383,189,4.136,190,1.898,191,3.477,192,3.427,193,2.829,194,3.043,195,5.04,196,3.477,197,3.477,198,2.244,199,2.459,200,3.477,201,3.477]],["title/modules/AppModule.html",[202,2.796,203,2.186]],["body/modules/AppModule.html",[0,0.221,3,0.458,4,0.458,5,0.407,26,0.029,51,0.868,57,1.108,85,0.458,165,0.023,166,0.023,168,3.643,177,3.986,190,2.019,198,3.477,203,4.344,204,3.236,205,3.561,206,3.698,207,3.698,208,3.698,209,4.555,210,3.698,211,2.616,212,4.399,213,5.418,214,5.418,215,5.418,216,3.698,217,3.236,218,4.399,219,3.236,220,4.399,221,4.399,222,4.399]],["title/classes/CameraHolder.html",[0,0.167,223,2.186]],["body/classes/CameraHolder.html",[0,0.178,2,1.203,3,0.37,4,0.37,5,0.329,6,0.461,8,0.617,12,0.251,13,0.801,14,1.536,16,0.871,18,1.338,23,0.824,25,1.191,26,0.029,27,0.871,28,0.432,29,1.104,49,0.602,50,0.944,51,0.834,56,2.191,57,0.895,71,1.104,73,1.203,85,0.37,86,1.283,96,2.353,100,2.169,102,1.039,112,1.148,165,0.02,166,0.02,223,3.106,224,2.988,225,3.106,226,4.726,227,4.127,228,3.973,229,2.881,230,3.197,231,2.353,232,1.928,233,4.726,234,2.224,235,5.659,236,3.106,237,2.597,238,3.554,239,4.726,240,3.106,241,3.287,242,4.726,243,3.973,244,4.726,245,2.615,246,2.336,247,2.615,248,1.928,249,2.988,250,2.615,251,2.988,252,2.988,253,2.336,254,3.554,255,3.554,256,2.988,257,3.554,258,2.988,259,3.554,260,3.554,261,3.554,262,3.554,263,3.554,264,3.554,265,2.988,266,3.554]],["title/classes/ControlsHolder.html",[0,0.167,267,2.186]],["body/classes/ControlsHolder.html",[0,0.181,2,1.218,3,0.375,4,0.375,5,0.333,6,0.482,8,0.553,12,0.254,13,0.675,14,1.606,16,0.878,18,1.346,23,0.882,25,0.906,26,0.029,27,0.663,28,0.388,29,0.84,49,0.807,50,1.067,51,0.805,57,0.906,64,2.266,65,1.952,66,1.68,67,1.413,71,1.113,85,0.375,86,1.293,89,1.606,102,1.051,112,0.778,132,1.413,163,1.925,165,0.02,166,0.02,192,3.131,193,2.585,199,2.833,225,3.131,227,4.263,228,4.005,230,3.364,234,1.872,253,2.364,267,3.131,268,3.024,269,6.201,270,3.027,271,3.597,272,4.076,273,3.93,274,4.764,275,4.764,276,5.11,277,3.597,278,2.833,279,3.597,280,4.764,281,3.597,282,3.597,283,3.597,284,3.597,285,3.024]],["title/classes/DebugGUI.html",[0,0.167,58,1.411]],["body/classes/DebugGUI.html",[0,0.172,2,1.157,3,0.356,4,0.356,5,0.316,6,0.474,8,0.397,12,0.242,13,0.652,16,0.848,23,0.865,26,0.029,28,0.278,34,1.559,49,1.037,50,0.92,51,0.484,58,2.541,61,3.022,62,2.894,82,3.027,85,0.356,89,1.414,93,3.25,94,2.739,95,2.113,99,2.467,112,0.739,132,1.81,135,2.499,163,1.886,165,0.02,166,0.02,176,3.027,230,3.422,253,3.027,286,2.874,287,2.293,288,3.515,289,5.572,290,5.572,291,3.419,292,5.036,293,4.684,294,3.419,295,3.388,296,3.419,297,4.605,298,4.605,299,4.605,300,4.605,301,3.419,302,4.605,303,3.871,304,3.871,305,3.388,306,3.388,307,4.605,308,4.605,309,2.825,310,5.208,311,3.419]],["title/classes/Engine.html",[0,0.167,312,1.526]],["body/classes/Engine.html",[0,0.093,2,0.63,3,0.194,4,0.194,5,0.172,6,0.484,8,0.525,9,1.465,11,1.214,12,0.131,13,0.417,14,1.735,16,0.542,18,0.92,23,0.912,25,1.212,26,0.029,27,0.765,28,0.41,29,0.97,34,1.237,35,1.65,38,1.156,44,1.75,47,3.104,49,0.703,50,1.045,51,0.81,55,1.351,56,1.99,57,0.469,58,2.041,59,1.009,61,1.351,62,1.351,64,1.919,65,1.009,66,1.423,67,0.731,68,1.762,69,1.106,71,0.97,73,0.996,85,0.194,86,1.127,89,1.776,95,1.351,100,0.853,112,1.255,116,2.041,117,2.208,129,1.106,130,1.009,135,1.597,155,1.632,156,1.906,157,1.597,158,1.248,159,1.75,163,1.406,165,0.012,166,0.012,169,1.934,193,1.597,199,2.47,223,2.73,225,3.163,227,2.974,229,2.455,230,1.597,231,1.465,234,2.054,236,1.934,237,1.906,241,2.253,245,1.368,246,1.222,267,2.73,270,2.068,272,3.163,273,2.687,276,3.491,278,1.75,295,2.165,312,1.351,313,1.563,314,4.153,315,2.943,316,2.474,317,2.943,318,3.491,319,2.974,320,3.653,321,2.73,322,3.653,323,3.653,324,2.47,325,2.474,326,2.943,327,2.943,328,2.474,329,2.943,330,1.86,331,1.86,332,2.943,333,1.86,334,5.047,335,3.54,336,2.943,337,2.943,338,2.474,339,2.474,340,1.86,341,2.943,342,1.75,343,1.86,344,2.474,345,2.611,346,2.943,347,1.86,348,1.86,349,2.474,350,1.934,351,2.943,352,2.943,353,1.86,354,2.943,355,1.248,356,2.313,357,2.943,358,1.465,359,1.86,360,2.943,361,2.943,362,2.943,363,3.804,364,1.86,365,2.474,366,3.329,367,2.943,368,2.943,369,2.943,370,0.498,371,2.943,372,1.86,373,2.165,374,2.943,375,4.153,376,1.75,377,1.75,378,1.86,379,2.474,380,1.86,381,1.86,382,1.86,383,1.86,384,1.86,385,2.943,386,1.86,387,4.153,388,1.86,389,1.86,390,3.653,391,1.86,392,1.86,393,1.86,394,1.86,395,1.86,396,1.86,397,1.86,398,1.86,399,1.86,400,1.86,401,1.563,402,1.86,403,1.368,404,1.86,405,1.86,406,1.86,407,1.86,408,1.86,409,2.943,410,1.106,411,1.86,412,1.86,413,1.86]],["title/classes/Environment.html",[0,0.167,414,1.526]],["body/classes/Environment.html",[0,0.108,2,0.728,3,0.224,4,0.224,5,0.199,6,0.458,8,0.465,12,0.152,13,0.753,14,1.585,16,0.607,18,1.009,23,0.851,25,0.83,26,0.029,27,0.607,28,0.394,29,0.769,38,1.294,49,0.82,50,1.021,51,0.686,52,2.327,53,1.166,55,1.512,56,2.188,57,0.541,58,0.912,59,1.166,61,2.061,62,0.986,66,1.26,67,0.844,71,0.936,73,0.728,85,0.224,86,0.894,89,1.688,93,1.787,94,1.959,95,1.512,98,2.633,99,1.397,100,1.512,102,0.628,103,2.165,104,1.413,105,2.633,112,0.465,116,1.905,117,2.061,120,2.165,121,2.952,126,1.413,129,1.278,130,2.627,132,1.765,153,1.07,155,0.844,162,2.165,163,1.52,165,0.014,166,0.014,232,1.166,234,1.294,287,1.64,288,2.173,306,2.423,309,1.166,355,1.397,356,1.512,358,1.64,370,0.364,403,1.581,414,2.905,415,1.581,416,1.905,417,2.769,418,4.037,419,3.367,420,3.367,421,3.775,422,3.775,423,3.294,424,3.294,425,2.149,426,2.633,427,3.29,428,2.423,429,3.775,430,3.775,431,3.367,432,2.149,433,3.775,434,4.295,435,2.149,436,2.769,437,2.149,438,2.423,439,2.769,440,2.149,441,2.769,442,4.023,443,2.149,444,2.769,445,3.304,446,2.769,447,4.471,448,2.423,449,2.769,450,2.769,451,2.382,452,2.769,453,2.769,454,2.769,455,2.423,456,2.165,457,2.344,458,1.07,459,1.413,460,1.807,461,1.807,462,1.807,463,2.769,464,1.807,465,1.807,466,1.807,467,2.165,468,1.807,469,1.807,470,1.807,471,1.807,472,1.807,473,1.807,474,2.769,475,1.807,476,1.807,477,1.807,478,1.807,479,1.807,480,1.807,481,1.807,482,1.807,483,1.807,484,1.807,485,1.807,486,1.807,487,1.807,488,1.807,489,1.807,490,2.769,491,1.807,492,4.071,493,3.367,494,1.807,495,1.807,496,3.367,497,3.367,498,3.367,499,1.807,500,1.807,501,1.807,502,1.807,503,1.807,504,2.769,505,2.769,506,1.807,507,1.807,508,1.807,509,1.807,510,1.807,511,1.413]],["title/interfaces/EnvironmentMapHolder.html",[370,0.563,426,2.186]],["body/interfaces/EnvironmentMapHolder.html",[0,0.126,3,0.262,4,0.262,5,0.233,6,0.302,8,0.292,12,0.178,13,0.768,14,1.406,16,0.683,18,0.633,23,0.39,26,0.029,28,0.302,38,0.988,49,0.628,50,0.971,51,0.734,52,2.061,53,1.364,55,1.701,56,2.145,57,0.633,58,1.066,59,1.364,61,2.02,62,1.154,66,1.166,67,0.988,71,1.028,73,0.851,85,0.262,86,0.682,89,1.594,93,1.364,94,1.495,95,1.154,98,1.653,99,1.066,100,1.154,102,0.735,103,2.436,104,1.653,105,2.894,112,0.544,116,1.572,117,1.701,120,1.653,121,2.436,126,1.653,129,1.495,130,2.811,132,1.73,153,1.846,155,1.457,162,1.653,163,0.851,165,0.016,166,0.016,234,0.988,287,1.252,288,1.364,306,1.85,309,1.364,355,1.066,356,1.154,358,1.252,370,0.426,403,1.85,414,2.908,415,1.85,416,1.572,417,2.114,418,3.575,419,2.114,420,2.114,421,2.114,422,2.114,426,2.894,427,3.241,428,1.85,429,3.116,430,3.116,431,3.116,433,3.116,434,3.701,436,2.114,438,1.85,439,2.114,441,2.114,442,3.982,444,2.114,445,2.727,446,2.114,447,5.022,448,1.85,449,2.114,450,2.114,451,2.618,452,3.116,453,3.116,454,3.116,455,2.727,456,2.436,457,2.813,458,2.192,459,2.436,460,3.116,461,3.116,462,3.116,463,4.356,464,2.114,465,2.114,466,2.114,467,2.436,468,2.114,469,2.114,470,2.114,471,2.114,472,2.114,473,2.114,474,3.116,475,2.114,476,2.114,477,2.114,478,2.114,479,2.114,480,2.114,481,2.114,482,2.114,483,2.114,484,2.114,485,2.114,486,2.114,487,2.114,488,2.114,489,2.114,490,3.116,491,2.114,492,4.356,493,3.701,494,2.114,495,2.114,496,3.701,497,3.701,498,3.701,499,2.114,500,2.114,501,2.114,502,2.114,503,2.114,504,3.116,505,3.116,506,2.114,507,2.114,508,2.114,509,2.114,510,2.114,511,1.653,512,0.988,513,2.514]],["title/classes/Floor.html",[0,0.167,514,1.978]],["body/classes/Floor.html",[0,0.13,2,0.875,3,0.269,4,0.269,5,0.239,6,0.482,8,0.439,12,0.183,13,0.535,14,1.654,16,0.697,18,1.127,23,0.9,25,0.651,26,0.029,27,0.476,28,0.446,29,0.603,33,2.172,34,1.667,35,1.795,38,1.934,49,0.758,50,0.984,51,0.697,52,2.459,53,1.402,55,2.759,56,2.107,57,0.651,66,1.407,67,1.015,71,0.883,83,2.485,85,0.269,86,1.026,89,1.737,101,1.883,102,0.755,112,1.184,118,2.782,132,1.015,163,1.667,165,0.016,166,0.016,232,1.402,234,2.278,247,1.9,355,1.604,379,3.179,427,2.671,438,2.782,442,3.717,451,2.928,455,3.854,456,2.485,457,2.595,514,3.86,515,2.172,516,3.179,517,4.753,518,4.483,519,4.923,520,4.923,521,3.781,522,4.473,523,3.781,524,3.781,525,2.583,526,3.781,527,3.781,528,3.781,529,2.583,530,1.883,531,3.781,532,3.781,533,4.404,534,3.781,535,3.76,536,3.781,537,2.583,538,2.782,539,2.583,540,3.781,541,3.781,542,3.781,543,3.781,544,3.781,545,2.583,546,3.781,547,3.781,548,3.781,549,2.583,550,3.179,551,5.239,552,2.583,553,2.583,554,2.583,555,2.583,556,3.781,557,2.583,558,2.583,559,2.583,560,2.583,561,2.583,562,2.583,563,2.583,564,2.583,565,2.583,566,2.583,567,2.583,568,2.583,569,2.583]],["title/classes/Fox.html",[0,0.167,84,1.805]],["body/classes/Fox.html",[0,0.163,1,3.47,2,0.713,3,0.219,4,0.219,5,0.444,6,0.465,7,1.549,8,0.459,9,1.969,10,3.396,11,1.543,12,0.149,13,0.459,14,1.669,15,3.325,16,0.597,17,1.77,18,1.119,20,2.726,21,1.759,22,3.325,23,0.868,25,0.817,26,0.029,27,0.884,28,0.413,29,0.757,30,4.033,32,1.77,37,1.77,38,2.075,39,3.062,40,1.77,41,1.928,43,1.77,44,1.252,45,1.549,46,1.77,47,1.142,48,2.146,49,0.752,50,1.117,51,0.792,52,2.312,53,1.142,54,4.033,55,1.488,56,2.022,57,0.53,58,0.893,59,1.142,60,1.549,61,2.325,62,0.966,63,1.77,64,1.677,65,1.142,66,1.244,67,0.827,68,1.884,69,1.252,70,1.77,71,1.184,72,1.77,73,1.504,74,2.726,75,1.77,76,1.77,77,2.726,78,1.77,79,1.77,80,1.77,81,1.252,82,1.384,83,2.131,84,3.509,85,0.219,86,0.88,87,2.41,88,2.726,89,1.682,90,1.759,91,2.386,92,3.325,93,1.759,94,1.928,95,1.488,96,1.615,97,4.26,98,2.599,99,1.375,100,1.488,101,1.615,102,0.615,103,2.131,104,1.384,105,2.131,106,1.77,107,1.77,108,1.77,109,1.77,110,1.77,111,1.77,112,0.701,113,1.77,114,1.77,115,1.77,116,1.884,117,2.039,118,2.386,119,2.726,120,2.131,121,2.131,122,2.726,123,2.726,124,3.735,125,1.77,126,2.131,127,1.77,128,1.77,129,1.252,130,1.142,131,1.77,132,0.827,133,2.726,134,2.386,135,1.759,136,3.735,137,2.726,138,1.77,139,1.77,140,1.77,141,1.77,142,1.77,143,1.77,144,1.77,145,1.77,146,2.726,147,1.77,148,2.726,149,1.77,150,2.726,151,1.77,152,3.325,153,1.615,154,2.726,155,1.274,156,2.039,157,1.759,158,1.375,159,1.928,160,1.77,161,1.77,162,2.131,163,1.504,164,1.77,165,0.014,166,0.014,232,1.142,270,1.615,570,3.243,571,2.105,572,2.105,573,2.105,574,2.105,575,2.105,576,2.105,577,2.105]],["title/interfaces/IDestroyable.html",[66,1.046,370,0.563]],["body/interfaces/IDestroyable.html",[3,0.496,4,0.496,5,0.441,6,0.463,8,0.553,12,0.337,16,1.047,23,0.739,26,0.028,49,0.807,50,1.136,66,1.788,85,0.496,163,2.131,165,0.024,166,0.024,278,3.381,335,3.504,339,4.78,356,2.186,358,2.831,370,0.807,512,1.872,578,4.004,579,2.833,580,4.763,581,2.584,582,4.004,583,4.004,584,4.763,585,5.686,586,5.686]],["title/interfaces/IExperienceTime.html",[68,1.411,370,0.563]],["body/interfaces/IExperienceTime.html",[3,0.409,4,0.409,5,0.364,6,0.32,8,0.457,11,1.149,12,0.278,13,0.715,21,3.481,26,0.029,28,0.479,68,2.141,85,0.409,134,3.714,156,2.317,158,2.841,165,0.021,166,0.021,176,3.318,316,4.244,342,3.854,370,0.666,458,3.293,512,1.545,530,3.101,587,3.305,588,5.393,589,5.492,590,4.806,591,5.884,592,5.049,593,5.049,594,4.244,595,5.049,596,5.049]],["title/interfaces/IListenable.html",[370,0.563,597,2.186]],["body/interfaces/IListenable.html",[3,0.468,4,0.468,5,0.416,6,0.447,8,0.522,12,0.318,16,1.011,23,0.697,26,0.029,49,1.004,51,0.636,85,0.468,165,0.023,166,0.023,356,2.519,370,0.761,416,2.619,512,1.766,579,3.265,597,3.609,598,3.778,599,6.174,600,4.039,601,5.483,602,4.615,603,4.739,604,5.49,605,5.49,606,5.49,607,4.495,608,3.609,609,5.49,610,2.954]],["title/interfaces/IPointerSensible.html",[319,2.186,370,0.563]],["body/interfaces/IPointerSensible.html",[3,0.484,4,0.484,5,0.43,6,0.378,8,0.54,12,0.328,13,0.793,26,0.029,28,0.378,51,0.658,85,0.484,86,1.52,165,0.024,166,0.024,319,3.682,325,5.249,345,3.387,356,2.57,365,4.709,366,4.121,370,0.787,401,4.709,512,1.826,579,3.331,611,3.906,612,4.709,613,4.121,614,3.713,615,5.602,616,4.646]],["title/interfaces/IResizable.html",[229,1.805,370,0.563]],["body/interfaces/IResizable.html",[3,0.439,4,0.439,5,0.391,6,0.43,8,0.613,11,1.543,12,0.298,16,0.973,23,0.655,25,1.063,26,0.029,27,0.777,28,0.344,29,0.986,49,0.715,50,1.055,51,0.598,71,0.986,85,0.439,112,1.372,165,0.022,166,0.022,172,3.885,229,2.865,231,3.158,236,3.471,237,2.771,240,3.471,241,3.441,246,2.774,344,4.439,345,2.865,370,0.715,373,3.885,376,3.591,377,3.591,416,2.561,512,1.658,579,3.14,617,3.548,618,4.439,619,2.629,620,2.629,621,4.22,622,5.28,623,3.885,624,3.885]],["title/interfaces/ISize.html",[237,1.526,370,0.563]],["body/interfaces/ISize.html",[3,0.473,4,0.473,5,0.421,6,0.37,8,0.528,11,1.856,12,0.321,13,0.783,26,0.029,28,0.485,85,0.473,165,0.023,166,0.023,237,2.536,241,2.465,370,0.77,376,3.287,377,3.287,458,3.308,512,1.786,623,4.751,624,4.751,625,3.82,626,5.209,627,4.066]],["title/interfaces/ISource.html",[370,0.563,628,1.978]],["body/interfaces/ISource.html",[3,0.416,4,0.616,5,0.52,6,0.325,8,0.464,11,1.167,12,0.282,13,0.722,26,0.029,27,1.152,28,0.537,29,1.382,38,1.569,39,2.797,41,3.864,48,2.166,85,0.531,101,3.045,165,0.022,166,0.022,287,1.988,370,0.676,457,2.716,512,1.569,530,2.947,628,3.032,629,2.937,630,3.992,631,4.734,632,4.354,633,4.286,634,5.918,635,5.098,636,4.286,637,4.286,638,3.692,639,4.354,640,3.992,641,3.356,642,3.356]],["title/interfaces/IUpdatable.html",[64,1.411,370,0.563]],["body/interfaces/IUpdatable.html",[0,0.271,3,0.454,4,0.454,5,0.404,6,0.439,8,0.626,9,2.684,11,1.575,12,0.308,16,0.993,23,0.677,25,1.099,26,0.029,27,0.804,28,0.355,29,1.019,49,0.739,50,1.077,51,0.618,64,2.286,68,2.592,69,2.594,71,1.019,85,0.454,153,3.042,155,2.118,156,2.934,157,2.924,158,2.286,159,3.205,165,0.023,166,0.023,270,2.684,303,4.531,370,0.739,416,2.286,512,1.714,579,3.205,618,4.531,620,2.684,643,3.667,644,5.39,645,4.531,646,4.362,647,5.39]],["title/injectables/PointerService.html",[648,1.656,649,1.978]],["body/injectables/PointerService.html",[0,0.155,3,0.322,4,0.322,5,0.286,6,0.473,8,0.499,12,0.218,13,0.608,14,0.838,16,0.791,18,1.244,23,0.871,25,1.082,26,0.029,27,0.791,28,0.435,29,1.003,34,1.045,35,1.126,49,0.727,50,0.987,51,0.608,71,0.721,73,1.045,85,0.322,86,0.838,89,1.577,90,1.675,96,2.658,99,1.822,102,0.902,116,1.822,165,0.018,166,0.018,175,3.175,190,1.417,211,2.554,312,2.788,345,3.152,363,2.596,410,2.554,511,2.029,530,2.138,581,2.33,613,4.54,614,3.817,619,2.138,620,2.138,648,2.138,649,2.554,650,2.029,651,2.596,652,2.554,653,3.818,654,4.488,655,3.454,656,3.633,657,4.152,658,3.927,659,3.16,660,2.272,661,4.108,662,4.152,663,4.488,664,4.295,665,3.61,666,3.61,667,4.295,668,3.509,669,4.295,670,3.088,671,3.16,672,3.088,673,3.16,674,3.16,675,2.823,676,3.16,677,3.16,678,3.16,679,3.088,680,3.16,681,2.823,682,3.16,683,3.16,684,3.16,685,3.61,686,2.596,687,2.272,688,2.596,689,2.272,690,4.152,691,2.596,692,2.272,693,3.088,694,2.272]],["title/classes/RendererHolder.html",[0,0.167,321,2.186]],["body/classes/RendererHolder.html",[0,0.144,2,0.97,3,0.298,4,0.298,5,0.265,6,0.462,8,0.551,11,1.191,12,0.203,13,0.577,14,1.539,16,0.751,18,1.195,23,0.847,25,1.027,26,0.029,27,0.751,28,0.386,29,0.952,49,0.803,50,1.09,51,0.859,56,2.176,57,0.722,64,2.012,65,1.555,66,1.492,67,1.126,71,1.207,73,0.97,85,0.298,86,1.106,89,1.539,102,0.837,112,1.262,116,2.191,117,1.87,132,1.864,156,1.87,163,1.749,165,0.017,166,0.017,192,2.679,193,2.211,199,2.423,225,2.679,227,4.044,229,2.573,230,2.961,231,2.029,232,1.555,234,2.228,236,2.679,237,2.37,240,3.395,241,3.077,245,2.108,246,1.883,247,2.108,248,1.555,249,2.409,250,2.108,251,2.409,252,2.409,253,1.883,256,2.409,265,2.409,270,2.572,272,3.919,273,3.489,278,2.423,285,2.409,318,5.013,321,2.679,355,1.729,373,2.998,376,2.423,377,2.423,456,2.679,467,1.883,530,2.029,695,2.409,696,4.342,697,4.075,698,5.165,699,5.165,700,2.866,701,2.866,702,2.866,703,4.075,704,4.075,705,2.866,706,4.075,707,4.075,708,2.866,709,2.866,710,2.866,711,2.866,712,2.866,713,2.866,714,2.866,715,2.866,716,2.866,717,2.866,718,2.866,719,2.866,720,2.866,721,2.866,722,2.866]],["title/classes/ResourceLoader.html",[0,0.167,52,1.411]],["body/classes/ResourceLoader.html",[0,0.085,2,0.576,3,0.177,4,0.582,5,0.508,6,0.475,8,0.503,12,0.12,13,0.388,14,1.642,16,0.505,18,0.868,23,0.894,25,0.995,26,0.029,27,0.728,28,0.412,29,0.922,34,1.648,35,1.687,38,2.41,39,2.156,41,3.191,47,1.488,49,0.885,50,1.096,51,0.689,52,1.163,55,1.258,56,0.576,57,0.429,60,1.252,66,1.083,67,0.669,71,1.137,73,0.576,85,0.286,86,0.744,87,2.836,89,1.743,91,1.252,101,2.521,102,0.497,112,1.275,130,0.924,155,0.669,163,1.337,165,0.012,166,0.012,190,0.781,234,1.078,243,2.305,278,1.631,287,0.848,305,4.178,309,0.924,345,2.143,356,0.781,358,1.966,414,1.258,416,1.461,427,2.747,445,2.018,448,2.534,457,1.987,458,2.868,459,1.803,518,2.905,597,2.264,601,3.64,603,2.905,610,1.119,619,1.366,620,1.366,628,3.011,631,2.018,632,1.252,638,2.264,639,1.252,655,2.752,723,1.252,724,6.204,725,2.743,726,3.949,727,3.949,728,4.628,729,3.949,730,5.227,731,4.628,732,3.949,733,2.743,734,3.949,735,2.743,736,2.743,737,3.949,738,1.702,739,2.743,740,2.264,741,3.405,742,2.743,743,1.702,744,2.743,745,3.949,746,2.743,747,1.702,748,1.702,749,2.743,750,5.227,751,5.227,752,2.743,753,2.743,754,1.702,755,5.063,756,2.743,757,1.702,758,1.702,759,1.702,760,2.743,761,2.743,762,2.305,763,3.949,764,2.743,765,1.702,766,3.89,767,3.64,768,2.743,769,5.123,770,2.743,771,3.186,772,1.702,773,2.743,774,2.743,775,2.743,776,1.702,777,2.743,778,2.743,779,1.702,780,2.743,781,1.702,782,2.743,783,2.743,784,2.743,785,1.702,786,1.702,787,1.702,788,1.702,789,1.702,790,2.895,791,1.431,792,3.949,793,3.32,794,3.444,795,3.444,796,3.444,797,1.702,798,3.444,799,3.444,800,1.431,801,1.702,802,1.431,803,2.743,804,1.702,805,1.702,806,1.702,807,1.702,808,1.702,809,1.702,810,1.702,811,1.702,812,1.702,813,1.702,814,1.702,815,1.702,816,1.702,817,1.702,818,1.702,819,1.702,820,1.702]],["title/injectables/ScreenSizeService.html",[248,1.805,648,1.656]],["body/injectables/ScreenSizeService.html",[0,0.125,3,0.259,4,0.259,5,0.23,6,0.485,8,0.427,9,1.831,11,1.075,12,0.176,13,0.521,14,0.675,16,0.677,18,1.102,21,2.93,23,0.909,25,0.926,26,0.029,27,0.677,28,0.394,29,0.859,34,0.842,35,0.907,49,1.056,50,0.874,51,0.62,71,0.581,73,0.842,81,2.187,85,0.259,86,0.675,89,1.466,90,1.349,96,1.831,99,1.56,102,0.727,112,1.045,116,1.56,165,0.016,166,0.016,175,2.875,190,1.141,211,2.187,231,2.916,237,2.218,240,3.77,241,2.93,248,1.995,288,3.318,309,2.623,312,2.218,338,3.091,376,2.875,377,2.875,410,2.187,451,2.187,458,2.689,511,1.635,530,1.831,581,2.623,603,2.705,608,2.417,614,3.736,619,1.831,620,1.831,623,3.219,624,3.219,626,2.091,627,2.705,648,1.831,650,1.635,652,2.187,653,3.549,655,2.187,656,3.219,657,3.678,658,3.556,659,2.705,660,1.83,661,3.916,662,3.678,663,4.064,665,3.091,668,2.417,671,2.705,673,2.705,674,2.705,675,2.417,676,2.705,677,2.705,678,2.705,680,2.705,681,2.417,682,2.705,683,3.556,684,2.705,685,2.091,686,2.091,687,1.83,688,2.091,689,2.705,690,3.678,691,2.091,692,1.83,694,1.83,821,5.009,822,2.091,823,4.834,824,4.834,825,4.834,826,4.834,827,3.677,828,3.677,829,3.677,830,2.487,831,2.487,832,4.336,833,3.677,834,3.677,835,2.487,836,2.487,837,2.487,838,2.487,839,2.487,840,2.487,841,2.487,842,2.487,843,2.487,844,2.487,845,2.487,846,2.487]],["title/components/ThreeViewerComponent.html",[167,1.978,198,1.805]],["body/components/ThreeViewerComponent.html",[0,0.132,3,0.274,4,0.274,5,0.244,6,0.449,8,0.445,10,2.28,12,0.186,13,0.543,14,1.227,16,0.706,18,1.139,23,0.855,25,0.663,26,0.029,27,0.833,28,0.368,29,0.615,48,2.08,49,0.649,50,0.904,51,0.748,56,1.298,57,1.468,71,1.056,85,0.274,86,1.041,89,1.496,99,2.239,102,0.769,112,0.829,117,1.759,132,1.506,158,1.626,165,0.016,166,0.016,167,3.139,168,1.428,169,2.52,170,1.937,171,2.213,172,1.937,173,2.213,177,1.937,178,2.213,179,4.176,180,4.176,181,3.223,183,3.223,190,1.208,191,2.213,192,2.52,193,2.08,194,1.937,195,4.176,196,2.213,197,2.213,198,2.695,199,3.139,200,2.213,201,2.213,219,4.054,231,1.909,234,1.952,248,3.162,250,1.937,272,3.738,288,2.695,312,2.973,342,3.638,350,1.73,355,2.561,366,2.82,428,2.82,608,2.52,619,2.744,627,2.82,649,3.466,652,3.277,658,3.654,684,3.326,696,3.801,767,2.213,793,2.213,847,2.213,848,3.834,849,3.801,850,3.834,851,3.223,852,4.522,853,4.522,854,3.834,855,4.522,856,5.51,857,2.633,858,3.738,859,3.834,860,3.326,861,2.633,862,3.834,863,3.834,864,2.633,865,3.834,866,4.522,867,2.633,868,3.834,869,2.633,870,3.834,871,3.223,872,3.834,873,3.223,874,2.633,875,2.633,876,2.633,877,2.633,878,2.633,879,2.633,880,2.633,881,2.633,882,2.633,883,2.633,884,2.633,885,2.633,886,2.633,887,2.633,888,2.633,889,2.633,890,2.633,891,2.633,892,2.633,893,2.633]],["title/injectables/TimeService.html",[648,1.656,858,2.186]],["body/injectables/TimeService.html",[0,0.13,3,0.269,4,0.269,5,0.239,6,0.472,8,0.439,9,2.451,10,2.249,11,1.439,12,0.183,13,0.535,14,1.336,16,0.697,18,1.127,21,2.052,23,0.877,25,0.953,26,0.029,27,0.697,28,0.401,29,0.883,34,1.28,35,1.379,49,0.834,50,1.13,51,0.535,68,2.398,71,0.603,73,0.875,85,0.269,89,1.654,90,1.402,96,2.451,102,0.755,112,0.818,116,1.604,153,1.883,155,1.486,156,1.735,157,2.97,158,2.699,165,0.016,166,0.016,175,2.249,190,1.185,211,2.249,270,1.883,309,1.402,312,2.259,342,3.665,345,2.052,350,3.598,355,1.604,410,2.249,416,1.604,516,3.179,530,1.883,581,2.671,588,4.138,589,4.138,590,3.622,614,3.363,619,2.451,620,1.883,648,1.883,650,1.698,652,2.249,653,3.598,655,2.249,656,3.291,659,2.782,660,1.9,661,4.051,668,3.236,671,2.782,673,2.782,674,2.782,675,2.485,676,3.622,677,3.622,678,2.782,680,2.782,681,3.236,682,2.782,683,2.782,687,1.9,689,1.9,692,1.9,694,1.9,741,2.782,766,3.179,771,2.782,858,2.485,860,2.782,894,2.172,895,3.781,896,4.923,897,4.923,898,2.583,899,2.583,900,3.781,901,2.583,902,3.781,903,3.781,904,3.179,905,3.179,906,2.583,907,2.583,908,3.781,909,3.179,910,2.583,911,4.473,912,5.474,913,2.583,914,3.781,915,4.473,916,2.583,917,4.473,918,2.583,919,2.583,920,2.583,921,2.583,922,2.583]],["title/classes/World.html",[0,0.167,324,1.978]],["body/classes/World.html",[0,0.125,2,0.842,3,0.259,4,0.259,5,0.405,6,0.477,8,0.508,9,1.831,11,1.075,12,0.176,13,0.521,14,1.557,16,0.677,18,1.102,23,0.89,25,0.926,26,0.029,27,0.677,28,0.44,29,0.859,34,0.842,35,0.907,44,2.187,47,1.349,49,0.623,50,0.966,51,0.856,52,2.05,53,1.349,56,1.983,57,0.627,58,2.433,59,1.349,64,1.856,65,1.349,66,1.376,67,0.977,68,2.05,69,1.479,71,1.022,83,2.417,84,3.178,85,0.259,86,0.998,87,2.623,89,1.76,95,1.687,99,2.291,100,1.687,101,2.407,102,0.727,112,1.115,135,1.995,153,1.831,155,1.445,156,1.687,157,1.995,158,1.56,159,2.187,163,1.637,165,0.016,166,0.016,193,1.995,230,2.623,232,1.349,270,1.831,295,2.705,324,3.708,328,3.091,334,3.091,342,2.875,349,3.091,350,2.417,355,2.594,358,1.831,414,2.773,416,2.05,418,2.705,427,1.995,514,3.483,550,3.091,581,1.995,582,3.091,583,3.091,610,1.635,619,1.831,620,2.407,637,3.091,740,1.635,923,2.091,924,3.677,925,5.736,926,3.677,927,3.091,928,2.487,929,4.834,930,2.487,931,3.677,932,2.487,933,3.677,934,3.677,935,2.487,936,3.677,937,3.677,938,3.677,939,2.487,940,2.487,941,2.487,942,2.487,943,2.487,944,2.487,945,2.487,946,2.091,947,2.487,948,2.487,949,4.375,950,3.677,951,2.487,952,2.487,953,2.487,954,2.487,955,2.487,956,2.487,957,2.487,958,2.487,959,2.487]],["title/coverage.html",[960,3.8]],["body/coverage.html",[0,0.324,1,2.296,5,0.323,6,0.552,7,3.438,26,0.029,28,0.285,52,1.482,58,1.482,64,1.482,66,1.099,68,1.482,84,1.896,112,0.756,165,0.02,166,0.02,167,2.779,168,1.896,174,2.937,198,1.896,219,2.57,223,2.296,224,2.937,229,1.896,237,1.603,248,1.896,258,5.705,267,2.296,268,2.937,286,2.937,312,1.603,313,2.937,319,2.296,321,2.296,324,2.078,370,1.073,414,2.416,415,3.438,426,2.296,514,2.078,515,2.937,578,2.937,587,2.937,597,2.296,598,2.937,611,2.937,617,2.937,625,2.937,628,2.078,629,2.57,643,2.937,648,2.621,649,2.078,651,2.937,695,2.937,723,2.57,740,2.296,821,2.937,822,2.937,847,2.937,858,2.296,894,2.937,923,2.937,960,2.937,961,2.937,962,3.494,963,3.494,964,6.029,965,4.673,966,5.621,967,5.621,968,4.673,969,2.937,970,2.937,971,5.265,972,5.265,973,3.494,974,3.494,975,3.494,976,3.494,977,3.494,978,5.265,979,3.494,980,2.937,981,2.937,982,3.494,983,3.494]],["title/dependencies.html",[205,2.626,984,2.343]],["body/dependencies.html",[26,0.029,57,1.186,61,2.161,62,2.161,87,3.064,165,0.024,166,0.024,190,2.161,205,3.095,216,4.747,217,4.155,610,3.095,985,4.709,986,6.639,987,4.709,988,4.709,989,4.709,990,4.709,991,4.709,992,4.709,993,4.709,994,4.709,995,4.709,996,4.709,997,4.709,998,4.709,999,4.709,1000,4.709,1001,4.709,1002,4.709]],["title/miscellaneous/enumerations.html",[1003,1.512,1004,3.358]],["body/miscellaneous/enumerations.html",[6,0.411,12,0.356,26,0.028,28,0.411,35,2.269,39,2.51,48,2.735,101,2.51,165,0.025,166,0.025,457,2.698,629,3.709,638,3.314,639,4.326,641,4.238,642,4.238,1003,2.735,1004,4.238,1005,5.042]],["title/index.html",[12,0.197,1006,2.343,1007,2.343]],["body/index.html",[10,1.73,11,0.85,18,0.733,26,0.028,27,0.759,28,0.237,34,1.395,38,1.143,39,2.381,51,0.677,55,2.195,56,1.761,57,1.383,61,1.89,62,1.335,73,1.93,81,3.093,84,1.579,87,2.822,93,2.822,95,1.89,96,1.449,100,1.335,112,1.295,117,1.335,135,1.579,165,0.017,166,0.017,170,4.038,175,3.264,176,2.708,186,4.021,187,2.446,188,2.446,231,1.449,234,2.157,287,2.733,288,2.235,292,2.446,293,2.446,304,2.446,305,2.141,312,1.335,335,2.141,355,1.747,414,1.335,427,1.579,442,3.419,457,1.89,459,1.913,514,1.73,517,3.463,518,2.141,533,4.021,535,2.446,538,2.141,581,1.579,590,2.141,600,2.141,602,2.446,608,1.913,613,3.031,645,2.446,649,1.73,652,1.73,653,2.708,654,3.463,655,1.73,661,2.708,666,2.446,668,1.913,681,1.913,771,3.031,851,2.446,860,2.141,904,2.446,905,2.446,909,2.446,946,2.446,961,2.446,1008,4.12,1009,2.91,1010,2.91,1011,2.91,1012,4.12,1013,2.91,1014,2.91,1015,4.614,1016,4.12,1017,2.91,1018,2.91,1019,4.783,1020,2.91,1021,2.91,1022,2.91,1023,2.446,1024,2.446,1025,2.446,1026,2.91,1027,4.12,1028,2.91,1029,2.91,1030,2.91,1031,4.12,1032,2.91,1033,2.91,1034,4.12,1035,2.91,1036,5.7,1037,2.446,1038,2.91,1039,2.91,1040,2.91,1041,2.91,1042,2.91,1043,2.91,1044,2.91,1045,2.91,1046,2.91,1047,2.91,1048,2.91,1049,2.91,1050,2.91,1051,4.12,1052,2.91,1053,2.91,1054,2.91,1055,2.91,1056,2.91,1057,3.463,1058,2.91,1059,4.12,1060,2.91,1061,2.91,1062,2.91,1063,4.12,1064,2.91,1065,2.91,1066,2.91,1067,2.91,1068,2.91,1069,4.12,1070,2.91,1071,3.463,1072,2.91,1073,2.91,1074,2.91,1075,2.91,1076,2.91,1077,2.91,1078,2.91,1079,2.91,1080,2.91,1081,2.91,1082,2.91,1083,2.91,1084,2.91,1085,2.446,1086,2.91,1087,4.12,1088,2.91,1089,2.91,1090,2.91,1091,2.91,1092,2.446,1093,2.91,1094,2.446,1095,2.91,1096,2.91,1097,2.91,1098,2.91,1099,2.91,1100,2.91,1101,2.91,1102,2.91,1103,2.91,1104,2.91,1105,2.91,1106,2.91,1107,2.91,1108,2.91,1109,2.91,1110,2.91,1111,2.91,1112,4.12,1113,2.91,1114,2.446,1115,2.91,1116,2.91,1117,4.12,1118,2.91,1119,2.91,1120,2.91,1121,4.12,1122,2.91,1123,2.91,1124,2.91,1125,2.91,1126,2.91,1127,2.91,1128,2.91,1129,4.12,1130,2.91]],["title/license.html",[1006,2.343,1007,2.343,1131,2.343]],["body/license.html",[11,1.135,21,1.72,23,0.317,26,0.013,44,1.216,45,3.218,48,1.11,155,1.719,158,1.345,165,0.013,166,0.013,185,1.719,194,2.333,324,1.886,451,1.886,458,1.579,538,1.505,594,1.719,600,1.505,612,3.264,636,1.719,675,1.344,762,2.665,790,2.665,849,1.719,871,1.719,873,3.264,927,1.719,1015,4.392,1023,1.719,1024,1.719,1025,2.665,1037,1.719,1057,1.719,1071,1.719,1085,1.719,1092,4.392,1114,1.719,1131,4.21,1132,5.225,1133,5.4,1134,4.734,1135,5.225,1136,2.045,1137,2.045,1138,2.045,1139,5.4,1140,2.045,1141,2.045,1142,3.171,1143,4.734,1144,2.045,1145,2.045,1146,2.045,1147,2.045,1148,3.883,1149,2.045,1150,4.734,1151,4.375,1152,2.045,1153,3.883,1154,2.045,1155,2.045,1156,2.045,1157,2.045,1158,5.4,1159,2.045,1160,2.045,1161,3.171,1162,2.045,1163,2.045,1164,3.171,1165,5.768,1166,5.768,1167,6.346,1168,3.171,1169,3.171,1170,2.045,1171,2.045,1172,2.045,1173,3.171,1174,6.445,1175,2.045,1176,3.883,1177,3.171,1178,2.045,1179,3.171,1180,2.045,1181,3.171,1182,2.045,1183,3.883,1184,2.045,1185,3.171,1186,3.171,1187,4.375,1188,2.045,1189,2.045,1190,2.045,1191,4.375,1192,3.171,1193,2.045,1194,2.045,1195,3.171,1196,2.045,1197,2.045,1198,2.045,1199,2.045,1200,3.883,1201,4.734,1202,5.544,1203,4.734,1204,3.883,1205,2.045,1206,2.045,1207,2.045,1208,3.171,1209,2.045,1210,3.171,1211,1.719,1212,2.045,1213,2.045,1214,2.045,1215,2.045,1216,2.045,1217,2.045,1218,2.045,1219,2.045,1220,2.045,1221,2.045,1222,3.171,1223,2.045,1224,5.768,1225,4.734,1226,2.045,1227,2.045,1228,2.045,1229,3.171,1230,5.225,1231,2.045,1232,2.045,1233,2.045,1234,2.045,1235,2.045,1236,2.045,1237,2.045,1238,2.045,1239,2.045,1240,2.045,1241,2.045,1242,2.045,1243,2.045,1244,2.045,1245,2.045,1246,4.375,1247,2.045,1248,2.045,1249,2.045,1250,2.045,1251,3.883,1252,2.045,1253,2.045,1254,2.045,1255,3.171,1256,2.045,1257,2.045,1258,2.045,1259,3.883,1260,3.171,1261,2.045,1262,2.045,1263,2.045,1264,2.045,1265,3.171,1266,3.171,1267,2.045,1268,2.045,1269,2.045,1270,2.045,1271,2.045,1272,2.045,1273,2.045,1274,4.734,1275,2.045,1276,2.045,1277,2.045,1278,2.045,1279,2.045,1280,1.719,1281,2.045,1282,2.045,1283,2.045,1284,2.045,1285,3.171,1286,2.045,1287,3.883,1288,2.045,1289,2.045,1290,1.719,1291,2.045,1292,2.045,1293,5.225,1294,3.883,1295,2.045,1296,5.225,1297,3.171,1298,3.171,1299,2.045,1300,3.883,1301,2.045,1302,2.045,1303,2.045,1304,2.045,1305,2.045,1306,2.045,1307,5.008,1308,3.171,1309,3.883,1310,3.171,1311,2.045,1312,2.045,1313,2.045,1314,2.045,1315,4.734,1316,3.171,1317,3.171,1318,3.883,1319,3.171,1320,3.171,1321,3.171,1322,3.171,1323,3.171,1324,3.171,1325,2.045,1326,2.045,1327,2.045,1328,2.045,1329,2.045,1330,2.045,1331,2.045,1332,4.375,1333,2.045,1334,2.045,1335,2.045,1336,2.045,1337,2.045,1338,2.045,1339,2.045,1340,2.045,1341,2.045,1342,4.375,1343,3.883,1344,2.045,1345,3.171,1346,3.883,1347,3.171,1348,3.171,1349,3.171,1350,2.045,1351,2.045,1352,2.045,1353,2.045,1354,2.045,1355,3.171,1356,2.045,1357,4.375,1358,2.045,1359,2.045,1360,2.045,1361,2.045,1362,3.171,1363,2.045,1364,2.045,1365,2.045,1366,2.045,1367,2.045,1368,2.045,1369,2.045,1370,2.045,1371,2.045,1372,2.045,1373,2.045,1374,3.171,1375,2.045,1376,2.045,1377,2.045,1378,2.045,1379,2.045,1380,2.045,1381,2.045,1382,2.045,1383,2.045,1384,3.171,1385,2.045,1386,2.045,1387,2.045,1388,2.045,1389,2.045,1390,2.045,1391,2.045,1392,2.045,1393,2.045,1394,2.045,1395,3.171,1396,2.045,1397,2.045,1398,2.045,1399,2.045,1400,2.045,1401,2.045,1402,2.045,1403,3.171,1404,2.045,1405,2.045,1406,2.045,1407,2.045,1408,2.045,1409,2.045,1410,2.045,1411,2.045,1412,2.045,1413,2.045,1414,2.045,1415,2.045]],["title/modules.html",[204,3.325]],["body/modules.html",[26,0.026,165,0.026,166,0.026,203,3.457,204,3.869,217,3.869,1416,5.259,1417,5.259,1418,5.259]],["title/overview.html",[1419,3.8]],["body/overview.html",[2,1.639,26,0.027,81,2.879,165,0.024,166,0.024,168,3.592,169,3.182,198,3.321,202,4.07,203,4.351,205,3.774,206,4.07,207,4.07,208,4.07,209,4.826,210,4.07,211,2.879,467,3.182,512,1.902,650,3.182,832,4.07,1280,4.07,1419,4.07,1420,4.841]],["title/properties.html",[13,0.566,984,2.343]],["body/properties.html",[13,0.749,26,0.027,165,0.026,166,0.026,1290,4.444,1421,5.286]],["title/miscellaneous/typealiases.html",[1003,1.512,1422,3.995]],["body/miscellaneous/typealiases.html",[6,0.473,12,0.349,26,0.027,28,0.473,38,1.939,39,2.456,49,0.836,165,0.025,166,0.025,287,2.456,356,2.264,410,2.934,457,2.264,614,3.452,633,4.147,638,3.243,723,3.63,769,4.88,1003,2.677,1094,4.147,1423,4.934,1424,4.934,1425,4.934,1426,4.934,1427,4.934,1428,4.934,1429,4.934,1430,4.934,1431,4.934]],["title/miscellaneous/variables.html",[1003,1.512,1432,3.358]],["body/miscellaneous/variables.html",[6,0.344,12,0.299,26,0.029,27,1.113,28,0.524,34,1.953,35,2.103,47,2.294,82,2.779,132,1.662,165,0.022,166,0.022,358,2.105,414,2.912,416,2.243,628,2.515,631,4.244,632,3.111,740,3.475,741,3.111,791,3.555,800,4.444,802,3.555,969,3.555,970,4.444,980,3.555,981,3.555,1003,2.294,1211,5.23,1432,4.849,1433,4.229,1434,4.229,1435,4.229,1436,4.229,1437,4.229,1438,4.229,1439,4.229,1440,4.229,1441,4.229,1442,4.229,1443,4.229,1444,4.229,1445,4.229,1446,4.229,1447,4.229,1448,4.229,1449,4.229]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":912,"title":{},"body":{"injectables/TimeService.html":{}}}],["0.001",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.12.0",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["0.146.0",{"_index":998,"title":{},"body":{"dependencies.html":{}}}],["0.17.0",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.5",{"_index":564,"title":{},"body":{"classes/Floor.html":{}}}],["0.5.0",{"_index":1421,"title":{},"body":{"properties.html":{}}}],["0xff0000",{"_index":1117,"title":{},"body":{"index.html":{}}}],["1",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1136,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":556,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1280,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14",{"_index":1008,"title":{},"body":{"index.html":{}}}],["14.2.10",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["1996",{"_index":1282,"title":{},"body":{"license.html":{}}}],["2",{"_index":832,"title":{},"body":{"injectables/ScreenSizeService.html":{},"overview.html":{}}}],["2.0.0",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["2.25",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.4.1",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{},"overview.html":{}}}],["35",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":355,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1268,"title":{},"body":{"license.html":{}}}],["4.0.2",{"_index":996,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":497,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":524,"title":{},"body":{"classes/Floor.html":{}}}],["66",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["7.5.7",{"_index":997,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{}}}],["8/10",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1420,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":978,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1276,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1381,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1305,"title":{},"body":{"license.html":{}}}],["above",{"_index":833,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["absence",{"_index":1395,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1429,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":1034,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":304,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["account",{"_index":1352,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1398,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1412,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":541,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":307,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1242,"title":{},"body":{"license.html":{}}}],["add",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":379,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{}}}],["addition",{"_index":1353,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1219,"title":{},"body":{"license.html":{}}}],["adds",{"_index":780,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["advertising",{"_index":1323,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1355,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1224,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1307,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1371,"title":{},"body":{"license.html":{}}}],["against",{"_index":1261,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1288,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1176,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["angular's",{"_index":1090,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":991,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":1078,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["antialias",{"_index":709,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":168,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1293,"title":{},"body":{"license.html":{}}}],["application",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"classes/DebugGUI.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["applied",{"_index":538,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":436,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["appmodule",{"_index":203,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1080,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1094,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":1275,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1373,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1072,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1308,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1223,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1144,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":450,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1249,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1175,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1162,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":581,"title":{},"body":{"interfaces/IDestroyable.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["awesome",{"_index":1018,"title":{},"body":{"index.html":{}}}],["b",{"_index":1385,"title":{},"body":{"license.html":{}}}],["based",{"_index":675,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["basis",{"_index":1147,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1119,"title":{},"body":{"index.html":{}}}],["behaviour",{"_index":674,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["below",{"_index":1168,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1325,"title":{},"body":{"license.html":{}}}],["between",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{}}}],["bind",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":332,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":1070,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":865,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":1079,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1120,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1122,"title":{},"body":{"index.html":{}}}],["break",{"_index":799,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["browse",{"_index":1418,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":1053,"title":{},"body":{"index.html":{}}}],["build",{"_index":1037,"title":{},"body":{"index.html":{},"license.html":{}}}],["builda",{"_index":1040,"title":{},"body":{"index.html":{}}}],["buildor",{"_index":1039,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["c",{"_index":1402,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":591,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["calculations",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":766,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["callback",{"_index":655,"title":{},"body":{"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["camera",{"_index":227,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["cameraholder",{"_index":223,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":386,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":770,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cancellation",{"_index":1335,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":855,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["case",{"_index":790,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["casting",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1309,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1135,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1178,"title":{},"body":{"license.html":{}}}],["change",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["changedetection",{"_index":828,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["changes",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{}}}],["check",{"_index":448,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["checks",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":404,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":406,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":407,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":369,"title":{},"body":{"classes/Engine.html":{}}}],["choose",{"_index":1020,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{}}}],["circlegeometry",{"_index":522,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":523,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1191,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":586,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":862,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1404,"title":{},"body":{"license.html":{}}}],["click",{"_index":1016,"title":{},"body":{"index.html":{}}}],["client",{"_index":1145,"title":{},"body":{"license.html":{}}}],["clone",{"_index":1027,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1071,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":938,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":533,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1204,"title":{},"body":{"license.html":{}}}],["commons",{"_index":1133,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1244,"title":{},"body":{"license.html":{}}}],["compensation",{"_index":1221,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1263,"title":{},"body":{"license.html":{}}}],["complete",{"_index":815,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["completed",{"_index":763,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["component",{"_index":167,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"overview.html":{}}}],["composing",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1104,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1389,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1163,"title":{},"body":{"license.html":{}}}],["configure",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":421,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":519,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":546,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":422,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":520,"title":{},"body":{"classes/Floor.html":{}}}],["congratulations",{"_index":1026,"title":{},"body":{"index.html":{}}}],["consents",{"_index":1408,"title":{},"body":{"license.html":{}}}],["consider",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceLoader.html":{}}}],["consideration",{"_index":1220,"title":{},"body":{"license.html":{}}}],["considered",{"_index":704,"title":{},"body":{"classes/RendererHolder.html":{}}}],["console.log('loading",{"_index":814,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log('resources",{"_index":945,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":820,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(`loading",{"_index":817,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["constructor(camera",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":326,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(ngzone",{"_index":660,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":232,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":738,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["constructor(timeservice",{"_index":857,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["consumer",{"_index":614,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"miscellaneous/typealiases.html":{}}}],["consumes",{"_index":615,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["contained",{"_index":374,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":354,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":848,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":516,"title":{},"body":{"classes/Floor.html":{},"injectables/TimeService.html":{}}}],["contemplated",{"_index":1341,"title":{},"body":{"license.html":{}}}],["contract",{"_index":579,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["contrary",{"_index":1375,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1299,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1205,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1184,"title":{},"body":{"license.html":{}}}],["controls",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":267,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":391,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1322,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1165,"title":{},"body":{"license.html":{}}}],["core",{"_index":314,"title":{},"body":{"classes/Engine.html":{}}}],["corporation",{"_index":1138,"title":{},"body":{"license.html":{}}}],["correct",{"_index":445,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["correctly",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1279,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":960,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1023,"title":{},"body":{"index.html":{},"license.html":{}}}],["creative",{"_index":1132,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1170,"title":{},"body":{"license.html":{}}}],["cube",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["cube_texture",{"_index":642,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":638,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":727,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":742,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cultural",{"_index":1185,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1209,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["currenttime",{"_index":915,"title":{},"body":{"injectables/TimeService.html":{}}}],["d",{"_index":1410,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1155,"title":{},"body":{"license.html":{}}}],["dat",{"_index":1086,"title":{},"body":{"index.html":{}}}],["data",{"_index":1272,"title":{},"body":{"license.html":{}}}],["database",{"_index":1177,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1284,"title":{},"body":{"license.html":{}}}],["date",{"_index":1365,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":911,"title":{},"body":{"injectables/TimeService.html":{}}}],["debug",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["debug/debuggui",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":58,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debuggui.destroy",{"_index":413,"title":{},"body":{"classes/Engine.html":{}}}],["debuggui.getui",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui.instance",{"_index":310,"title":{},"body":{"classes/DebugGUI.html":{}}}],["debugobject",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["debugui",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debugui.addfolder('environment",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["debugui.addfolder('fox",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":867,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1363,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1397,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":588,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["dependencies",{"_index":205,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":784,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["depicted",{"_index":1258,"title":{},"body":{"license.html":{}}}],["described",{"_index":934,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["destroy",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["destroyable",{"_index":360,"title":{},"body":{"classes/Engine.html":{}}}],["destroyable.destroy",{"_index":412,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":320,"title":{},"body":{"classes/Engine.html":{}}}],["destroyed",{"_index":936,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":863,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detection",{"_index":668,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["determine",{"_index":673,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["detriment",{"_index":1328,"title":{},"body":{"license.html":{}}}],["development",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["directional",{"_index":433,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1376,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1153,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1400,"title":{},"body":{"license.html":{}}}],["display",{"_index":849,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":929,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":870,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":550,"title":{},"body":{"classes/Floor.html":{},"classes/World.html":{}}}],["disposed",{"_index":580,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":336,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{}}}],["disrupt",{"_index":1338,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1271,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1041,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1229,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1142,"title":{},"body":{"license.html":{}}}],["document",{"_index":1143,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":961,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1108,"title":{},"body":{"index.html":{}}}],["done",{"_index":745,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["down",{"_index":368,"title":{},"body":{"classes/Engine.html":{}}}],["draco",{"_index":1103,"title":{},"body":{"index.html":{}}}],["due",{"_index":771,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["duration",{"_index":1319,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1414,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["easily",{"_index":1087,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":317,"title":{},"body":{"classes/Engine.html":{}}}],["effect",{"_index":1235,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1364,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1215,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":589,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["elects",{"_index":1227,"title":{},"body":{"license.html":{}}}],["element",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":866,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":334,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["emit",{"_index":599,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":744,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitter",{"_index":774,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitting",{"_index":902,"title":{},"body":{"injectables/TimeService.html":{}}}],["encoding",{"_index":547,"title":{},"body":{"classes/Floor.html":{}}}],["end",{"_index":337,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":312,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":338,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":883,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":875,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/pointer/pointer.service",{"_index":878,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/size/screen",{"_index":877,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/time/time.service",{"_index":876,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engineconsumer",{"_index":656,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["enjoyment",{"_index":1340,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":872,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enter",{"_index":1017,"title":{},"body":{"index.html":{}}}],["enum",{"_index":640,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":1004,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":414,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":953,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":472,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":419,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":426,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1337,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1085,"title":{},"body":{"index.html":{},"license.html":{}}}],["error",{"_index":767,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":794,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["error('canvas",{"_index":881,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":805,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["errors",{"_index":1399,"title":{},"body":{"license.html":{}}}],["european",{"_index":1277,"title":{},"body":{"license.html":{}}}],["event",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["eventemitter",{"_index":728,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["events",{"_index":608,"title":{},"body":{"interfaces/IListenable.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["everywhere",{"_index":1095,"title":{},"body":{"index.html":{}}}],["example",{"_index":402,"title":{},"body":{"classes/Engine.html":{}}}],["exclusive",{"_index":1164,"title":{},"body":{"license.html":{}}}],["execute",{"_index":683,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executed",{"_index":676,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executes",{"_index":654,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["exercise",{"_index":1362,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1313,"title":{},"body":{"license.html":{}}}],["exists",{"_index":806,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["expect",{"_index":1049,"title":{},"body":{"index.html":{}}}],["expectation",{"_index":1218,"title":{},"body":{"license.html":{}}}],["experience",{"_index":342,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["experiences",{"_index":1009,"title":{},"body":{"index.html":{}}}],["experiencetime",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["export",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["exposes",{"_index":644,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["express",{"_index":1342,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1320,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1225,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1270,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1344,"title":{},"body":{"license.html":{}}}],["false",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":1076,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1189,"title":{},"body":{"license.html":{}}}],["features",{"_index":1069,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":819,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["fires",{"_index":773,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["firm",{"_index":1140,"title":{},"body":{"license.html":{}}}],["first",{"_index":887,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["fit",{"_index":1066,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1393,"title":{},"body":{"license.html":{}}}],["floor",{"_index":514,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":948,"title":{},"body":{"classes/World.html":{}}}],["folder",{"_index":1042,"title":{},"body":{"index.html":{}}}],["folders",{"_index":1082,"title":{},"body":{"index.html":{}}}],["follow",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{}}}],["following",{"_index":1240,"title":{},"body":{"license.html":{}}}],["form",{"_index":1199,"title":{},"body":{"license.html":{}}}],["forward",{"_index":903,"title":{},"body":{"injectables/TimeService.html":{}}}],["found",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["fox",{"_index":84,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":951,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["framerate",{"_index":596,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["free",{"_index":1208,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1197,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1127,"title":{},"body":{"index.html":{}}}],["fully",{"_index":762,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["function",{"_index":410,"title":{},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":1210,"title":{},"body":{"license.html":{}}}],["future",{"_index":1315,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1212,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":937,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":428,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["generated",{"_index":1043,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":517,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getexperiencetime",{"_index":896,"title":{},"body":{"injectables/TimeService.html":{}}}],["getheight",{"_index":823,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getpixelratio",{"_index":824,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gets",{"_index":900,"title":{},"body":{"injectables/TimeService.html":{}}}],["getsize",{"_index":825,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getting",{"_index":1006,"title":{"index.html":{},"license.html":{}},"body":{}}],["getui",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{}}}],["getwidth",{"_index":826,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["git",{"_index":1028,"title":{},"body":{"index.html":{}}}],["give",{"_index":1047,"title":{},"body":{"index.html":{}}}],["gives",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["glslify",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":729,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfloader(this.loadingmanager",{"_index":746,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfmodel",{"_index":641,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1354,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1214,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1297,"title":{},"body":{"license.html":{}}}],["group",{"_index":54,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["handle",{"_index":909,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["handles",{"_index":619,"title":{},"body":{"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["handling",{"_index":1106,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":677,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["height",{"_index":624,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["heirs",{"_index":1329,"title":{},"body":{"license.html":{}}}],["held",{"_index":1379,"title":{},"body":{"license.html":{}}}],["here",{"_index":634,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1300,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1152,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1157,"title":{},"body":{"license.html":{}}}],["highly",{"_index":1059,"title":{},"body":{"index.html":{}}}],["holder",{"_index":225,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["holder/cameraholder",{"_index":382,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":380,"title":{},"body":{"classes/Engine.html":{}}}],["holds",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["hosted",{"_index":1045,"title":{},"body":{"index.html":{}}}],["html",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["http://localhost:4200",{"_index":1035,"title":{},"body":{"index.html":{}}}],["huge",{"_index":1052,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1207,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":66,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["iexperiencetime",{"_index":68,"title":{"interfaces/IExperienceTime.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["ii",{"_index":1246,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1251,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":597,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"coverage.html":{}}}],["image",{"_index":1256,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1286,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1295,"title":{},"body":{"license.html":{}}}],["implements",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["implied",{"_index":1390,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["impulsion",{"_index":888,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["include",{"_index":1238,"title":{},"body":{"license.html":{}}}],["including",{"_index":1202,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1096,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1194,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1349,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1368,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["infringement",{"_index":1192,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["initialsize",{"_index":251,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{}}}],["injectable",{"_index":648,"title":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["injectables",{"_index":650,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["input",{"_index":1430,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inspiration",{"_index":1055,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":1060,"title":{},"body":{"index.html":{}}}],["instance",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["instanceof",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["instantiated",{"_index":924,"title":{},"body":{"classes/World.html":{}}}],["instantiates",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{}}}],["instantiation",{"_index":316,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{}}}],["integrated",{"_index":1084,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1098,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1234,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1331,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":370,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":785,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["interface/ipointersensible",{"_index":384,"title":{},"body":{"classes/Engine.html":{}}}],["interface/iresizable",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":512,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"overview.html":{}}}],["invalid",{"_index":1348,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1369,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1367,"title":{},"body":{"license.html":{}}}],["ipointersensible",{"_index":319,"title":{"interfaces/IPointerSensible.html":{}},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["iresizable",{"_index":229,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1360,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1302,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{}}}],["isenvmappable",{"_index":423,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":237,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["isource",{"_index":628,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issues",{"_index":905,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["it's",{"_index":1124,"title":{},"body":{"index.html":{}}}],["item",{"_index":769,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":813,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["item.scene.traverse((object",{"_index":810,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["items",{"_index":730,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemsloaded",{"_index":750,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemstotal",{"_index":751,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["iupdatable",{"_index":64,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{}}}],["iv",{"_index":1259,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1097,"title":{},"body":{"index.html":{}}}],["journey",{"_index":1061,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1346,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1160,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1102,"title":{},"body":{"index.html":{}}}],["keep",{"_index":681,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["key",{"_index":405,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1388,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":1058,"title":{},"body":{"index.html":{}}}],["kit",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1232,"title":{},"body":{"license.html":{}}}],["known",{"_index":1311,"title":{},"body":{"license.html":{}}}],["large",{"_index":1327,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1396,"title":{},"body":{"license.html":{}}}],["later",{"_index":1190,"title":{},"body":{"license.html":{}}}],["launch",{"_index":897,"title":{},"body":{"injectables/TimeService.html":{}}}],["law",{"_index":1139,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1159,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":583,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":361,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1134,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1347,"title":{},"body":{"license.html":{}}}],["legend",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":1056,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1154,"title":{},"body":{"license.html":{}}}],["library",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{}}}],["license",{"_index":1131,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1383,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":339,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["light",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":418,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{}}}],["likeness",{"_index":1257,"title":{},"body":{"license.html":{}}}],["lil",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":1203,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1266,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1239,"title":{},"body":{"license.html":{}}}],["link",{"_index":400,"title":{},"body":{"classes/Engine.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":603,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{}}}],["listens",{"_index":665,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":741,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":87,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["loaders",{"_index":1075,"title":{},"body":{"index.html":{}}}],["loading",{"_index":724,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loadingmanager",{"_index":731,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loads",{"_index":933,"title":{},"body":{"classes/World.html":{}}}],["loop",{"_index":860,"title":{},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["made",{"_index":871,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["main",{"_index":895,"title":{},"body":{"injectables/TimeService.html":{}}}],["makes",{"_index":612,"title":{},"body":{"interfaces/IPointerSensible.html":{},"license.html":{}}}],["manager",{"_index":755,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mandatory",{"_index":630,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":1081,"title":{},"body":{"index.html":{}}}],["map",{"_index":427,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["maps",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1281,"title":{},"body":{"license.html":{}}}],["matching",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":843,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["math.pi",{"_index":563,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":491,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":508,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":498,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1318,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1233,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1321,"title":{},"body":{"license.html":{}}}],["member",{"_index":1326,"title":{},"body":{"license.html":{}}}],["memory",{"_index":582,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1392,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1123,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":531,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1121,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":453,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":645,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["min",{"_index":496,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":490,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":1003,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":795,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["modelgroup",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":726,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["modify",{"_index":1193,"title":{},"body":{"license.html":{}}}],["module",{"_index":202,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1247,"title":{},"body":{"license.html":{}}}],["more",{"_index":1126,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1217,"title":{},"body":{"license.html":{}}}],["move",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["multiple",{"_index":635,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":507,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":489,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":495,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":500,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":502,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1109,"title":{},"body":{"index.html":{}}}],["national",{"_index":1285,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1407,"title":{},"body":{"license.html":{}}}],["need",{"_index":335,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needs",{"_index":620,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1237,"title":{},"body":{"license.html":{}}}],["new",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":647,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":658,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{}}}],["ngoninit",{"_index":856,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngzone",{"_index":661,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["ngzone.assertnotinangularzone",{"_index":692,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["non",{"_index":1357,"title":{},"body":{"license.html":{}}}],["none",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{}}}],["normal",{"_index":535,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":527,"title":{},"body":{"classes/Floor.html":{}}}],["notes",{"_index":1107,"title":{},"body":{"index.html":{}}}],["notified",{"_index":604,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":760,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["now",{"_index":1024,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1031,"title":{},"body":{"index.html":{}}}],["null",{"_index":511,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["number",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["object",{"_index":416,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":811,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["object.material.dispose",{"_index":812,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["objects",{"_index":356,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1415,"title":{},"body":{"license.html":{}}}],["observable",{"_index":601,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{}}}],["obtainable",{"_index":1091,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1406,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":1068,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":606,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":768,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["offers",{"_index":1386,"title":{},"body":{"license.html":{}}}],["old",{"_index":592,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["oldaction",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":509,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":684,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{}}}],["one",{"_index":593,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["onerror",{"_index":733,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onerror(url",{"_index":764,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["oninit",{"_index":852,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":734,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress",{"_index":735,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress(url",{"_index":775,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["operation",{"_index":1428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["opinion",{"_index":1125,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":439,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1105,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":269,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orbitcontrols(camera",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":315,"title":{},"body":{"classes/Engine.html":{}}}],["organized",{"_index":1083,"title":{},"body":{"index.html":{}}}],["original",{"_index":1173,"title":{},"body":{"license.html":{}}}],["others",{"_index":1216,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1384,"title":{},"body":{"license.html":{}}}],["out",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["outside",{"_index":653,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["over",{"_index":1101,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":834,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["overtly",{"_index":1301,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1419,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{}}}],["owner(s",{"_index":1172,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1179,"title":{},"body":{"license.html":{}}}],["package",{"_index":984,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["painful",{"_index":1093,"title":{},"body":{"index.html":{}}}],["panel",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["paragraph",{"_index":1267,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parent",{"_index":329,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1278,"title":{},"body":{"license.html":{}}}],["part",{"_index":873,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["partial",{"_index":1366,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1394,"title":{},"body":{"license.html":{}}}],["party",{"_index":1413,"title":{},"body":{"license.html":{}}}],["passing",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["patent",{"_index":1378,"title":{},"body":{"license.html":{}}}],["path",{"_index":631,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":632,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":1088,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":706,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1243,"title":{},"body":{"license.html":{}}}],["performance",{"_index":904,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["performer(s",{"_index":1250,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1181,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1401,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1409,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1298,"title":{},"body":{"license.html":{}}}],["person",{"_index":1222,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1255,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1405,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":226,"title":{},"body":{"classes/CameraHolder.html":{}}}],["perspectivecamera",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1254,"title":{},"body":{"license.html":{}}}],["pixel",{"_index":376,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["pixelratio",{"_index":626,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["pointer",{"_index":366,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"components/ThreeViewerComponent.html":{}}}],["pointerevent",{"_index":363,"title":{},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{}}}],["pointermove",{"_index":613,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"index.html":{}}}],["pointerservice",{"_index":649,"title":{"injectables/PointerService.html":{}},"body":{"injectables/PointerService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":438,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1198,"title":{},"body":{"license.html":{}}}],["present",{"_index":927,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1350,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":667,"title":{},"body":{"injectables/PointerService.html":{}}}],["privacy",{"_index":1253,"title":{},"body":{"license.html":{}}}],["private",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["processes",{"_index":678,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["product",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1211,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":287,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":725,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["promote",{"_index":1206,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1324,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":796,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["protected",{"_index":1236,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1260,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1283,"title":{},"body":{"license.html":{}}}],["provide",{"_index":594,"title":{},"body":{"interfaces/IExperienceTime.html":{},"license.html":{}}}],["provided",{"_index":1151,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":687,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1057,"title":{},"body":{"index.html":{},"license.html":{}}}],["public",{"_index":1187,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1252,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1228,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1158,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1201,"title":{},"body":{"license.html":{}}}],["put",{"_index":1112,"title":{},"body":{"index.html":{}}}],["quick",{"_index":1014,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1339,"title":{},"body":{"license.html":{}}}],["r146",{"_index":1012,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":377,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["raw",{"_index":995,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1130,"title":{},"body":{"index.html":{}}}],["reacts",{"_index":365,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer",{"_index":325,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer(pointerevent",{"_index":362,"title":{},"body":{"classes/Engine.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["ready",{"_index":946,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1345,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":1062,"title":{},"body":{"index.html":{}}}],["recursive",{"_index":908,"title":{},"body":{"injectables/TimeService.html":{}}}],["redistribute",{"_index":1196,"title":{},"body":{"license.html":{}}}],["reference",{"_index":328,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1149,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1264,"title":{},"body":{"license.html":{}}}],["reinhardtonemapping",{"_index":707,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1166,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1146,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1188,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1182,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1048,"title":{},"body":{"index.html":{}}}],["remainder",{"_index":1370,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1372,"title":{},"body":{"license.html":{}}}],["removes",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":698,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":318,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["renderer2",{"_index":685,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["renderer2.listen(window",{"_index":691,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["rendererfactory",{"_index":662,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["rendererfactory.createrenderer(null",{"_index":688,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["rendererfactory2",{"_index":663,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["rendererholder",{"_index":321,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":388,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":703,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":551,"title":{},"body":{"classes/Floor.html":{}}}],["repo",{"_index":1022,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1019,"title":{},"body":{"index.html":{}}}],["representations",{"_index":1387,"title":{},"body":{"license.html":{}}}],["representing",{"_index":417,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["represents",{"_index":1427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reproduce",{"_index":1241,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1213,"title":{},"body":{"license.html":{}}}],["requests",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":636,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1334,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":585,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable.resize(size",{"_index":397,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":322,"title":{},"body":{"classes/Engine.html":{}}}],["resize",{"_index":231,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["resize(size",{"_index":236,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":344,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":373,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":622,"title":{},"body":{"interfaces/IResizable.html":{}}}],["resource",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resource/resourceloader",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["resource/sources",{"_index":941,"title":{},"body":{"classes/World.html":{}}}],["resourceloader",{"_index":52,"title":{"classes/ResourceLoader.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["resourceloader(sourcelist",{"_index":931,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":358,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1374,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1403,"title":{},"body":{"license.html":{}}}],["result",{"_index":1431,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resulting",{"_index":1156,"title":{},"body":{"license.html":{}}}],["results",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1248,"title":{},"body":{"license.html":{}}}],["return",{"_index":309,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/typealiases.html":{}}}],["reuse",{"_index":1195,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1333,"title":{},"body":{"license.html":{}}}],["reworked",{"_index":1064,"title":{},"body":{"index.html":{}}}],["right",{"_index":1114,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1167,"title":{},"body":{"license.html":{}}}],["root",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["root'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1356,"title":{},"body":{"license.html":{}}}],["run",{"_index":1038,"title":{},"body":{"index.html":{}}}],["runs",{"_index":850,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":610,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":595,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["scene",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1186,"title":{},"body":{"license.html":{}}}],["screen",{"_index":627,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{}}}],["screensizeservice",{"_index":248,"title":{"injectables/ScreenSizeService.html":{}},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["screensizeservice.getheight",{"_index":845,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getpixelratio",{"_index":846,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getsize",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["screensizeservice.getwidth",{"_index":844,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["see",{"_index":1036,"title":{},"body":{"index.html":{}}}],["selector",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["sensible",{"_index":401,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["serve",{"_index":1030,"title":{},"body":{"index.html":{}}}],["serveby",{"_index":1033,"title":{},"body":{"index.html":{}}}],["service",{"_index":652,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["service/size/isize",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["service/size/screen",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["service/time/iexperiencetime",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["service/type/consumer",{"_index":616,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["services",{"_index":1141,"title":{},"body":{"license.html":{}}}],["set",{"_index":666,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["setconsumer",{"_index":659,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setconsumer(consumer",{"_index":671,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["sets",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setting",{"_index":446,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":341,"title":{},"body":{"classes/Engine.html":{}}}],["shadow",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["shadows",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1332,"title":{},"body":{"license.html":{}}}],["show",{"_index":357,"title":{},"body":{"classes/Engine.html":{}}}],["similar",{"_index":1292,"title":{},"body":{"license.html":{}}}],["simon",{"_index":1054,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1111,"title":{},"body":{"index.html":{}}}],["single",{"_index":633,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/typealiases.html":{}}}],["singleton",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["size",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["size.height",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.service",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["size.service.ts",{"_index":822,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:12",{"_index":827,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:37",{"_index":836,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:44",{"_index":830,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:51",{"_index":831,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:58",{"_index":835,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:71",{"_index":838,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:78",{"_index":839,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:80",{"_index":837,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.width",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["slot",{"_index":680,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["source.path",{"_index":792,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.pathlist",{"_index":803,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.type",{"_index":789,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourcelist",{"_index":740,"title":{},"body":{"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":736,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourceloaded(source",{"_index":778,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sources",{"_index":637,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{}}}],["sourcetype",{"_index":639,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":802,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":791,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":800,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":1050,"title":{},"body":{"index.html":{}}}],["specific",{"_index":605,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../consumer.ts",{"_index":1424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":1005,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourceloader.ts",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgbencoding",{"_index":456,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":1010,"title":{},"body":{"index.html":{}}}],["start",{"_index":590,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["started",{"_index":1007,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":737,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startor",{"_index":1032,"title":{},"body":{"index.html":{}}}],["starts",{"_index":782,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startup",{"_index":1077,"title":{},"body":{"index.html":{}}}],["state",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{},"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1343,"title":{},"body":{"license.html":{}}}],["statements",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":288,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["statically",{"_index":1044,"title":{},"body":{"index.html":{}}}],["statutory",{"_index":1391,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":492,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":609,"title":{},"body":{"interfaces/IListenable.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{}}}],["styles",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1265,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1359,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":944,"title":{},"body":{"classes/World.html":{}}}],["subscribers",{"_index":761,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["subscription",{"_index":925,"title":{},"body":{"classes/World.html":{}}}],["subsequent",{"_index":1171,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1289,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1330,"title":{},"body":{"license.html":{}}}],["such",{"_index":1274,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":420,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1416,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":429,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["sure",{"_index":1046,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":1382,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1306,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1417,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":788,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["switching",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":618,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":983,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":1351,"title":{},"body":{"license.html":{}}}],["template",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["terminal",{"_index":1029,"title":{},"body":{"index.html":{}}}],["termination",{"_index":1336,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1231,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1316,"title":{},"body":{"license.html":{}}}],["test",{"_index":1073,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1100,"title":{},"body":{"index.html":{}}}],["texture",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":732,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textureloader(this.loadingmanager",{"_index":756,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textures",{"_index":518,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["thanks",{"_index":1051,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1287,"title":{},"body":{"license.html":{}}}],["thing",{"_index":1065,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(experiencetime.delta",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":722,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":389,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":880,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":553,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":552,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":390,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":804,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.debugfolder",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(debugobject",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.environmentmap",{"_index":506,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":493,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":352,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist",{"_index":395,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":411,"title":{},"body":{"classes/Engine.html":{}}}],["this.engine",{"_index":882,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":893,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.reacttopointer(pointerevent",{"_index":892,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.resize(size",{"_index":890,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.update(experiencetime",{"_index":885,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engineconsumer",{"_index":694,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.engineconsumer(pointerevent",{"_index":693,"title":{},"body":{"injectables/PointerService.html":{}}}],["this.engineconsumer(screensizeservice.getsize",{"_index":840,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.engineconsumer(this.experiencetime",{"_index":920,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.environment",{"_index":952,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":959,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":503,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":505,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":808,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.eventemitter.emit",{"_index":816,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.experiencetime",{"_index":922,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.current",{"_index":917,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.delta",{"_index":916,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.elapsed",{"_index":918,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.start",{"_index":919,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.floor",{"_index":947,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":957,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":950,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update(experiencetime",{"_index":954,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":958,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":568,"title":{},"body":{"classes/Floor.html":{}}}],["this.gltf",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":797,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.instance",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.destroy",{"_index":311,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.instance.dispose",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":711,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":710,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":721,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":716,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":718,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":720,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":717,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":719,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":714,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":715,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":712,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":713,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":809,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.items.set(source.name",{"_index":807,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.material",{"_index":532,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":569,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":565,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":562,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.ngzone.runoutsideangular",{"_index":689,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.onerror(url",{"_index":753,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onload",{"_index":749,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onprogress(url",{"_index":752,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.pointerservice.setconsumer((pointerevent",{"_index":891,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.rendererholder",{"_index":387,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist",{"_index":394,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":396,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourceloader",{"_index":949,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.destroy",{"_index":956,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.items.get('environmentmaptexture",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourceloader.items.get('foxmodel",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourceloader.items.get('grasscolortexture",{"_index":534,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.items.get('grassnormaltexture",{"_index":536,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.listen",{"_index":943,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":566,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":504,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":567,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":510,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":403,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.screensizeservice.setconsumer((size",{"_index":889,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.sourcelist",{"_index":787,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.sourceloaded(source",{"_index":798,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.startloading",{"_index":786,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.subscription",{"_index":942,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":955,"title":{},"body":{"classes/World.html":{}}}],["this.sunlight",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":801,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.textures.color",{"_index":526,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":554,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":555,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":557,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":558,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":528,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":559,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":560,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":561,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":914,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timeservice.launch",{"_index":886,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.timeservice.setconsumer((experiencetime",{"_index":884,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.unlisten",{"_index":690,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["this.updatablelist",{"_index":392,"title":{},"body":{"classes/Engine.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":398,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":393,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1183,"title":{},"body":{"license.html":{}}}],["three",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1115,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1118,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1116,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":60,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["three/src/animation/animationaction",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":708,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":705,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":198,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":600,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{},"license.html":{}}}],["throughout",{"_index":1161,"title":{},"body":{"license.html":{}}}],["throw",{"_index":793,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":879,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":350,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["tiling",{"_index":548,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["timeservice",{"_index":858,"title":{"injectables/TimeService.html":{}},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["title",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tool",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":777,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["track",{"_index":682,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["trademark",{"_index":1377,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1358,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1245,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1294,"title":{},"body":{"license.html":{}}}],["tree",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":346,"title":{},"body":{"classes/Engine.html":{}}}],["triggering",{"_index":669,"title":{},"body":{"injectables/PointerService.html":{}}}],["triggers",{"_index":829,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["true",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["twitter",{"_index":1129,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type/consumer",{"_index":686,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["typealiases",{"_index":1422,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":408,"title":{},"body":{"classes/Engine.html":{}}}],["types/three",{"_index":1013,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1067,"title":{},"body":{"index.html":{}}}],["ui",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["unconditional",{"_index":1361,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1303,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1230,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1411,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1262,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1099,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1137,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1312,"title":{},"body":{"license.html":{}}}],["unlisten",{"_index":657,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["up",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["updatable",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["updatable.update(experiencetime",{"_index":399,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":323,"title":{},"body":{"classes/Engine.html":{}}}],["update",{"_index":270,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["update(experiencetime",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["updated",{"_index":349,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["upon",{"_index":1169,"title":{},"body":{"license.html":{}}}],["url",{"_index":305,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["url}.\\nloaded",{"_index":818,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["use",{"_index":1015,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":530,"title":{},"body":{"classes/Floor.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["useful",{"_index":602,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["using",{"_index":783,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["usual",{"_index":1110,"title":{},"body":{"index.html":{}}}],["util",{"_index":1089,"title":{},"body":{"index.html":{}}}],["v",{"_index":1269,"title":{},"body":{"license.html":{}}}],["v14",{"_index":1011,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":409,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1432,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1290,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1273,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":874,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":868,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["viewer.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":854,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":853,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":847,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:20",{"_index":869,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":859,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":864,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":861,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":286,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:10",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:31",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:38",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":313,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:100",{"_index":372,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:108",{"_index":378,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:117",{"_index":364,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:126",{"_index":359,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:24",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:30",{"_index":347,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:36",{"_index":330,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:41",{"_index":340,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:46",{"_index":331,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:52",{"_index":353,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:58",{"_index":348,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:63",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:68",{"_index":327,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":224,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:14",{"_index":233,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:36",{"_index":238,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":268,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":695,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:19",{"_index":697,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:57",{"_index":701,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:65",{"_index":702,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:72",{"_index":700,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":578,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":584,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":598,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":607,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/ipointersensible.ts",{"_index":611,"title":{},"body":{"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":617,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":621,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":643,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:11",{"_index":646,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/resource/isource.ts",{"_index":629,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/resource/resourceloader.ts",{"_index":723,"title":{},"body":{"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/resource/resourceloader.ts:111",{"_index":779,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:118",{"_index":759,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:125",{"_index":758,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:144",{"_index":772,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:156",{"_index":776,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:165",{"_index":765,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:21",{"_index":748,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:26",{"_index":743,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:31",{"_index":754,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:40",{"_index":747,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:45",{"_index":757,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:50",{"_index":739,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:63",{"_index":781,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/sources",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts",{"_index":651,"title":{},"body":{"injectables/PointerService.html":{},"coverage.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:13",{"_index":664,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:32",{"_index":670,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:40",{"_index":672,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:47",{"_index":679,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/size/isize.ts",{"_index":625,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/service/size/screen",{"_index":821,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/iexperiencetime.ts",{"_index":587,"title":{},"body":{"interfaces/IExperienceTime.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts",{"_index":894,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts:17",{"_index":913,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:22",{"_index":898,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:34",{"_index":901,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:42",{"_index":907,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:58",{"_index":899,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:66",{"_index":906,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:73",{"_index":910,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/type/consumer.ts",{"_index":1426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["viewer/engine/world/environment.ts",{"_index":415,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":437,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":435,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":440,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":513,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":425,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":432,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":424,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":443,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":515,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":525,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":529,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":521,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":549,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:111",{"_index":574,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:143",{"_index":577,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:150",{"_index":576,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:52",{"_index":572,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:57",{"_index":573,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:62",{"_index":571,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:67",{"_index":570,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:96",{"_index":575,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":923,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":935,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":932,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":928,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":930,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":926,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:66",{"_index":940,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:75",{"_index":939,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":240,"title":{},"body":{"classes/CameraHolder.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["vii",{"_index":1291,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1021,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1226,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1380,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1296,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1304,"title":{},"body":{"license.html":{}}}],["want",{"_index":1113,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1148,"title":{},"body":{"license.html":{}}}],["way",{"_index":1063,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":696,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":699,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1314,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1200,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1310,"title":{},"body":{"license.html":{}}}],["whole",{"_index":851,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":623,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["window.innerheight",{"_index":842,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerwidth",{"_index":841,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.location.hash",{"_index":308,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":921,"title":{},"body":{"injectables/TimeService.html":{}}}],["wish",{"_index":1180,"title":{},"body":{"license.html":{}}}],["without",{"_index":1092,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1174,"title":{},"body":{"license.html":{}}}],["working",{"_index":1074,"title":{},"body":{"index.html":{}}}],["works",{"_index":1150,"title":{},"body":{"license.html":{}}}],["world",{"_index":324,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"license.html":{}}}],["world(this.scene",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":383,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1317,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1128,"title":{},"body":{"index.html":{}}}],["x",{"_index":494,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":499,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":501,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:36\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../service/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   */\n  constructor(private readonly scene: Scene) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                destroy\n                            \n                            \n                                    Static\n                                getUI\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:10\n                        \n                    \n\n            \n                \n                    lil-gui UI singleton instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:38\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getUI\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                \n            \n\n\n            \n                \n                    Instantiates the UI if none is found, and returns it.\n\n\n                    \n                    \n                    \n                        Returns :     GUI | undefined\n\n                    \n                    \n                        A singleton instance of the lil-gui library\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:31\n                \n            \n\n\n            \n                \n                    Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n\"#debug\"\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the DebugGUI is active, else false\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI {\n  /**\n   * lil-gui UI singleton instance\n   */\n  private static instance: GUI | undefined;\n\n  /**\n   * Instantiates the UI if none is found, and returns it.\n   * @returns A singleton instance of the lil-gui library\n   */\n  static getUI(): GUI | undefined {\n    if (window.location.hash !== '#debug') {\n      return undefined;\n    }\n    if (!DebugGUI.instance) {\n      DebugGUI.instance = new GUI();\n    }\n    return DebugGUI.instance;\n  }\n\n  /**\n   * Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n   * \"#debug\"\n   * @returns true if the DebugGUI is active, else false\n   */\n  static isActive(): boolean {\n    return !!this.instance && window.location.hash !== '#debug';\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  static destroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n                            IPointerSensible\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                reactToPointer\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:36\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:46\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:24\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:41\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:63\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:30\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:58\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:52\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:126\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list and disposes\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactToPointer\n                        \n                    \n                \n            \n            \n                \nreactToPointer(pointerEvent: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:117\n                \n            \n\n\n            \n                \n                    Reacts to the pointer event by passing it down to the children objects that implements the IPointerSensible interface.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pointerEvent\n                                    \n                                            PointerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pointer move event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:100\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:108\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './service/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { DebugGUI } from './debug/DebugGUI';\nimport { IExperienceTime } from './service/time/IExperienceTime';\nimport { IPointerSensible } from './interface/IPointerSensible';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable, IPointerSensible {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder;\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder;\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder;\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this.cameraHolder = new CameraHolder(this.scene);\n    this.rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, canvas);\n    this.controlsHolder = new ControlsHolder(this.cameraHolder.instance, canvas);\n\n    this.updatableList = [\n      this.rendererHolder,\n      this.controlsHolder,\n      this.world\n    ];\n\n    this.resizableList = [\n      this.cameraHolder,\n      this.rendererHolder,\n    ];\n\n    this.destroyableList = [\n      this.controlsHolder,\n      this.rendererHolder\n    ];\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.updatableList.forEach((updatable) => updatable.update(experienceTime));\n  }\n\n  /**\n   * Reacts to the pointer event by passing it down to the children objects that implements the {@link\n   * IPointerSensible} interface.\n   * @param pointerEvent Pointer move event\n   */\n  reactToPointer(pointerEvent: PointerEvent): void {\n    // Add objects sensible to the pointer (example: the camera)\n  }\n\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list and disposes\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n\n    DebugGUI.destroy();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource that has loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceLoader Resource that has loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource loader that has loaded the GLTF file of the fox\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:62\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:67\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:52\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:57\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:111\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:96\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:150\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:143\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExperienceTime.html":{"url":"interfaces/IExperienceTime.html","title":"interface - IExperienceTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExperienceTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/IExperienceTime.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the experience time.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            delta\n                                        \n                                \n                                \n                                        \n                                            elapsed\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time used to calculate the elapsed time and the delta time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elapsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elapsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start time of the application (at the instantiation of the experience).\nUsed to calculate the elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IExperienceTime {\n  /**\n   * Start time of the application (at the instantiation of the experience).\n   * Used to calculate the elapsed time from the start of the experience.\n   */\n  start: number;\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   */\n  delta: number;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   */\n  current: number;\n  /**\n   * Elapsed time from the start of the experience.\n   */\n  elapsed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPointerSensible.html":{"url":"interfaces/IPointerSensible.html","title":"interface - IPointerSensible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPointerSensible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IPointerSensible.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that makes objects that implements it sensible to the pointermove event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            reactToPointer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reactToPointer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactToPointer:         Consumer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Consumer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Consumes the pointer event and reacts to it\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Consumer } from '../service/type/Consumer';\n\n/**\n * Contract that makes objects that implements it sensible to the pointermove event.\n */\nexport interface IPointerSensible {\n  /**\n   * Consumes the pointer event and reacts to it\n   */\n  reactToPointer: Consumer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../service/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:11\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n */\nexport interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointerService.html":{"url":"injectables/PointerService.html","title":"injectable - PointerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PointerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/pointer/pointer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the pointermove event outside of Angular and executes the engine callback\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                unlisten\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\nListens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\nChange Detection triggering\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:40\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:47\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unlisten\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Function | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone, OnDestroy, Renderer2, RendererFactory2 } from '@angular/core';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the pointermove event outside of Angular and executes the engine callback\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService implements OnDestroy {\n\n\n  private unlisten: Function | undefined;\n\n  /**\n   * Constructor\n   * Listens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\n   * Change Detection triggering\n   */\n  constructor(private readonly ngZone: NgZone, rendererFactory: RendererFactory2) {\n    const renderer2 = rendererFactory.createRenderer(null, null);\n    this.ngZone.runOutsideAngular(\n      () => {\n        this.unlisten = renderer2.listen(window, 'pointermove', (pointerEvent) => {\n          NgZone.assertNotInAngularZone();\n          this.engineConsumer(pointerEvent);\n        });\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.unlisten) this.unlisten();\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:72\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:57\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:65\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../service/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly scene: Scene,\n              private readonly camera: Camera,\n              private readonly canvas: HTMLCanvasElement) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceLoader.html":{"url":"classes/ResourceLoader.html","title":"class - ResourceLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ResourceLoader.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceLoader implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                unlisten\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getHeight\n                            \n                            \n                                    Static\n                                getPixelRatio\n                            \n                            \n                                    Static\n                                getSize\n                            \n                            \n                                    Static\n                                getWidth\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor\nListen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:44\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:51\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:58\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getWidth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:37\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:71\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\npixel ratio\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:78\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on resize\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unlisten\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Function | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone, OnDestroy, RendererFactory2 } from '@angular/core';\nimport { ISize } from './ISize';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenSizeService implements OnDestroy {\n  private unlisten: Function | undefined;\n\n  /**\n   * Constructor\n   * Listen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n   */\n  constructor(private readonly ngZone: NgZone, rendererFactory: RendererFactory2) {\n    this.ngZone.runOutsideAngular(() => {\n\n      const renderer2 = rendererFactory.createRenderer(null, null);\n      this.ngZone.runOutsideAngular(\n        () => {\n          this.unlisten = renderer2.listen(window, 'resize', () => {\n            NgZone.assertNotInAngularZone();\n            this.engineConsumer(ScreenSizeService.getSize());\n          });\n        }\n      );\n\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  static getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  static getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  static getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  static getSize(): ISize {\n    return {\n      width: ScreenSizeService.getWidth(),\n      height: ScreenSizeService.getHeight(),\n      pixelRatio: ScreenSizeService.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\n   * pixel ratio\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on resize\n   */\n  private engineConsumer: Consumer = () => {};\n\n  ngOnDestroy(): void {\n    if (this.unlisten) {\n      this.unlisten();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeService: TimeService, screenSizeService: ScreenSizeService, pointerService: PointerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the animation loop and the time of the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the screen resize for the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        pointerService\n                                                  \n                                                        \n                                                                        PointerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the pointer events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:41\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:20\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\nimport { TimeService } from './engine/service/time/time.service';\nimport { ScreenSizeService } from './engine/service/size/screen-size.service';\nimport { PointerService } from './engine/service/pointer/pointer.service';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Constructor\n   * @param timeService Service that handles the animation loop and the time of the 3D experience engine\n   * @param screenSizeService Service that handles the screen resize for the 3D experience engine\n   * @param pointerService Service that handles the pointer events\n   */\n  constructor(private readonly timeService: TimeService,\n              private readonly screenSizeService: ScreenSizeService,\n              private readonly pointerService: PointerService) {}\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement);\n\n    this.timeService.setConsumer((experienceTime) => this.engine?.update(experienceTime));\n    this.timeService.launch(); //First impulsion of the tick loop\n\n    this.screenSizeService.setConsumer((size) => this.engine?.resize(size));\n\n    this.pointerService.setConsumer((pointerEvent) => this.engine?.reactToPointer(pointerEvent));\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/time.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the time of the 3D experience and the main loop outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                    Readonly\n                                experienceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExperienceTime\n                            \n                            \n                                launch\n                            \n                            \n                                setConsumer\n                            \n                            \n                                    Private\n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExperienceTime\n                        \n                    \n                \n            \n            \n                \ngetExperienceTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:58\n                \n            \n\n\n            \n                \n                    Gets the time object of the experience that contains the information like delta time, elapsed time from the start\nof the experience.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launch\n                        \n                    \n                \n            \n            \n                \nlaunch()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:34\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\nExecuted outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: (experienceTime: IExperienceTime) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:66\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        tick\n                        \n                    \n                \n            \n            \n                \n                    \n                    tick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:42\n                \n            \n\n\n            \n                \n                    Recursive call of the animation to handle the time of the experience\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:73\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on tick\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        experienceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IExperienceTime\n\n                    \n                \n                \n                    \n                        Default value : {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:17\n                        \n                    \n\n            \n                \n                    Bundle to keep information about the time of the experience.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { IExperienceTime } from './IExperienceTime';\n\n\n/**\n * Service that handles the time of the 3D experience and the main loop outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  /**\n   * Bundle to keep information about the time of the experience.\n   * @private\n   */\n  private readonly experienceTime: IExperienceTime = {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(private readonly ngZone: NgZone) {\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   * Executed outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n   */\n  launch() {\n    this.ngZone.runOutsideAngular(() => this.tick());\n  }\n\n  /**\n   * Recursive call of the animation to handle the time of the experience\n   * @private\n   */\n  private tick() {\n    NgZone.assertNotInAngularZone()\n    const currentTime = Date.now();\n    this.experienceTime.delta = currentTime - this.experienceTime.current;\n    this.experienceTime.current = currentTime;\n\n    this.experienceTime.elapsed = this.experienceTime.current - this.experienceTime.start;\n\n    this.engineConsumer(this.experienceTime);\n    window.requestAnimationFrame(() => this.tick());\n  }\n\n  /**\n   * Gets the time object of the experience that contains the information like delta time, elapsed time from the start\n   * of the experience.\n   */\n  getExperienceTime() {\n    return { ...this.experienceTime };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: (experienceTime: IExperienceTime) => void): void {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on tick\n   */\n  private engineConsumer: (experienceTime: IExperienceTime) => void = () => {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceLoader(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource loader that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:75\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:66\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { Floor } from './Floor';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource loader that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceLoader = new ResourceLoader(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceLoader.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceLoader);\n                              this.fox = new Fox(scene,\n                                this.resourceLoader);\n                              this.environment = new Environment(scene, this.resourceLoader);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    if (this.fox) {\n      this.fox.update(experienceTime);\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceLoader.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IPointerSensible.ts\n            \n            interface\n            IPointerSensible\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ResourceLoader.ts\n            \n            class\n            ResourceLoader\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/pointer/pointer.service.ts\n            \n            injectable\n            PointerService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/IExperienceTime.ts\n            \n            interface\n            IExperienceTime\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.2.10\n        \n            @angular/common : ^14.2.10\n        \n            @angular/compiler : ^14.2.10\n        \n            @angular/core : ^14.2.10\n        \n            @angular/forms : ^14.2.10\n        \n            @angular/platform-browser : ^14.2.10\n        \n            @angular/platform-browser-dynamic : ^14.2.10\n        \n            @angular/router : ^14.2.10\n        \n            glslify-loader : ^2.0.0\n        \n            lil-gui : ^0.17.0\n        \n            raw-loader : ^4.0.2\n        \n            rxjs : ~7.5.7\n        \n            three : ^0.146.0\n        \n            tslib : ^2.4.1\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    \n    \n    ng-three-starter-kit\n    \n        An Angular 14 template for your ThreeJS experiences\n    \n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n         \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n\nStack 🧰\n\n    \n    \n    \n    \n\n\n\nAngular v14\nThreejs (r146)\n@types/three (r146)\n\nQuick Start 🏁\n➡️ Documentation ⬅️\nHow to use this template 🔧\n\n    \n\n\n\nClick on Use this template\nEnter the ✨awesome✨ name of your repository\nChoose the visibility of the repo\nClick on Create repository from template\nYou are now the owner of a new Angular ThreeJS project. Congratulations !\n\n(You can clone your new repository with git clone  in your Terminal)\nServe the application 👨‍💻\nnpm startor\n\nng serveBy default, you can access it through: http://localhost:4200/\nWhat you should see\n\n    \n\n\nBuild the application 🏗️\nnpm run buildor\n\nng buildA dist folder is generated that can be statically hosted.\nDebug and tweak your 3D scene with lil-gui 🐞\nBy default, you can add #debug in the URL to access the debug panel, useful to tweak your scene.\nBe sure to give a reload if you cannot see it.\nWhat you can expect to see\n\n    \n\n\nSpecial Thanks 💖\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures 🛠️\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\nDebug UI integrated (equivalent to dat-gui) and easily accessible due to static singleton pattern\nUtil service\nExecutes the animation loop and the resize outside the NgZone to avoid performance issues due to Angular's Change\ndetection\nInformation obtainable easily without painful constructor argument everywhere. (static method)\nProvides a PointerService to handle pointermove events and executes the pointermove callback of the engine outside\nthe NgZone\n\n\n\nIncoming Features ⚙️\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\n\nNotes 🗒️\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter 🐦\nYou can reach me on Twitter:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.5.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consumer   (src/.../Consumer.ts)\n                        \n                        \n                            Item   (src/.../ResourceLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/service/type/Consumer.ts\n    \n    \n        \n            \n                \n                    \n                    Consumer\n                \n            \n            \n                \n                    Represents an operation that accepts a single input argument and returns no result.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/three-viewer/engine/resource/ResourceLoader.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
