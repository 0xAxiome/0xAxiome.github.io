var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.135,1,2.186]],["body/classes/AnimationHolder.html",[0,0.143,1,3.314,2,0.798,3,0.245,4,0.245,5,0.392,6,0.383,7,1.733,8,0.492,9,2.11,10,4.057,11,1.474,12,0.167,13,0.5,14,1.596,15,4.614,16,0.651,17,3.957,18,1.186,19,2.356,20,3.957,21,2.344,22,4.239,23,0.657,24,2.356,25,0.89,26,0.03,27,1.064,28,0.383,29,0.825,30,4.45,31,2.356,32,2.969,33,1.981,34,0.798,35,0.859,36,2.356,37,2.969,38,1.981,39,2.928,40,2.969,41,2.799,42,2.356,43,2.969,44,2.1,45,2.598,46,2.969,47,1.916,48,2.299,49,0.366,50,1.058,51,0.818,52,1.849,53,1.278,54,3.562,55,1.621,56,1.858,57,0.594,58,0.999,59,1.278,60,1.733,61,2.16,62,1.173,63,1.981,64,1.388,65,1.278,66,1.032,67,0.926,68,1.498,69,1.401,70,1.981,71,1.236,72,1.981,73,1.981,74,1.849,75,2.969,76,1.981,77,1.981,78,2.969,79,1.981,80,1.981,81,1.981,82,1.981,83,1.981,84,1.401,85,1.549,86,1.549,87,3.317,88,0.245,89,0.689,90,2.1,91,1.981,92,1.567,93,1.278,94,1.733,95,1.981,96,1.278,97,1.401,98,1.173,99,1.173,100,3.562,101,1.549,102,1.173,103,1.081,104,1.173,105,0.689,106,2.322,107,1.549,108,2.322,109,1.981,110,1.981,111,1.981,112,1.981,113,1.981,114,1.981,115,0.764,116,1.981,117,1.981,118,1.981,119,1.498,120,1.621,121,1.733,122,1.981,123,1.549,124,1.401,125,1.981,126,1.981,127,1.981,128,1.981,129,2.322,130,1.981,131,1.981,132,1.401,133,1.278,134,1.981,135,0.926,136,1.981,137,1.733,138,1.401,139,1.981,140,2.969,141,1.981,142,1.981,143,1.981,144,1.981,145,1.981,146,1.981,147,1.981,148,1.981,149,2.969,150,1.981,151,2.969,152,1.981,153,2.969,154,1.981,155,3.562,156,1.081,157,1.981,158,0.859,159,1.498,160,1.278,161,0.926,162,1.401,163,1.981,164,1.981,165,1.549,166,0.741,167,1.981,168,0.015,169,0.015]],["title/components/AppComponent.html",[170,1.805,171,1.805]],["body/components/AppComponent.html",[0,0.167,3,0.431,4,0.431,5,0.383,8,0.48,12,0.292,13,0.738,23,0.642,26,0.029,27,0.96,28,0.337,34,1.4,35,1.507,41,2.459,51,0.586,57,1.438,88,0.431,93,2.828,168,0.022,169,0.022,170,3.353,171,3.252,172,3.1,173,3.042,174,3.476,175,3.042,176,3.476,177,3.476,178,3.1,179,3.94,180,3.835,181,3.476,182,5.039,183,5.039,184,4.383,185,5.71,186,4.383,187,5.213,188,5.195,189,4.383,190,4.383,191,4.383,192,4.135,193,1.897,194,3.476,195,3.427,196,2.828,197,3.042,198,5.039,199,3.476,200,3.476,201,2.244,202,2.244,203,3.476,204,3.476]],["title/modules/AppModule.html",[205,2.796,206,2.186]],["body/modules/AppModule.html",[0,0.178,3,0.458,4,0.458,5,0.407,26,0.029,51,0.868,57,1.108,88,0.458,168,0.023,169,0.023,171,3.643,180,3.986,193,2.018,201,3.477,206,4.344,207,3.236,208,3.561,209,3.698,210,3.698,211,3.698,212,4.555,213,3.698,214,2.616,215,4.399,216,5.418,217,5.418,218,5.418,219,3.698,220,3.236,221,4.399,222,3.236,223,4.399,224,4.399,225,4.399]],["title/classes/CameraHolder.html",[0,0.135,226,2.186]],["body/classes/CameraHolder.html",[0,0.144,2,1.203,3,0.37,4,0.37,5,0.329,6,0.461,8,0.617,12,0.251,13,0.801,14,1.536,16,0.87,18,1.338,23,0.824,25,1.19,26,0.029,27,0.87,28,0.432,29,1.104,49,0.551,50,0.944,51,0.834,56,2.191,57,0.895,71,1.104,74,1.396,88,0.37,89,1.381,99,2.353,103,2.168,105,1.038,115,1.148,168,0.02,169,0.02,226,3.106,227,2.987,228,2.81,229,3.972,230,3.734,231,3.476,232,2.644,233,2.933,234,2.353,235,1.928,236,4.725,237,2.224,238,5.659,239,3.106,240,2.597,241,3.553,242,3.972,243,2.81,244,3.016,245,4.725,246,3.972,247,4.725,248,2.614,249,2.335,250,2.614,251,1.769,252,2.987,253,2.614,254,2.987,255,2.987,256,2.335,257,3.553,258,3.553,259,2.987,260,3.553,261,2.987,262,3.553,263,3.553,264,3.553,265,3.553,266,3.553,267,3.553,268,2.987,269,3.553]],["title/classes/ControlsHolder.html",[0,0.135,270,2.186]],["body/classes/ControlsHolder.html",[0,0.145,2,1.218,3,0.374,4,0.374,5,0.333,6,0.482,8,0.553,12,0.254,13,0.675,14,1.606,16,0.877,18,1.346,23,0.882,25,0.906,26,0.029,27,0.663,28,0.388,29,0.84,49,0.739,50,1.067,51,0.805,57,0.906,64,2.099,65,1.951,66,1.561,67,1.413,71,1.113,88,0.374,89,1.392,92,1.606,105,1.051,115,0.778,135,1.413,166,1.788,168,0.02,169,0.02,195,3.131,196,2.584,202,2.584,228,2.833,230,3.857,231,3.504,233,3.087,237,1.872,256,2.364,270,3.131,271,3.023,272,5.213,273,2.789,274,3.596,275,4.076,276,3.929,277,4.763,278,4.763,279,5.11,280,3.596,281,2.833,282,3.596,283,4.763,284,3.596,285,3.596,286,3.596,287,3.596,288,3.023]],["title/classes/DebugGUI.html",[0,0.135,58,1.411]],["body/classes/DebugGUI.html",[0,0.138,2,1.157,3,0.356,4,0.356,5,0.316,6,0.474,8,0.397,12,0.242,13,0.652,16,0.848,23,0.865,26,0.029,28,0.278,34,1.559,49,0.95,50,0.92,51,0.484,58,2.541,61,3.022,62,3.14,85,3.026,88,0.356,92,1.413,96,3.25,97,2.738,98,2.293,102,2.896,115,0.739,135,1.809,138,2.738,166,1.752,168,0.02,169,0.02,179,3.026,233,3.14,256,3.026,289,2.873,290,2.293,291,3.515,292,5.571,293,5.571,294,3.418,295,5.036,296,4.683,297,3.418,298,3.387,299,3.418,300,4.605,301,4.605,302,4.605,303,4.605,304,3.418,305,4.605,306,3.871,307,3.871,308,3.871,309,3.387,310,4.605,311,4.605,312,2.825,313,5.207,314,3.418]],["title/classes/Engine.html",[0,0.135,315,1.526]],["body/classes/Engine.html",[0,0.075,2,0.629,3,0.194,4,0.194,5,0.172,6,0.484,8,0.525,9,1.465,11,1.213,12,0.131,13,0.417,14,1.735,16,0.542,18,0.92,23,0.912,25,1.212,26,0.029,27,0.765,28,0.41,29,0.97,34,1.236,35,1.649,38,1.156,44,1.75,47,3.104,49,0.644,50,1.044,51,0.81,55,1.35,56,1.99,57,0.468,58,2.041,59,1.009,61,1.35,62,1.465,64,1.778,65,1.009,66,1.322,67,0.73,68,1.761,69,1.105,71,0.97,74,1.156,88,0.194,89,1.213,92,1.776,98,1.465,103,0.853,115,1.255,119,2.041,120,2.208,132,1.105,133,1.009,138,1.75,158,1.514,159,1.761,160,1.596,161,1.156,162,1.75,166,1.306,168,0.012,169,0.012,172,1.75,196,1.596,202,2.253,226,2.729,228,2.861,230,2.69,232,2.253,233,1.465,234,1.465,237,2.054,239,1.934,240,1.905,244,2.067,248,1.368,249,1.222,270,2.729,273,1.905,275,3.163,276,2.686,279,3.49,281,1.75,298,2.165,315,1.35,316,1.563,317,3.49,318,2.473,319,2.165,320,2.473,321,3.055,322,2.974,323,3.07,324,2.729,325,3.07,326,3.07,327,2.253,328,2.473,329,2.942,330,2.942,331,2.473,332,2.942,333,1.859,334,1.859,335,2.942,336,1.859,337,4.417,338,3.54,339,2.942,340,2.942,341,2.473,342,2.473,343,1.859,344,2.473,345,1.75,346,1.859,347,2.473,348,2.611,349,2.473,350,1.859,351,1.859,352,2.473,353,1.75,354,2.942,355,2.942,356,1.859,357,2.942,358,1.248,359,2.138,360,2.942,361,1.465,362,1.859,363,2.473,364,2.942,365,2.942,366,3.803,367,1.859,368,2.473,369,3.328,370,2.942,371,2.942,372,2.473,373,0.498,374,2.942,375,1.859,376,2.165,377,2.942,378,3.49,379,1.596,380,1.596,381,1.859,382,2.165,383,1.859,384,1.859,385,1.859,386,1.859,387,1.859,388,2.942,389,1.859,390,4.152,391,1.859,392,1.859,393,3.652,394,1.859,395,1.859,396,1.859,397,1.859,398,1.859,399,1.859,400,1.859,401,1.859,402,1.859,403,1.859,404,1.563,405,1.859,406,1.368,407,1.859,408,1.859,409,1.859,410,1.859,411,1.859,412,2.942,413,1.563,414,1.859,415,1.859,416,1.859]],["title/classes/Environment.html",[0,0.135,417,1.526]],["body/classes/Environment.html",[0,0.087,2,0.727,3,0.224,4,0.224,5,0.199,6,0.458,8,0.465,12,0.152,13,0.753,14,1.585,16,0.607,18,1.009,23,0.851,25,0.83,26,0.029,27,0.607,28,0.394,29,0.769,38,1.294,49,0.751,50,1.021,51,0.686,52,2.156,53,1.166,55,1.511,56,2.188,57,0.541,58,0.911,59,1.166,61,2.06,62,1.07,66,1.17,67,0.844,71,0.935,74,0.844,88,0.224,89,0.962,92,1.688,96,1.787,97,1.958,98,1.64,101,2.632,102,1.64,103,1.511,105,0.628,106,2.165,107,1.412,108,2.632,115,0.465,119,1.904,120,2.06,123,2.165,124,2.67,129,1.412,132,1.278,133,2.627,135,1.764,156,0.986,158,0.783,165,2.165,166,1.412,168,0.014,169,0.014,235,1.166,237,1.294,290,1.64,291,2.173,309,2.423,312,1.166,358,1.397,359,1.397,361,1.64,373,0.364,406,1.58,417,2.904,418,1.58,419,1.904,420,2.768,421,3.606,422,3.367,423,3.367,424,3.774,425,3.774,426,3.293,427,3.293,428,2.148,429,2.632,430,3.29,431,2.423,432,3.774,433,3.774,434,3.367,435,2.148,436,3.774,437,4.294,438,2.148,439,2.768,440,2.148,441,2.423,442,2.768,443,2.148,444,2.768,445,4.023,446,2.148,447,2.768,448,2.951,449,2.768,450,4.47,451,2.423,452,2.768,453,2.768,454,2.382,455,2.768,456,2.768,457,2.768,458,2.423,459,2.165,460,2.344,461,1.07,462,1.412,463,1.806,464,1.806,465,1.806,466,2.768,467,1.806,468,1.806,469,1.806,470,2.165,471,1.806,472,1.806,473,1.806,474,1.806,475,1.806,476,1.806,477,2.768,478,1.806,479,1.806,480,1.806,481,1.806,482,1.806,483,1.806,484,1.806,485,1.806,486,1.806,487,1.806,488,1.806,489,1.806,490,1.806,491,1.806,492,1.806,493,2.768,494,1.806,495,4.07,496,3.367,497,1.806,498,1.806,499,3.367,500,3.367,501,3.367,502,1.806,503,1.806,504,1.806,505,1.806,506,1.806,507,2.768,508,2.768,509,1.806,510,1.806,511,1.806,512,1.806,513,1.806,514,1.806]],["title/interfaces/EnvironmentMapHolder.html",[373,0.563,429,2.186]],["body/interfaces/EnvironmentMapHolder.html",[0,0.102,3,0.262,4,0.262,5,0.233,6,0.302,8,0.292,12,0.178,13,0.768,14,1.406,16,0.683,18,0.633,23,0.39,26,0.029,28,0.302,38,0.988,49,0.575,50,0.971,51,0.734,52,1.909,53,1.364,55,1.701,56,2.145,57,0.633,58,1.066,59,1.364,61,2.02,62,1.251,66,1.083,67,0.988,71,1.028,74,0.988,88,0.262,89,0.735,92,1.594,96,1.364,97,1.495,98,1.251,101,1.652,102,1.251,103,1.153,105,0.735,106,2.436,107,1.652,108,2.893,115,0.544,119,1.572,120,1.701,123,1.652,124,2.204,129,1.652,132,1.495,133,2.811,135,1.73,156,1.701,158,1.351,165,1.652,166,0.791,168,0.016,169,0.016,237,0.988,290,1.251,291,1.364,309,1.849,312,1.364,358,1.066,359,1.066,361,1.251,373,0.426,406,1.849,417,2.908,418,1.849,419,1.572,420,2.113,421,3.193,422,2.113,423,2.113,424,2.113,425,2.113,429,2.893,430,3.241,431,1.849,432,3.115,433,3.115,434,3.115,436,3.115,437,3.701,439,2.113,441,1.849,442,2.113,444,2.113,445,3.981,447,2.113,448,2.436,449,2.113,450,5.021,451,1.849,452,2.113,453,2.113,454,2.618,455,3.115,456,3.115,457,3.115,458,2.726,459,2.436,460,2.813,461,2.192,462,2.436,463,3.115,464,3.115,465,3.115,466,4.355,467,2.113,468,2.113,469,2.113,470,2.436,471,2.113,472,2.113,473,2.113,474,2.113,475,2.113,476,2.113,477,3.115,478,2.113,479,2.113,480,2.113,481,2.113,482,2.113,483,2.113,484,2.113,485,2.113,486,2.113,487,2.113,488,2.113,489,2.113,490,2.113,491,2.113,492,2.113,493,3.115,494,2.113,495,4.355,496,3.701,497,2.113,498,2.113,499,3.701,500,3.701,501,3.701,502,2.113,503,2.113,504,2.113,505,2.113,506,2.113,507,3.115,508,3.115,509,2.113,510,2.113,511,2.113,512,2.113,513,2.113,514,2.113,515,0.916,516,2.513]],["title/classes/Floor.html",[0,0.135,517,1.978]],["body/classes/Floor.html",[0,0.104,2,0.874,3,0.269,4,0.269,5,0.239,6,0.482,8,0.439,12,0.182,13,0.535,14,1.654,16,0.696,18,1.127,23,0.9,25,0.651,26,0.029,27,0.476,28,0.446,29,0.603,33,2.171,34,1.666,35,1.794,38,1.934,49,0.694,50,0.984,51,0.697,52,2.278,53,1.401,55,2.758,56,2.107,57,0.651,66,1.307,67,1.015,71,0.883,86,2.485,88,0.269,89,1.105,92,1.737,104,1.882,105,0.755,115,1.184,121,2.781,135,1.015,166,1.548,168,0.016,169,0.016,235,1.401,237,2.278,250,1.9,358,1.604,382,2.781,430,2.671,441,2.781,445,3.716,454,2.927,458,3.854,459,2.485,460,2.594,517,3.86,518,2.171,519,2.781,520,4.753,521,4.483,522,4.922,523,4.922,524,3.78,525,4.472,526,3.78,527,3.78,528,2.582,529,3.78,530,3.78,531,3.78,532,2.582,533,1.735,534,3.78,535,3.78,536,4.404,537,3.78,538,3.759,539,3.78,540,2.582,541,2.781,542,2.582,543,3.78,544,3.78,545,3.78,546,3.78,547,3.78,548,2.582,549,3.78,550,3.178,551,3.78,552,2.582,553,2.781,554,5.239,555,2.582,556,2.582,557,2.582,558,2.582,559,3.78,560,2.582,561,2.582,562,2.582,563,2.582,564,2.582,565,2.582,566,2.582,567,2.582,568,2.582,569,2.582,570,2.582,571,2.582,572,2.582]],["title/classes/Fox.html",[0,0.135,87,1.805]],["body/classes/Fox.html",[0,0.131,1,3.465,2,0.71,3,0.218,4,0.218,5,0.443,6,0.464,7,1.542,8,0.458,9,1.964,10,3.749,11,1.541,12,0.148,13,0.458,14,1.668,15,3.315,16,0.595,17,1.762,18,1.117,20,2.717,21,1.609,22,3.315,23,0.867,25,0.814,26,0.029,27,0.932,28,0.412,29,0.755,30,4.025,32,1.762,37,1.762,38,2.071,39,3.059,40,1.762,41,1.922,43,1.762,44,1.246,45,1.542,46,1.762,47,1.137,48,2.14,49,0.688,50,1.116,51,0.791,52,2.139,53,1.137,54,4.025,55,1.483,56,2.02,57,0.528,58,0.889,59,1.137,60,1.542,61,2.321,62,1.044,63,1.762,64,1.55,65,1.137,66,1.153,67,0.824,68,1.88,69,1.246,70,1.762,71,1.182,72,1.762,73,1.762,74,1.742,75,2.717,76,1.762,77,1.762,78,2.717,79,1.762,80,1.762,81,1.762,82,1.762,83,1.762,84,1.246,85,1.378,86,2.124,87,3.507,88,0.218,89,0.944,90,2.636,91,2.717,92,1.68,93,1.753,94,2.377,95,3.315,96,1.753,97,1.922,98,1.609,99,1.609,100,4.252,101,2.592,102,1.609,103,1.483,104,1.609,105,0.613,106,2.124,107,1.378,108,2.124,109,1.762,110,1.762,111,1.762,112,1.762,113,1.762,114,1.762,115,0.699,116,1.762,117,1.762,118,1.762,119,1.88,120,2.034,121,2.377,122,2.717,123,2.124,124,1.922,125,2.717,126,2.717,127,3.726,128,1.762,129,2.124,130,1.762,131,1.762,132,1.246,133,1.137,134,1.762,135,0.824,136,2.717,137,2.377,138,1.922,139,3.726,140,2.717,141,1.762,142,1.762,143,1.762,144,1.762,145,1.762,146,1.762,147,1.762,148,1.762,149,2.717,150,1.762,151,2.717,152,1.762,153,2.717,154,1.762,155,3.315,156,1.483,157,2.717,158,1.178,159,1.88,160,1.753,161,1.27,162,1.922,163,1.762,164,1.762,165,2.124,166,1.394,167,1.762,168,0.014,169,0.014,235,1.137,273,1.483,573,3.232,574,2.096,575,2.096,576,2.096,577,2.096,578,2.096,579,2.096,580,2.096]],["title/interfaces/IDestroyable.html",[66,0.972,373,0.563]],["body/interfaces/IDestroyable.html",[3,0.496,4,0.496,5,0.441,6,0.463,8,0.553,12,0.337,16,1.047,23,0.739,26,0.028,49,0.739,50,1.136,66,1.662,88,0.496,166,1.98,168,0.024,169,0.024,281,3.381,338,3.504,342,4.78,359,2.02,361,2.831,373,0.807,515,1.736,581,4.004,582,2.584,583,4.763,584,2.584,585,4.004,586,4.004,587,4.763,588,5.686,589,5.686]],["title/interfaces/IExperienceTime.html",[68,1.411,373,0.563]],["body/interfaces/IExperienceTime.html",[3,0.409,4,0.409,5,0.364,6,0.32,8,0.456,11,1.149,12,0.278,13,0.715,21,3.194,26,0.029,28,0.479,68,2.141,88,0.409,137,3.714,159,2.141,161,2.632,168,0.021,169,0.021,179,3.318,319,3.714,345,3.854,373,0.666,461,3.293,515,1.433,533,2.858,590,3.305,591,5.393,592,5.492,593,5.492,594,5.884,595,5.048,596,4.244,597,4.244,598,5.048,599,5.048]],["title/interfaces/IListenable.html",[373,0.563,600,1.978]],["body/interfaces/IListenable.html",[3,0.468,4,0.468,5,0.416,6,0.447,8,0.522,12,0.318,16,1.011,23,0.697,26,0.029,49,0.92,51,0.636,88,0.468,168,0.023,169,0.023,359,2.329,373,0.761,419,2.619,515,1.638,582,2.978,600,3.265,601,3.778,602,6.174,603,4.615,604,4.798,605,4.615,606,4.233,607,5.49,608,5.49,609,5.49,610,4.494,611,3.608,612,5.49,613,2.954]],["title/interfaces/IPointerSensible.html",[322,2.186,373,0.563]],["body/interfaces/IPointerSensible.html",[3,0.484,4,0.484,5,0.43,6,0.378,8,0.539,12,0.328,13,0.793,26,0.029,28,0.378,51,0.658,88,0.484,89,1.637,168,0.024,169,0.024,322,3.682,328,5.248,348,3.387,359,2.376,368,4.709,369,4.121,373,0.787,404,4.709,515,1.694,582,3.039,614,3.905,615,4.709,616,4.121,617,3.387,618,5.601,619,4.646]],["title/interfaces/IResizable.html",[232,1.656,373,0.563]],["body/interfaces/IResizable.html",[3,0.439,4,0.439,5,0.391,6,0.43,8,0.613,11,1.543,12,0.298,16,0.973,23,0.655,25,1.063,26,0.029,27,0.777,28,0.344,29,0.986,49,0.655,50,1.055,51,0.598,71,0.986,88,0.439,115,1.371,168,0.022,169,0.022,175,3.884,232,2.629,234,3.158,239,3.47,240,2.771,243,3.14,244,3.158,249,2.773,347,4.438,348,2.865,373,0.715,376,3.884,379,3.276,380,3.276,419,2.561,515,1.538,582,2.865,620,3.547,621,4.438,622,2.423,623,2.629,624,4.219,625,4.438,626,3.884,627,3.884]],["title/interfaces/ISize.html",[240,1.526,373,0.563]],["body/interfaces/ISize.html",[3,0.473,4,0.473,5,0.421,6,0.37,8,0.528,11,1.856,12,0.321,13,0.783,26,0.029,28,0.485,88,0.473,168,0.023,169,0.023,240,2.536,244,2.262,373,0.769,379,2.998,380,2.998,461,3.308,515,1.656,626,4.751,627,4.751,628,3.819,629,5.209,630,3.632]],["title/interfaces/ISource.html",[373,0.563,631,1.978]],["body/interfaces/ISource.html",[3,0.416,4,0.616,5,0.52,6,0.325,8,0.464,11,1.167,12,0.282,13,0.722,26,0.029,27,1.152,28,0.537,29,1.382,38,1.568,39,2.797,41,3.864,48,2.166,88,0.531,104,3.044,168,0.022,169,0.022,290,1.987,373,0.676,460,2.715,515,1.455,533,2.715,631,3.031,632,2.937,633,3.992,634,4.734,635,4.353,636,4.285,637,5.918,638,5.098,639,4.285,640,3.75,641,3.692,642,4.353,643,3.992,644,3.356,645,3.356]],["title/interfaces/IUpdatable.html",[64,1.307,373,0.563]],["body/interfaces/IUpdatable.html",[0,0.218,3,0.454,4,0.454,5,0.404,6,0.439,8,0.626,9,2.684,11,1.575,12,0.308,16,0.993,23,0.677,25,1.099,26,0.029,27,0.803,28,0.355,29,1.019,49,0.677,50,1.077,51,0.618,64,2.118,68,2.592,69,2.594,71,1.019,88,0.454,156,2.804,158,1.965,159,2.712,160,2.924,161,2.118,162,3.205,168,0.023,169,0.023,273,2.473,306,4.531,373,0.739,419,2.286,515,1.59,582,2.924,621,4.531,623,2.684,646,3.667,647,5.39,648,4.531,649,4.362,650,5.39]],["title/injectables/PointerService.html",[651,1.656,652,1.978]],["body/injectables/PointerService.html",[0,0.135,3,0.347,4,0.347,5,0.308,6,0.449,8,0.525,12,0.235,13,0.641,14,0.904,16,0.833,18,1.294,23,0.797,25,1.14,26,0.029,27,0.833,28,0.418,29,1.057,34,1.127,35,1.214,49,0.517,50,0.665,51,0.641,71,1.057,88,0.347,92,1.395,93,1.807,99,2.744,105,0.973,119,1.919,168,0.019,169,0.019,178,3.278,193,1.528,214,2.69,315,2.839,348,3.225,366,2.8,533,2.076,584,2.455,616,4.552,617,3.523,622,2.076,623,2.253,651,2.253,652,2.69,653,2.189,654,2.8,655,2.69,656,3.907,657,4.634,658,3.535,659,3.78,660,3.328,661,2.45,662,4.208,663,3.33,664,3.803,665,3.803,666,4.524,667,3.623,668,4.524,669,3.328,670,3.33,671,3.328,672,2.973,673,2.973,674,3.328,675,2.973,676,3.328,677,3.33,678,3.328,679,2.973,680,3.328,681,3.328,682,2.45,683,2.45,684,2.45,685,3.33,686,3.33,687,2.45]],["title/classes/RendererHolder.html",[0,0.135,324,2.186]],["body/classes/RendererHolder.html",[0,0.116,2,0.97,3,0.298,4,0.298,5,0.265,6,0.462,8,0.551,11,1.191,12,0.202,13,0.577,14,1.539,16,0.751,18,1.195,23,0.847,25,1.026,26,0.029,27,0.751,28,0.386,29,0.952,49,0.736,50,1.09,51,0.859,56,2.175,57,0.722,64,1.863,65,1.554,66,1.386,67,1.126,71,1.206,74,1.126,88,0.298,89,1.191,92,1.539,105,0.837,115,1.262,119,2.191,120,1.87,135,1.863,159,1.728,166,1.624,168,0.017,169,0.017,195,2.678,196,2.211,202,2.211,228,2.423,230,3.659,232,2.361,233,2.717,234,2.029,235,1.554,237,2.228,239,2.678,240,2.37,243,3.071,244,2.823,248,2.108,249,1.883,250,2.108,251,1.426,252,2.408,253,2.108,254,2.408,255,2.408,256,1.883,259,2.408,268,2.408,273,2.37,275,3.919,276,3.488,281,2.423,288,2.408,321,4.387,324,2.678,358,1.728,376,2.997,379,2.211,380,2.211,459,2.678,470,1.883,533,1.87,688,2.408,689,4.342,690,4.074,691,5.165,692,5.165,693,2.865,694,2.865,695,2.865,696,4.074,697,3.425,698,2.865,699,4.074,700,4.074,701,2.865,702,2.865,703,2.865,704,2.865,705,2.865,706,2.865,707,2.865,708,2.865,709,2.865,710,2.865,711,2.865,712,2.865,713,2.865,714,2.865,715,2.865]],["title/classes/ResourceLoader.html",[0,0.135,52,1.307]],["body/classes/ResourceLoader.html",[0,0.069,2,0.576,3,0.177,4,0.582,5,0.508,6,0.475,8,0.503,12,0.12,13,0.388,14,1.642,16,0.505,18,0.867,23,0.894,25,0.995,26,0.029,27,0.727,28,0.412,29,0.922,34,1.647,35,1.687,38,2.41,39,2.156,41,3.19,47,1.487,49,0.811,50,1.096,51,0.689,52,1.077,55,1.258,56,0.576,57,0.429,60,1.252,66,1.006,67,0.669,71,1.137,74,0.669,88,0.285,89,0.801,90,3.108,92,1.743,94,1.252,104,2.521,105,0.497,115,1.274,133,0.923,158,0.62,166,1.242,168,0.012,169,0.012,193,0.781,237,1.077,246,2.305,281,1.63,290,0.847,308,4.774,312,0.923,348,2.142,359,0.722,361,1.966,417,1.258,419,1.46,430,2.747,448,1.802,451,2.533,460,1.987,461,2.867,462,1.802,521,2.905,600,2.047,604,3.185,606,2.595,613,1.118,622,1.258,623,1.365,631,3.01,634,2.017,635,1.252,641,2.263,642,1.252,658,2.752,716,1.252,717,5.215,718,2.742,719,3.319,720,3.948,721,3.89,722,3.948,723,5.226,724,4.627,725,3.948,726,2.742,727,3.948,728,2.742,729,2.742,730,3.948,731,1.702,732,2.742,733,2.263,734,3.404,735,2.742,736,1.702,737,2.742,738,3.948,739,2.742,740,1.702,741,1.702,742,2.742,743,5.226,744,5.226,745,2.742,746,2.742,747,1.702,748,4.256,749,2.742,750,1.702,751,1.702,752,1.702,753,2.305,754,2.742,755,2.305,756,3.948,757,2.742,758,1.702,759,3.89,760,3.639,761,2.742,762,5.123,763,2.742,764,3.185,765,1.702,766,2.742,767,2.742,768,2.742,769,1.702,770,2.742,771,2.742,772,1.702,773,2.742,774,1.702,775,2.742,776,2.742,777,2.305,778,1.702,779,1.702,780,1.702,781,1.702,782,1.702,783,2.894,784,1.43,785,3.948,786,3.319,787,3.443,788,3.443,789,3.443,790,1.702,791,3.443,792,3.443,793,1.43,794,1.702,795,1.43,796,2.742,797,1.702,798,1.702,799,1.702,800,1.702,801,1.702,802,1.702,803,1.702,804,1.702,805,1.702,806,1.702,807,1.702,808,1.702,809,1.702,810,1.702,811,1.702,812,1.702,813,1.702]],["title/injectables/ScreenSizeService.html",[251,1.656,651,1.656]],["body/injectables/ScreenSizeService.html",[0,0.109,3,0.279,4,0.279,5,0.248,6,0.477,8,0.451,9,1.935,11,1.136,12,0.19,13,0.55,14,0.728,16,0.716,18,1.152,21,2.762,23,0.888,25,0.979,26,0.029,27,0.716,28,0.372,29,0.908,34,0.908,35,0.978,49,0.972,50,0.536,51,0.647,71,0.627,84,2.311,88,0.279,92,1.241,93,1.456,99,1.935,105,0.784,115,1.084,119,1.649,168,0.016,169,0.016,178,2.98,193,1.231,214,2.311,234,2.917,240,2.3,243,3.484,244,2.762,251,1.935,291,3.369,312,2.719,315,2.3,341,3.268,379,2.719,380,2.719,454,2.311,461,2.762,533,1.784,584,2.719,606,2.555,611,2.555,617,3.451,622,1.784,623,1.935,626,3.363,627,3.363,629,2.255,630,2.555,651,1.935,653,1.763,655,2.311,656,3.646,658,2.311,659,3.363,660,2.859,661,1.974,662,3.986,664,3.268,667,2.555,669,2.859,671,2.859,672,2.555,673,2.555,674,2.859,675,2.555,676,2.859,678,2.859,679,2.555,680,2.859,681,3.687,682,1.974,683,1.974,684,1.974,687,1.974,814,4.925,815,2.255,816,5.012,817,5.012,818,5.012,819,5.012,820,2.683,821,3.887,822,3.887,823,2.683,824,2.683,825,4.472,826,3.887,827,3.887,828,2.683,829,2.683,830,2.683,831,2.683,832,2.683,833,2.683,834,2.683,835,2.683,836,2.683,837,2.683,838,2.683,839,2.683]],["title/components/ThreeViewerComponent.html",[170,1.805,201,1.805]],["body/components/ThreeViewerComponent.html",[0,0.106,3,0.274,4,0.274,5,0.244,6,0.449,8,0.445,10,2.519,12,0.186,13,0.543,14,1.227,16,0.706,18,1.139,23,0.855,25,0.663,26,0.029,27,0.833,28,0.368,29,0.615,48,2.08,49,0.595,50,0.903,51,0.748,56,1.298,57,1.468,71,1.056,88,0.274,89,1.12,92,1.496,102,2.628,105,0.769,115,0.829,120,1.759,135,1.506,161,1.506,168,0.016,169,0.016,170,2.864,171,1.428,172,2.279,173,1.936,174,2.212,175,1.936,176,2.212,180,1.936,181,2.212,182,4.175,183,4.175,184,3.222,186,3.222,193,1.208,194,2.212,195,2.519,196,2.08,197,1.936,198,4.175,199,2.212,200,2.212,201,2.695,202,2.864,203,2.212,204,2.212,222,4.053,234,1.908,237,1.952,251,2.902,253,1.936,275,3.738,291,2.695,315,2.973,345,3.638,353,1.565,358,2.561,369,2.82,431,2.82,611,2.519,622,2.528,630,2.519,652,3.466,655,3.276,689,3.8,760,2.212,786,2.212,840,2.212,841,3.833,842,3.8,843,3.833,844,3.222,845,4.521,846,4.521,847,4.521,848,3.833,849,4.521,850,4.175,851,5.51,852,2.632,853,3.382,854,3.833,855,3.326,856,2.632,857,3.833,858,3.833,859,2.632,860,3.833,861,4.521,862,2.632,863,3.833,864,2.632,865,3.833,866,3.222,867,3.833,868,3.222,869,2.632,870,2.632,871,2.632,872,2.632,873,2.632,874,2.632,875,2.632,876,2.632,877,2.632,878,2.632,879,2.632,880,2.632,881,2.632,882,2.632,883,2.632,884,2.632,885,2.632,886,2.632,887,2.632,888,2.632]],["title/injectables/TimeService.html",[651,1.656,853,1.978]],["body/injectables/TimeService.html",[0,0.109,3,0.282,4,0.282,5,0.25,6,0.467,8,0.454,9,2.504,11,1.47,12,0.191,13,0.554,14,1.365,16,0.72,18,1.157,21,1.946,23,0.863,25,0.985,26,0.029,27,0.72,28,0.41,29,0.913,34,1.323,35,1.425,49,0.712,50,0.917,51,0.65,68,2.133,71,0.632,74,1.062,88,0.282,92,1.557,93,1.467,99,2.504,105,0.79,115,0.845,119,1.658,156,1.794,158,1.425,159,1.658,160,2.491,161,2.485,168,0.017,169,0.017,178,2.325,193,1.241,214,2.325,273,1.794,312,1.467,315,2.308,345,3.613,348,2.121,353,3.307,358,1.658,419,1.658,519,2.876,533,1.794,584,2.729,591,4.228,592,4.228,593,4.228,617,3.405,622,2.308,623,1.946,651,1.946,653,1.777,655,2.325,656,3.655,658,2.325,659,3.377,660,2.876,661,1.989,662,4.087,667,3.306,669,2.876,671,2.876,672,2.569,673,2.569,674,3.7,675,3.306,676,2.876,678,2.876,679,3.306,680,2.876,681,2.876,682,1.989,683,1.989,684,1.989,687,1.989,734,2.876,764,2.876,853,2.325,855,2.876,889,2.273,890,3.909,891,5.03,892,2.704,893,2.704,894,3.909,895,2.704,896,2.704,897,3.909,898,3.909,899,3.286,900,3.286,901,2.704,902,4.591,903,5.561,904,2.704,905,4.591,906,2.704,907,4.591,908,2.704,909,2.704,910,2.704,911,2.704,912,2.704,913,2.704]],["title/classes/World.html",[0,0.135,327,1.805]],["body/classes/World.html",[0,0.101,2,0.842,3,0.259,4,0.259,5,0.405,6,0.477,8,0.508,9,1.83,11,1.074,12,0.176,13,0.521,14,1.557,16,0.677,18,1.102,23,0.89,25,0.926,26,0.029,27,0.677,28,0.44,29,0.859,34,0.842,35,0.906,44,2.186,47,1.349,49,0.57,50,0.966,51,0.856,52,1.899,53,1.349,56,1.983,57,0.626,58,2.433,59,1.349,64,1.719,65,1.349,66,1.278,67,0.977,68,2.05,69,1.479,71,1.022,86,2.416,87,3.178,88,0.259,89,1.074,90,2.874,92,1.76,98,1.83,102,2.688,103,1.687,104,2.406,105,0.727,115,1.115,138,2.186,156,1.687,158,1.34,159,1.559,160,1.995,161,1.445,162,2.186,166,1.52,168,0.016,169,0.016,196,1.995,233,2.406,235,1.349,273,1.687,298,2.705,327,3.382,331,3.091,337,2.705,345,2.874,352,3.091,353,2.186,358,2.594,361,1.83,417,2.773,419,2.05,421,2.416,430,1.995,517,3.483,553,2.705,584,1.995,585,3.091,586,3.091,613,1.634,622,1.687,623,2.406,640,2.705,733,1.634,914,2.09,915,3.676,916,5.735,917,3.676,918,3.091,919,2.486,920,4.833,921,2.486,922,3.676,923,2.486,924,3.091,925,3.676,926,2.486,927,3.676,928,3.676,929,3.676,930,2.486,931,2.486,932,2.486,933,2.486,934,2.486,935,2.486,936,2.486,937,2.09,938,2.486,939,2.486,940,4.374,941,3.676,942,2.486,943,2.486,944,2.486,945,2.486,946,2.486,947,2.486,948,2.486,949,2.486,950,2.486]],["title/coverage.html",[951,3.8]],["body/coverage.html",[0,0.261,1,2.296,5,0.323,6,0.552,7,3.437,26,0.029,28,0.284,52,1.373,58,1.482,64,1.373,66,1.021,68,1.482,87,1.895,115,0.755,168,0.02,169,0.02,170,2.535,171,1.895,177,2.937,201,1.895,222,2.57,226,2.296,227,2.937,232,1.739,240,1.603,251,1.739,261,5.72,270,2.296,271,2.937,289,2.937,315,1.603,316,2.937,322,2.296,324,2.296,327,1.895,373,1.073,417,2.416,418,3.437,429,2.296,517,2.077,518,2.937,581,2.937,590,2.937,600,2.077,601,2.937,614,2.937,620,2.937,628,2.937,631,2.077,632,2.57,646,2.937,651,2.621,652,2.077,654,2.937,688,2.937,716,2.57,733,2.296,814,2.937,815,2.937,840,2.937,853,2.077,889,2.937,914,2.937,951,2.937,952,2.937,953,3.493,954,3.493,955,6.028,956,4.672,957,5.62,958,5.858,959,4.672,960,2.937,961,2.57,962,5.264,963,5.264,964,3.493,965,3.493,966,5.264,967,3.493,968,2.937,969,2.937,970,3.493,971,3.493]],["title/dependencies.html",[208,2.626,972,2.343]],["body/dependencies.html",[26,0.029,57,1.208,61,2.201,62,2.388,168,0.024,169,0.024,193,2.201,208,3.152,219,4.8,220,4.2,613,3.152,973,4.796,974,6.66,975,4.796,976,4.796,977,4.796,978,4.796,979,4.796,980,4.796,981,4.796,982,4.796,983,4.796,984,4.796,985,4.796,986,4.796]],["title/miscellaneous/enumerations.html",[987,1.512,988,3.358]],["body/miscellaneous/enumerations.html",[6,0.411,12,0.356,26,0.028,28,0.411,35,2.269,39,2.51,48,2.735,104,2.51,168,0.025,169,0.025,460,2.698,632,3.709,641,3.314,642,4.325,644,4.238,645,4.238,987,2.735,988,4.238,989,5.041]],["title/index.html",[12,0.197,990,2.343,991,2.343]],["body/index.html",[0,0.207,10,1.598,11,1.057,18,0.612,21,1.21,26,0.026,27,0.448,28,0.198,34,0.823,38,0.955,39,2.38,49,0.377,51,0.611,52,0.955,55,1.981,56,1.461,57,1.287,61,1.115,64,0.955,66,0.71,74,2.104,84,2.843,87,1.962,89,1.397,90,3.038,96,1.319,99,1.21,103,1.981,115,1.259,120,1.115,124,2.15,156,1.115,158,1.318,159,1.534,161,0.955,166,0.765,168,0.015,169,0.015,170,1.962,172,1.446,173,3.176,178,2.843,179,1.598,189,2.043,190,2.043,191,2.043,202,1.962,228,3.185,229,2.043,230,2.567,231,2.66,232,1.21,233,1.8,234,1.8,237,2.104,242,2.043,243,1.446,244,1.8,251,1.8,272,2.043,273,1.115,290,2.38,291,1.962,295,2.043,296,2.043,307,2.043,315,2.615,317,2.043,318,2.043,319,2.66,320,2.043,321,2.66,323,2.043,325,2.043,326,2.043,327,1.319,337,1.788,338,2.66,344,2.043,349,2.043,353,1.446,358,1.031,359,2.167,363,2.043,372,2.043,378,2.043,379,1.962,380,1.962,382,1.788,417,1.659,421,1.598,430,2.342,445,3.358,448,1.598,460,1.659,462,2.376,515,0.886,517,2.15,519,1.788,520,3.039,521,3.176,533,1.115,536,3.629,538,2.043,541,1.788,550,2.043,553,1.788,582,2.593,584,1.319,596,2.043,600,1.446,604,1.788,605,2.043,606,1.598,611,1.598,616,2.66,617,1.962,622,1.115,625,2.043,630,2.376,640,1.788,648,3.629,652,1.446,655,1.446,656,2.376,657,4.018,658,2.843,662,2.837,665,2.043,667,1.598,672,2.376,675,1.598,679,1.598,697,2.043,717,2.043,719,2.043,721,2.043,748,2.043,753,2.043,759,3.039,764,2.66,777,2.043,844,2.043,850,2.043,853,1.446,855,3.94,899,3.039,900,2.043,924,2.043,937,2.043,952,2.043,961,1.788,992,2.431,993,2.431,994,3.615,995,2.431,996,2.431,997,3.615,998,2.431,999,2.431,1000,2.431,1001,2.431,1002,2.431,1003,3.039,1004,2.431,1005,3.615,1006,2.431,1007,2.431,1008,2.431,1009,3.615,1010,2.431,1011,2.431,1012,2.431,1013,2.431,1014,2.431,1015,2.431,1016,3.615,1017,2.431,1018,3.039,1019,3.629,1020,2.431,1021,2.431,1022,2.431,1023,2.431,1024,4.317,1025,2.431,1026,2.431,1027,2.431,1028,2.431,1029,2.431,1030,2.431,1031,2.431,1032,2.431,1033,2.431,1034,2.043,1035,2.431,1036,4.317,1037,2.431,1038,4.78,1039,2.431,1040,2.431,1041,2.043,1042,2.431,1043,2.043,1044,2.431,1045,4.78,1046,2.431,1047,2.431,1048,2.431,1049,2.043,1050,2.431,1051,2.431,1052,3.615,1053,3.615,1054,2.431,1055,2.431,1056,4.317,1057,2.431,1058,2.431,1059,2.431,1060,2.431,1061,2.431,1062,2.431,1063,2.431,1064,2.431,1065,3.039,1066,2.431,1067,2.431,1068,2.431,1069,3.615,1070,2.431,1071,2.431,1072,2.043,1073,2.431,1074,2.431,1075,2.431,1076,2.431,1077,2.431,1078,2.431,1079,3.615,1080,3.615,1081,4.78,1082,2.431,1083,3.615,1084,3.615,1085,2.431,1086,2.431,1087,2.431,1088,2.431,1089,2.431,1090,2.431,1091,2.431,1092,2.431,1093,2.431,1094,2.431,1095,2.431,1096,2.431,1097,2.431,1098,2.431,1099,2.431,1100,2.431,1101,2.431,1102,2.431,1103,2.431,1104,2.431,1105,2.431,1106,2.431,1107,2.431,1108,3.615,1109,2.043,1110,2.431,1111,2.431,1112,3.615,1113,2.431,1114,2.431,1115,2.431,1116,3.615,1117,2.431,1118,2.431,1119,2.431,1120,2.431,1121,2.431,1122,2.431,1123,2.431,1124,3.615,1125,2.431,1126,2.431]],["title/license.html",[990,2.343,991,2.343,1127,2.343]],["body/license.html",[11,1.135,21,1.578,23,0.317,26,0.013,44,1.216,45,3.218,48,1.109,158,1.594,161,1.246,168,0.013,169,0.013,188,1.719,197,2.332,327,1.72,454,1.885,461,1.578,541,1.504,597,1.719,603,1.719,615,3.263,639,1.719,673,1.344,755,2.665,783,2.665,842,1.719,866,1.719,868,3.263,918,1.719,1003,1.719,1018,1.719,1019,4.391,1034,1.719,1041,4.391,1049,1.719,1065,1.719,1072,1.719,1109,1.719,1127,4.21,1128,5.224,1129,5.399,1130,4.733,1131,5.224,1132,2.044,1133,2.044,1134,2.044,1135,5.399,1136,2.044,1137,3.17,1138,4.733,1139,2.044,1140,2.044,1141,2.044,1142,2.044,1143,2.044,1144,3.882,1145,2.044,1146,4.733,1147,4.374,1148,2.044,1149,3.882,1150,2.044,1151,2.044,1152,2.044,1153,2.044,1154,5.399,1155,2.044,1156,2.044,1157,3.17,1158,2.044,1159,2.044,1160,3.17,1161,5.768,1162,5.768,1163,6.345,1164,3.17,1165,3.17,1166,2.044,1167,2.044,1168,2.044,1169,3.17,1170,3.17,1171,6.445,1172,2.044,1173,3.882,1174,3.17,1175,2.044,1176,3.17,1177,3.17,1178,2.044,1179,3.882,1180,2.044,1181,3.17,1182,3.17,1183,4.374,1184,2.044,1185,2.044,1186,2.044,1187,4.374,1188,3.17,1189,2.044,1190,2.044,1191,2.044,1192,3.17,1193,2.044,1194,2.044,1195,2.044,1196,2.044,1197,3.882,1198,4.733,1199,5.543,1200,4.733,1201,3.882,1202,2.044,1203,2.044,1204,2.044,1205,3.17,1206,2.044,1207,3.17,1208,1.719,1209,2.044,1210,2.044,1211,2.044,1212,2.044,1213,2.044,1214,2.044,1215,2.044,1216,2.044,1217,2.044,1218,2.044,1219,3.17,1220,2.044,1221,5.768,1222,4.733,1223,2.044,1224,2.044,1225,2.044,1226,3.17,1227,5.224,1228,2.044,1229,2.044,1230,2.044,1231,2.044,1232,2.044,1233,2.044,1234,2.044,1235,2.044,1236,2.044,1237,2.044,1238,2.044,1239,2.044,1240,2.044,1241,2.044,1242,4.374,1243,2.044,1244,2.044,1245,2.044,1246,2.044,1247,3.882,1248,2.044,1249,2.044,1250,2.044,1251,3.17,1252,2.044,1253,2.044,1254,2.044,1255,3.882,1256,3.17,1257,2.044,1258,2.044,1259,2.044,1260,2.044,1261,3.17,1262,3.17,1263,2.044,1264,2.044,1265,2.044,1266,2.044,1267,2.044,1268,2.044,1269,2.044,1270,4.733,1271,2.044,1272,2.044,1273,2.044,1274,2.044,1275,2.044,1276,1.719,1277,2.044,1278,2.044,1279,2.044,1280,2.044,1281,3.17,1282,2.044,1283,3.882,1284,2.044,1285,2.044,1286,1.719,1287,2.044,1288,2.044,1289,5.224,1290,3.882,1291,2.044,1292,5.224,1293,3.17,1294,3.17,1295,2.044,1296,3.882,1297,2.044,1298,2.044,1299,2.044,1300,2.044,1301,2.044,1302,2.044,1303,5.008,1304,3.17,1305,3.882,1306,3.17,1307,2.044,1308,2.044,1309,2.044,1310,2.044,1311,2.044,1312,4.733,1313,3.17,1314,3.17,1315,3.882,1316,3.17,1317,3.17,1318,3.17,1319,3.17,1320,3.17,1321,3.17,1322,2.044,1323,2.044,1324,2.044,1325,2.044,1326,2.044,1327,2.044,1328,2.044,1329,4.374,1330,2.044,1331,2.044,1332,2.044,1333,2.044,1334,2.044,1335,2.044,1336,2.044,1337,2.044,1338,2.044,1339,4.374,1340,3.882,1341,2.044,1342,3.17,1343,3.882,1344,3.17,1345,3.17,1346,3.17,1347,2.044,1348,2.044,1349,2.044,1350,2.044,1351,2.044,1352,3.17,1353,2.044,1354,4.374,1355,2.044,1356,2.044,1357,2.044,1358,2.044,1359,3.17,1360,2.044,1361,2.044,1362,2.044,1363,2.044,1364,2.044,1365,2.044,1366,2.044,1367,2.044,1368,2.044,1369,2.044,1370,2.044,1371,3.17,1372,2.044,1373,2.044,1374,2.044,1375,2.044,1376,2.044,1377,2.044,1378,2.044,1379,2.044,1380,2.044,1381,3.17,1382,2.044,1383,2.044,1384,2.044,1385,2.044,1386,2.044,1387,2.044,1388,2.044,1389,2.044,1390,2.044,1391,2.044,1392,3.17,1393,2.044,1394,2.044,1395,2.044,1396,2.044,1397,2.044,1398,2.044,1399,2.044,1400,3.17,1401,2.044,1402,2.044,1403,2.044,1404,2.044,1405,2.044,1406,2.044,1407,2.044,1408,2.044,1409,2.044,1410,2.044,1411,2.044,1412,2.044]],["title/modules.html",[207,3.325]],["body/modules.html",[26,0.026,168,0.026,169,0.026,206,3.457,207,3.869,220,3.869,1413,5.259,1414,5.259,1415,5.259]],["title/overview.html",[1416,3.8]],["body/overview.html",[2,1.639,26,0.027,84,2.879,168,0.024,169,0.024,171,3.592,172,2.879,201,3.321,205,4.07,206,4.351,208,3.773,209,4.07,210,4.07,211,4.07,212,4.826,213,4.07,214,2.879,470,3.182,515,1.765,653,3.182,825,4.07,1276,4.07,1416,4.07,1417,4.841]],["title/properties.html",[13,0.566,972,2.343]],["body/properties.html",[13,0.749,26,0.027,168,0.026,169,0.026,1286,4.444,1418,5.286]],["title/miscellaneous/typealiases.html",[987,1.512,1419,3.995]],["body/miscellaneous/typealiases.html",[6,0.473,12,0.349,26,0.027,28,0.473,38,1.939,39,2.456,49,0.766,168,0.025,169,0.025,290,2.456,359,2.093,413,4.147,460,2.264,617,3.15,636,4.147,641,3.243,716,3.629,762,4.88,987,2.677,1043,4.147,1420,4.933,1421,4.933,1422,4.933,1423,4.933,1424,4.933,1425,4.933,1426,4.933,1427,4.933,1428,4.933]],["title/miscellaneous/variables.html",[987,1.512,1429,3.358]],["body/miscellaneous/variables.html",[6,0.344,12,0.299,26,0.029,27,1.113,28,0.524,34,1.953,35,2.103,47,2.294,85,2.779,135,1.661,168,0.022,169,0.022,361,2.105,417,2.912,419,2.242,631,2.514,634,4.243,635,3.11,733,3.475,734,3.11,784,3.554,793,4.444,795,3.554,960,3.554,961,3.889,968,3.554,969,3.554,987,2.294,1208,5.23,1429,4.849,1430,4.228,1431,4.228,1432,4.228,1433,4.228,1434,4.228,1435,4.228,1436,4.228,1437,4.228,1438,4.228,1439,4.228,1440,4.228,1441,4.228,1442,4.228,1443,4.228,1444,4.228,1445,4.228,1446,4.228]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":903,"title":{},"body":{"injectables/TimeService.html":{}}}],["0.001",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.11.4",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["0.141.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["0.16.1",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1418,"title":{},"body":{"properties.html":{}}}],["0.4",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.5",{"_index":567,"title":{},"body":{"classes/Floor.html":{}}}],["0xff0000",{"_index":1112,"title":{},"body":{"index.html":{}}}],["1",{"_index":84,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1132,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":559,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1276,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14",{"_index":1013,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["1996",{"_index":1278,"title":{},"body":{"license.html":{}}}],["2",{"_index":825,"title":{},"body":{"injectables/ScreenSizeService.html":{},"overview.html":{}}}],["2.25",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.3.0",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{},"overview.html":{}}}],["35",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":358,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1264,"title":{},"body":{"license.html":{}}}],["4/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":500,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":527,"title":{},"body":{"classes/Floor.html":{}}}],["7.5.0",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["8/8",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1417,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1272,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1378,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1301,"title":{},"body":{"license.html":{}}}],["above",{"_index":826,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["absence",{"_index":1392,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1426,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["accessible",{"_index":307,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["account",{"_index":1349,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1395,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1409,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":310,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1239,"title":{},"body":{"license.html":{}}}],["add",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":382,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{},"index.html":{}}}],["addition",{"_index":1350,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1216,"title":{},"body":{"license.html":{}}}],["adds",{"_index":773,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["advertising",{"_index":1320,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1352,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1221,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1303,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1368,"title":{},"body":{"license.html":{}}}],["against",{"_index":1257,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1284,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1173,"title":{},"body":{"license.html":{}}}],["angular",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["angular's",{"_index":1039,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":1027,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["antialias",{"_index":702,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":171,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1289,"title":{},"body":{"license.html":{}}}],["application",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"classes/DebugGUI.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["applied",{"_index":541,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":439,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["appmodule",{"_index":206,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1029,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1043,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":1271,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1370,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1020,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1304,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1220,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1140,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":453,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1245,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1172,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1158,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":584,"title":{},"body":{"interfaces/IDestroyable.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["axiom_3d",{"_index":1126,"title":{},"body":{"index.html":{}}}],["b",{"_index":1382,"title":{},"body":{"license.html":{}}}],["based",{"_index":673,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["basis",{"_index":1143,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1114,"title":{},"body":{"index.html":{}}}],["behaviour",{"_index":672,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["below",{"_index":1164,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1322,"title":{},"body":{"license.html":{}}}],["between",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{}}}],["bind",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":335,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":1017,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":309,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":860,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":1028,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1115,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1117,"title":{},"body":{"index.html":{}}}],["break",{"_index":792,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["browse",{"_index":1415,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":999,"title":{},"body":{"index.html":{}}}],["build",{"_index":1189,"title":{},"body":{"license.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["c",{"_index":1399,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":594,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["calculations",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":759,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["callback",{"_index":658,"title":{},"body":{"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["called",{"_index":1090,"title":{},"body":{"index.html":{}}}],["camera",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["cameraholder",{"_index":226,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":389,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":763,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cancellation",{"_index":1332,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":849,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["care",{"_index":1084,"title":{},"body":{"index.html":{}}}],["case",{"_index":783,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["casting",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1305,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1131,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1175,"title":{},"body":{"license.html":{}}}],["change",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["changedetection",{"_index":821,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["changes",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{}}}],["check",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["checks",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":407,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":409,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":410,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":372,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["chosen",{"_index":231,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"index.html":{}}}],["circlegeometry",{"_index":525,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":526,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1187,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":589,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":857,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1401,"title":{},"body":{"license.html":{}}}],["client",{"_index":1141,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1018,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":929,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":536,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1201,"title":{},"body":{"license.html":{}}}],["common",{"_index":1070,"title":{},"body":{"index.html":{}}}],["commons",{"_index":1129,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1049,"title":{},"body":{"index.html":{},"license.html":{}}}],["compensation",{"_index":1218,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1259,"title":{},"body":{"license.html":{}}}],["complete",{"_index":808,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["completed",{"_index":756,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["component",{"_index":170,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"index.html":{},"overview.html":{}}}],["composing",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1100,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1386,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1159,"title":{},"body":{"license.html":{}}}],["configure",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":424,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":522,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":549,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":425,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":523,"title":{},"body":{"classes/Floor.html":{}}}],["consents",{"_index":1405,"title":{},"body":{"license.html":{}}}],["consider",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceLoader.html":{}}}],["consideration",{"_index":1217,"title":{},"body":{"license.html":{}}}],["considered",{"_index":697,"title":{},"body":{"classes/RendererHolder.html":{},"index.html":{}}}],["console.log('loading",{"_index":807,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log('play",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log('resources",{"_index":936,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":813,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(`loading",{"_index":810,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(newaction",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["constructor(camera",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":329,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(ngzone",{"_index":661,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":731,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["constructor(timeservice",{"_index":852,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["consumer",{"_index":617,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["consumes",{"_index":618,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["contained",{"_index":377,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":357,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":841,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":519,"title":{},"body":{"classes/Floor.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["contemplated",{"_index":1338,"title":{},"body":{"license.html":{}}}],["content",{"_index":1073,"title":{},"body":{"index.html":{}}}],["contract",{"_index":582,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"index.html":{}}}],["contracts",{"_index":1076,"title":{},"body":{"index.html":{}}}],["contrary",{"_index":1372,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1295,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1202,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1180,"title":{},"body":{"license.html":{}}}],["control",{"_index":1054,"title":{},"body":{"index.html":{}}}],["controls",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":270,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":394,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1319,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1161,"title":{},"body":{"license.html":{}}}],["core",{"_index":317,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["corporation",{"_index":1134,"title":{},"body":{"license.html":{}}}],["correct",{"_index":448,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["correctly",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1275,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":951,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1139,"title":{},"body":{"license.html":{}}}],["creative",{"_index":1128,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1166,"title":{},"body":{"license.html":{}}}],["cube",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["cube_texture",{"_index":645,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":641,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":720,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":735,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cultural",{"_index":1181,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1206,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{},"license.html":{}}}],["currenttime",{"_index":905,"title":{},"body":{"injectables/TimeService.html":{}}}],["d",{"_index":1407,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1151,"title":{},"body":{"license.html":{}}}],["damping",{"_index":1055,"title":{},"body":{"index.html":{}}}],["dat",{"_index":1035,"title":{},"body":{"index.html":{}}}],["data",{"_index":1268,"title":{},"body":{"license.html":{}}}],["database",{"_index":1174,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1280,"title":{},"body":{"license.html":{}}}],["date",{"_index":1362,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":902,"title":{},"body":{"injectables/TimeService.html":{}}}],["debug",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["debug/debuggui",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":58,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debuggui.destroy",{"_index":416,"title":{},"body":{"classes/Engine.html":{}}}],["debuggui.getui",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui.instance",{"_index":313,"title":{},"body":{"classes/DebugGUI.html":{}}}],["debugobject",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["debugui",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debugui.addfolder('environment",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["debugui.addfolder('fox",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":862,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1360,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1394,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":591,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["dependencies",{"_index":208,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":777,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["depicted",{"_index":1254,"title":{},"body":{"license.html":{}}}],["described",{"_index":925,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["destroy",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["destroyable",{"_index":363,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyable.destroy",{"_index":415,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":323,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyed",{"_index":927,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":858,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detection",{"_index":667,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["determine",{"_index":671,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["detriment",{"_index":1325,"title":{},"body":{"license.html":{}}}],["development",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["different",{"_index":1075,"title":{},"body":{"index.html":{}}}],["directional",{"_index":436,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1373,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1149,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1397,"title":{},"body":{"license.html":{}}}],["display",{"_index":842,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":920,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":865,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":553,"title":{},"body":{"classes/Floor.html":{},"classes/World.html":{},"index.html":{}}}],["disposed",{"_index":583,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":339,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{}}}],["disrupt",{"_index":1335,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1267,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1226,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1137,"title":{},"body":{"license.html":{}}}],["document",{"_index":1138,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":952,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1104,"title":{},"body":{"index.html":{}}}],["done",{"_index":738,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["down",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["draco",{"_index":1099,"title":{},"body":{"index.html":{}}}],["due",{"_index":764,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["duration",{"_index":1316,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1411,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["easily",{"_index":1036,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":320,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["effect",{"_index":1232,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1361,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1212,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":592,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["elects",{"_index":1224,"title":{},"body":{"license.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":861,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":337,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{},"index.html":{}}}],["emit",{"_index":602,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":737,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitter",{"_index":767,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitting",{"_index":897,"title":{},"body":{"injectables/TimeService.html":{}}}],["enabled",{"_index":1056,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":550,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["end",{"_index":340,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":315,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":341,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":878,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":870,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/pointer/pointer.service",{"_index":873,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/size/screen",{"_index":872,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/time/time.service",{"_index":871,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engineconsumer",{"_index":659,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["enjoyment",{"_index":1337,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":867,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enum",{"_index":643,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":988,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":417,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":944,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":422,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":429,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1334,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1034,"title":{},"body":{"index.html":{},"license.html":{}}}],["error",{"_index":760,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":787,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["error('canvas",{"_index":876,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":798,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["errors",{"_index":1396,"title":{},"body":{"license.html":{}}}],["european",{"_index":1273,"title":{},"body":{"license.html":{}}}],["event",{"_index":348,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["eventemitter",{"_index":721,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["events",{"_index":611,"title":{},"body":{"interfaces/IListenable.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["everywhere",{"_index":1044,"title":{},"body":{"index.html":{}}}],["example",{"_index":405,"title":{},"body":{"classes/Engine.html":{}}}],["exclusive",{"_index":1160,"title":{},"body":{"license.html":{}}}],["execute",{"_index":681,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executed",{"_index":674,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executes",{"_index":657,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["exercise",{"_index":1359,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1310,"title":{},"body":{"license.html":{}}}],["exists",{"_index":799,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["expectation",{"_index":1215,"title":{},"body":{"license.html":{}}}],["experience",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["experiencetime",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["exposes",{"_index":647,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["express",{"_index":1339,"title":{},"body":{"license.html":{}}}],["extensible",{"_index":1071,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":1317,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1222,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1266,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1341,"title":{},"body":{"license.html":{}}}],["false",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":1025,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1185,"title":{},"body":{"license.html":{}}}],["features",{"_index":1016,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":812,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["fires",{"_index":766,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["firm",{"_index":1136,"title":{},"body":{"license.html":{}}}],["first",{"_index":882,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["fit",{"_index":1012,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1390,"title":{},"body":{"license.html":{}}}],["floor",{"_index":517,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":939,"title":{},"body":{"classes/World.html":{}}}],["folders",{"_index":1031,"title":{},"body":{"index.html":{}}}],["follow",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["following",{"_index":1237,"title":{},"body":{"license.html":{}}}],["form",{"_index":1196,"title":{},"body":{"license.html":{}}}],["forward",{"_index":898,"title":{},"body":{"injectables/TimeService.html":{}}}],["found",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["fox",{"_index":87,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":942,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["framerate",{"_index":599,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["free",{"_index":1205,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1194,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1122,"title":{},"body":{"index.html":{}}}],["fully",{"_index":755,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["function",{"_index":413,"title":{},"body":{"classes/Engine.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":1207,"title":{},"body":{"license.html":{}}}],["future",{"_index":1312,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1209,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":928,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["geometries",{"_index":1082,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":520,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getexperiencetime",{"_index":891,"title":{},"body":{"injectables/TimeService.html":{}}}],["getheight",{"_index":816,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getpixelratio",{"_index":817,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gets",{"_index":894,"title":{},"body":{"injectables/TimeService.html":{}}}],["getsize",{"_index":818,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getting",{"_index":990,"title":{"index.html":{},"license.html":{}},"body":{}}],["getui",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{}}}],["getwidth",{"_index":819,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gives",{"_index":305,"title":{},"body":{"classes/DebugGUI.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":722,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfloader(this.loadingmanager",{"_index":739,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfmodel",{"_index":644,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1351,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1211,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1293,"title":{},"body":{"license.html":{}}}],["group",{"_index":54,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["handle",{"_index":1045,"title":{},"body":{"index.html":{}}}],["handled",{"_index":1064,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1087,"title":{},"body":{"index.html":{}}}],["handlers",{"_index":1048,"title":{},"body":{"index.html":{}}}],["handles",{"_index":622,"title":{},"body":{"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["handling",{"_index":1102,"title":{},"body":{"index.html":{}}}],["heart",{"_index":1046,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":675,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["height",{"_index":627,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["heirs",{"_index":1326,"title":{},"body":{"license.html":{}}}],["held",{"_index":1376,"title":{},"body":{"license.html":{}}}],["here",{"_index":637,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1296,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1148,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1153,"title":{},"body":{"license.html":{}}}],["highly",{"_index":1005,"title":{},"body":{"index.html":{}}}],["holder",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["holder/cameraholder",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":384,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":383,"title":{},"body":{"classes/Engine.html":{}}}],["holders",{"_index":1050,"title":{},"body":{"index.html":{}}}],["holds",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["huge",{"_index":998,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1204,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":66,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["iexperiencetime",{"_index":68,"title":{"interfaces/IExperienceTime.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["ii",{"_index":1242,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1247,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":600,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"index.html":{}}}],["image",{"_index":1252,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1282,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1291,"title":{},"body":{"license.html":{}}}],["implements",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IPointerSensible.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["implied",{"_index":1387,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["impulsion",{"_index":883,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["include",{"_index":1235,"title":{},"body":{"license.html":{}}}],["including",{"_index":1199,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1092,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1191,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1346,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1365,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["infringement",{"_index":1188,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["initialsize",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{}}}],["injectable",{"_index":651,"title":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["injectables",{"_index":653,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["input",{"_index":1427,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inspiration",{"_index":1001,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":1006,"title":{},"body":{"index.html":{}}}],["instance",{"_index":233,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"index.html":{}}}],["instanceof",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["instantiated",{"_index":915,"title":{},"body":{"classes/World.html":{}}}],["instantiates",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{}}}],["instantiation",{"_index":319,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["integrated",{"_index":1033,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1094,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1231,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1328,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":450,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":373,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":778,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["interface/ipointersensible",{"_index":387,"title":{},"body":{"classes/Engine.html":{}}}],["interface/iresizable",{"_index":248,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":515,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":1345,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1366,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1364,"title":{},"body":{"license.html":{}}}],["ipointersensible",{"_index":322,"title":{"interfaces/IPointerSensible.html":{}},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["iresizable",{"_index":232,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1357,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1298,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{}}}],["isenvmappable",{"_index":426,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":240,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["isource",{"_index":631,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issues",{"_index":900,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["it's",{"_index":1119,"title":{},"body":{"index.html":{}}}],["item",{"_index":762,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":806,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["item.scene.traverse((object",{"_index":803,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["items",{"_index":723,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemsloaded",{"_index":743,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemstotal",{"_index":744,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["iupdatable",{"_index":64,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["iv",{"_index":1255,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1093,"title":{},"body":{"index.html":{}}}],["journey",{"_index":1007,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1343,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1156,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1098,"title":{},"body":{"index.html":{}}}],["keep",{"_index":679,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["key",{"_index":408,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1385,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":1004,"title":{},"body":{"index.html":{}}}],["kit",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1229,"title":{},"body":{"license.html":{}}}],["known",{"_index":1308,"title":{},"body":{"license.html":{}}}],["large",{"_index":1324,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1393,"title":{},"body":{"license.html":{}}}],["later",{"_index":1186,"title":{},"body":{"license.html":{}}}],["law",{"_index":1135,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1155,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":586,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":364,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1130,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1344,"title":{},"body":{"license.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":1002,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1150,"title":{},"body":{"license.html":{}}}],["library",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{}}}],["license",{"_index":1127,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1380,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":342,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["lifting",{"_index":1066,"title":{},"body":{"index.html":{}}}],["light",{"_index":437,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":421,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{},"index.html":{}}}],["likeness",{"_index":1253,"title":{},"body":{"license.html":{}}}],["lil",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{}}}],["limitation",{"_index":1200,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1262,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1236,"title":{},"body":{"license.html":{}}}],["link",{"_index":403,"title":{},"body":{"classes/Engine.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":606,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["listenable",{"_index":1085,"title":{},"body":{"index.html":{}}}],["listening",{"_index":1047,"title":{},"body":{"index.html":{}}}],["listens",{"_index":664,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":734,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["loaders",{"_index":1023,"title":{},"body":{"index.html":{}}}],["loading",{"_index":717,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["loadingmanager",{"_index":724,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loads",{"_index":924,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["loop",{"_index":855,"title":{},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["made",{"_index":866,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["main",{"_index":890,"title":{},"body":{"injectables/TimeService.html":{}}}],["makes",{"_index":615,"title":{},"body":{"interfaces/IPointerSensible.html":{},"license.html":{}}}],["management",{"_index":1067,"title":{},"body":{"index.html":{}}}],["manager",{"_index":748,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["mandatory",{"_index":633,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":1030,"title":{},"body":{"index.html":{}}}],["map",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["mapping",{"_index":1062,"title":{},"body":{"index.html":{}}}],["maps",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1277,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1081,"title":{},"body":{"index.html":{}}}],["mass",{"_index":1078,"title":{},"body":{"index.html":{}}}],["matching",{"_index":169,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":445,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":433,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":836,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["math.pi",{"_index":566,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":494,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":511,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":501,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1315,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1230,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1318,"title":{},"body":{"license.html":{}}}],["member",{"_index":1323,"title":{},"body":{"license.html":{}}}],["memory",{"_index":585,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1389,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1118,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":534,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1116,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":456,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":648,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["min",{"_index":499,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":493,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":987,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":788,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["modelgroup",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":719,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["modify",{"_index":1190,"title":{},"body":{"license.html":{}}}],["module",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":207,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1243,"title":{},"body":{"license.html":{}}}],["more",{"_index":1121,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":1086,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1214,"title":{},"body":{"license.html":{}}}],["move",{"_index":374,"title":{},"body":{"classes/Engine.html":{}}}],["multiple",{"_index":638,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":510,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":492,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":498,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":503,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":505,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1105,"title":{},"body":{"index.html":{}}}],["national",{"_index":1281,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1404,"title":{},"body":{"license.html":{}}}],["need",{"_index":338,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needs",{"_index":623,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1234,"title":{},"body":{"license.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":650,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":850,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":851,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngzone",{"_index":662,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["non",{"_index":1354,"title":{},"body":{"license.html":{}}}],["none",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{}}}],["normal",{"_index":538,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":530,"title":{},"body":{"classes/Floor.html":{}}}],["note",{"_index":1103,"title":{},"body":{"index.html":{}}}],["notified",{"_index":607,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":753,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["notify",{"_index":1088,"title":{},"body":{"index.html":{}}}],["now",{"_index":1307,"title":{},"body":{"license.html":{}}}],["null",{"_index":514,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["number",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["object",{"_index":419,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":804,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["object.material.dispose",{"_index":805,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["objects",{"_index":359,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1412,"title":{},"body":{"license.html":{}}}],["observable",{"_index":604,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["obtainable",{"_index":1040,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1403,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":1015,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":609,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":761,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["offers",{"_index":1383,"title":{},"body":{"license.html":{}}}],["old",{"_index":595,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["oldaction",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":512,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":846,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["one",{"_index":596,"title":{},"body":{"interfaces/IExperienceTime.html":{},"index.html":{}}}],["onerror",{"_index":726,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onerror(url",{"_index":757,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["oninit",{"_index":845,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":727,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress",{"_index":728,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress(url",{"_index":768,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["operation",{"_index":1425,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["opinion",{"_index":1120,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1101,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{},"index.html":{}}}],["orbitcontrols(camera",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":318,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["organized",{"_index":1032,"title":{},"body":{"index.html":{}}}],["original",{"_index":1170,"title":{},"body":{"license.html":{}}}],["others",{"_index":1213,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1381,"title":{},"body":{"license.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["output",{"_index":1058,"title":{},"body":{"index.html":{}}}],["outside",{"_index":656,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["over",{"_index":1097,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":827,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["overtly",{"_index":1297,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1416,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1169,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":1168,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1176,"title":{},"body":{"license.html":{}}}],["package",{"_index":972,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["painful",{"_index":1042,"title":{},"body":{"index.html":{}}}],["panel",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["paragraph",{"_index":1263,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parent",{"_index":332,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1274,"title":{},"body":{"license.html":{}}}],["part",{"_index":868,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["partial",{"_index":1363,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1391,"title":{},"body":{"license.html":{}}}],["party",{"_index":1410,"title":{},"body":{"license.html":{}}}],["passing",{"_index":370,"title":{},"body":{"classes/Engine.html":{}}}],["patent",{"_index":1375,"title":{},"body":{"license.html":{}}}],["path",{"_index":634,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":635,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":1037,"title":{},"body":{"index.html":{}}}],["pcf",{"_index":1063,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":699,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1240,"title":{},"body":{"license.html":{}}}],["performance",{"_index":899,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["performer(s",{"_index":1246,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1177,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1398,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1406,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1294,"title":{},"body":{"license.html":{}}}],["person",{"_index":1219,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1251,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1402,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":229,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["perspectivecamera",{"_index":238,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1250,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1057,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":379,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["pixelratio",{"_index":629,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["pointer",{"_index":369,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"components/ThreeViewerComponent.html":{}}}],["pointerevent",{"_index":366,"title":{},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{}}}],["pointermove",{"_index":616,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"index.html":{}}}],["pointerservice",{"_index":652,"title":{"injectables/PointerService.html":{}},"body":{"injectables/PointerService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1195,"title":{},"body":{"license.html":{}}}],["present",{"_index":918,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1347,"title":{},"body":{"license.html":{}}}],["preserves",{"_index":1068,"title":{},"body":{"index.html":{}}}],["prevent",{"_index":666,"title":{},"body":{"injectables/PointerService.html":{}}}],["privacy",{"_index":1249,"title":{},"body":{"license.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["process",{"_index":1077,"title":{},"body":{"index.html":{}}}],["processes",{"_index":676,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["product",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1208,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":718,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["promote",{"_index":1203,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1321,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":789,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["protected",{"_index":1233,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1256,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1279,"title":{},"body":{"license.html":{}}}],["provide",{"_index":597,"title":{},"body":{"interfaces/IExperienceTime.html":{},"license.html":{}}}],["provided",{"_index":1147,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":683,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["providers",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1003,"title":{},"body":{"index.html":{},"license.html":{}}}],["providing",{"_index":1069,"title":{},"body":{"index.html":{}}}],["public",{"_index":1183,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1248,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1225,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1154,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1198,"title":{},"body":{"license.html":{}}}],["put",{"_index":1108,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1336,"title":{},"body":{"license.html":{}}}],["r141",{"_index":994,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":380,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["reach",{"_index":1125,"title":{},"body":{"index.html":{}}}],["reacts",{"_index":368,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer",{"_index":328,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer(pointerevent",{"_index":365,"title":{},"body":{"classes/Engine.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["ready",{"_index":937,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1342,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":546,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":1008,"title":{},"body":{"index.html":{}}}],["redistribute",{"_index":1193,"title":{},"body":{"license.html":{}}}],["reference",{"_index":331,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1145,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1260,"title":{},"body":{"license.html":{}}}],["reinhard",{"_index":1060,"title":{},"body":{"index.html":{}}}],["reinhardtonemapping",{"_index":700,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1162,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1142,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1184,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1178,"title":{},"body":{"license.html":{}}}],["remainder",{"_index":1367,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1369,"title":{},"body":{"license.html":{}}}],["removes",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":691,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":321,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["rendererholder",{"_index":324,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":391,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":696,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":554,"title":{},"body":{"classes/Floor.html":{}}}],["representations",{"_index":1384,"title":{},"body":{"license.html":{}}}],["representing",{"_index":420,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["represents",{"_index":1424,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reproduce",{"_index":1238,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1210,"title":{},"body":{"license.html":{}}}],["requests",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":639,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1331,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":588,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable",{"_index":1089,"title":{},"body":{"index.html":{}}}],["resizable.resize(size",{"_index":400,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":325,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["resize",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["resize(size",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":347,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":376,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":625,"title":{},"body":{"interfaces/IResizable.html":{},"index.html":{}}}],["resource",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resource/resourceloader",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["resource/sources",{"_index":932,"title":{},"body":{"classes/World.html":{}}}],["resourceloader",{"_index":52,"title":{"classes/ResourceLoader.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["resourceloader(sourcelist",{"_index":922,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":361,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1371,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1400,"title":{},"body":{"license.html":{}}}],["result",{"_index":1428,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resulting",{"_index":1152,"title":{},"body":{"license.html":{}}}],["results",{"_index":168,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1244,"title":{},"body":{"license.html":{}}}],["return",{"_index":312,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["reuse",{"_index":1192,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1330,"title":{},"body":{"license.html":{}}}],["reworked",{"_index":1010,"title":{},"body":{"index.html":{}}}],["right",{"_index":1109,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1163,"title":{},"body":{"license.html":{}}}],["root",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["root'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1353,"title":{},"body":{"license.html":{}}}],["runs",{"_index":843,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":613,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":598,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["scene",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1182,"title":{},"body":{"license.html":{}}}],["screen",{"_index":630,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["screensizeservice",{"_index":251,"title":{"injectables/ScreenSizeService.html":{}},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["screensizeservice.getheight",{"_index":838,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getpixelratio",{"_index":839,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getsize",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["screensizeservice.getwidth",{"_index":837,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["see",{"_index":1024,"title":{},"body":{"index.html":{}}}],["selector",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["sensible",{"_index":404,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["service",{"_index":655,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["service/size/isize",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["service/size/screen",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["service/time/iexperiencetime",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["service/type/consumer",{"_index":619,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["services",{"_index":1065,"title":{},"body":{"index.html":{},"license.html":{}}}],["set",{"_index":665,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["setconsumer",{"_index":660,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setconsumer(consumer",{"_index":669,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["sets",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setting",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":344,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["shadow",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["shadows",{"_index":547,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1329,"title":{},"body":{"license.html":{}}}],["show",{"_index":360,"title":{},"body":{"classes/Engine.html":{}}}],["similar",{"_index":1288,"title":{},"body":{"license.html":{}}}],["simon",{"_index":1000,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1107,"title":{},"body":{"index.html":{}}}],["single",{"_index":636,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/typealiases.html":{}}}],["singleton",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["size",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["size.height",{"_index":268,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.service",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["size.service.ts",{"_index":815,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:11",{"_index":820,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":829,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:34",{"_index":823,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:41",{"_index":824,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:48",{"_index":828,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:61",{"_index":830,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:68",{"_index":831,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.width",{"_index":267,"title":{},"body":{"classes/CameraHolder.html":{}}}],["slot",{"_index":678,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["source.path",{"_index":785,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.pathlist",{"_index":796,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.type",{"_index":782,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourcelist",{"_index":733,"title":{},"body":{"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":729,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourceloaded(source",{"_index":771,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sources",{"_index":640,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{},"index.html":{}}}],["sourcetype",{"_index":642,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":795,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":784,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":793,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":996,"title":{},"body":{"index.html":{}}}],["specific",{"_index":608,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../consumer.ts",{"_index":1421,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":989,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourceloader.ts",{"_index":1422,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":1059,"title":{},"body":{"index.html":{}}}],["srgbencoding",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":992,"title":{},"body":{"index.html":{}}}],["start",{"_index":593,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["started",{"_index":991,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":730,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["starts",{"_index":775,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startup",{"_index":1026,"title":{},"body":{"index.html":{}}}],["state",{"_index":306,"title":{},"body":{"classes/DebugGUI.html":{},"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1340,"title":{},"body":{"license.html":{}}}],["statements",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["statutory",{"_index":1388,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":495,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":612,"title":{},"body":{"interfaces/IListenable.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{}}}],["styles",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1261,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1356,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":935,"title":{},"body":{"classes/World.html":{}}}],["subscribers",{"_index":754,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["subscription",{"_index":916,"title":{},"body":{"classes/World.html":{}}}],["subsequent",{"_index":1167,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1285,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1327,"title":{},"body":{"license.html":{}}}],["such",{"_index":1270,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":423,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1413,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":432,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["surrendered",{"_index":1379,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1302,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1414,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":781,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["switched",{"_index":1052,"title":{},"body":{"index.html":{}}}],["switching",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":621,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1083,"title":{},"body":{"index.html":{}}}],["taking",{"_index":1348,"title":{},"body":{"license.html":{}}}],["template",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["termination",{"_index":1333,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1228,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1313,"title":{},"body":{"license.html":{}}}],["test",{"_index":1021,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1096,"title":{},"body":{"index.html":{}}}],["texture",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":725,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textureloader(this.loadingmanager",{"_index":749,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textures",{"_index":521,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["thanks",{"_index":997,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1283,"title":{},"body":{"license.html":{}}}],["thing",{"_index":1011,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(experiencetime.delta",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":715,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":388,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":392,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":875,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":556,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":555,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":393,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":797,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.debugfolder",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(debugobject",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.environmentmap",{"_index":509,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":496,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":491,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":355,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist",{"_index":398,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":414,"title":{},"body":{"classes/Engine.html":{}}}],["this.engine",{"_index":877,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":888,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.reacttopointer(pointerevent",{"_index":887,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.resize(size",{"_index":885,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.update(experiencetime",{"_index":880,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engineconsumer",{"_index":687,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.engineconsumer(pointerevent",{"_index":686,"title":{},"body":{"injectables/PointerService.html":{}}}],["this.engineconsumer(screensizeservice.getsize",{"_index":833,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.engineconsumer(this.experiencetime",{"_index":910,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.environment",{"_index":943,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":950,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":472,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":506,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":508,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":801,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.eventemitter.emit",{"_index":809,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.experiencetime",{"_index":913,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.current",{"_index":907,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.delta",{"_index":906,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.elapsed",{"_index":908,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.start",{"_index":909,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.floor",{"_index":938,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":948,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":941,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update(experiencetime",{"_index":945,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":949,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":571,"title":{},"body":{"classes/Floor.html":{}}}],["this.gltf",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":790,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.instance",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.destroy",{"_index":314,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.instance.dispose",{"_index":288,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":286,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":704,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":703,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":714,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":709,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":711,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":713,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":710,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":712,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":707,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":708,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":705,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":706,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":287,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":269,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":802,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.items.set(source.name",{"_index":800,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.material",{"_index":535,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":572,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":568,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":565,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.ngzone.runoutsideangular",{"_index":684,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.onerror(url",{"_index":746,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onload",{"_index":742,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onprogress(url",{"_index":745,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.pointerservice.setconsumer((pointerevent",{"_index":886,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.rendererholder",{"_index":390,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist",{"_index":397,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":399,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourceloader",{"_index":940,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.destroy",{"_index":947,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.items.get('environmentmaptexture",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourceloader.items.get('foxmodel",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourceloader.items.get('grasscolortexture",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.items.get('grassnormaltexture",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.listen",{"_index":934,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":569,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":490,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":507,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":570,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":167,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":513,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":406,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.screensizeservice.setconsumer((size",{"_index":884,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.sourcelist",{"_index":780,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.sourceloaded(source",{"_index":791,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.startloading",{"_index":779,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.subscription",{"_index":933,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":946,"title":{},"body":{"classes/World.html":{}}}],["this.sunlight",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":489,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":794,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.textures.color",{"_index":529,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":557,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":558,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":560,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":561,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":531,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":562,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":563,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":564,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":912,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timeservice.setconsumer((experiencetime",{"_index":879,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.timeservice.tick",{"_index":881,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.updatablelist",{"_index":395,"title":{},"body":{"classes/Engine.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":401,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":396,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1179,"title":{},"body":{"license.html":{}}}],["three",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1110,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1113,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1111,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":60,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["three/src/animation/animationaction",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":701,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":698,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":237,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":201,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":603,"title":{},"body":{"interfaces/IListenable.html":{},"license.html":{}}}],["throughout",{"_index":1157,"title":{},"body":{"license.html":{}}}],["throw",{"_index":786,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":874,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":353,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["tiling",{"_index":551,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["timehandler",{"_index":1091,"title":{},"body":{"index.html":{}}}],["timeservice",{"_index":853,"title":{"injectables/TimeService.html":{}},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["title",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tone",{"_index":1061,"title":{},"body":{"index.html":{}}}],["tool",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":770,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["track",{"_index":680,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["trademark",{"_index":1374,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1355,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1241,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1290,"title":{},"body":{"license.html":{}}}],["tree",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":349,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["triggering",{"_index":668,"title":{},"body":{"injectables/PointerService.html":{}}}],["triggers",{"_index":822,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["true",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["twitter",{"_index":1124,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type/consumer",{"_index":682,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["typealiases",{"_index":1419,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":411,"title":{},"body":{"classes/Engine.html":{}}}],["types",{"_index":1053,"title":{},"body":{"index.html":{}}}],["types/three",{"_index":995,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1014,"title":{},"body":{"index.html":{}}}],["ui",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["unconditional",{"_index":1358,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1299,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1227,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1408,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1258,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1095,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1133,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1309,"title":{},"body":{"license.html":{}}}],["up",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["updatable",{"_index":378,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["updatable.update(experiencetime",{"_index":402,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":326,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["update",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["update(experiencetime",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["updated",{"_index":352,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["upon",{"_index":1165,"title":{},"body":{"license.html":{}}}],["url",{"_index":308,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceLoader.html":{}}}],["url}.\\nloaded",{"_index":811,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["use",{"_index":1019,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":533,"title":{},"body":{"classes/Floor.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["useful",{"_index":605,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["uses",{"_index":1074,"title":{},"body":{"index.html":{}}}],["using",{"_index":776,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["usual",{"_index":1106,"title":{},"body":{"index.html":{}}}],["util",{"_index":1038,"title":{},"body":{"index.html":{}}}],["v",{"_index":1265,"title":{},"body":{"license.html":{}}}],["v14",{"_index":993,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":412,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1429,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1286,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1269,"title":{},"body":{"license.html":{}}}],["via",{"_index":1079,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":869,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":863,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["viewer.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":848,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":847,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":840,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:20",{"_index":864,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":854,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":859,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":856,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:10",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:31",{"_index":304,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:38",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":316,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:100",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:108",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:117",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:126",{"_index":362,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:24",{"_index":336,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:30",{"_index":350,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:36",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:41",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:46",{"_index":334,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:52",{"_index":356,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:58",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:63",{"_index":346,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:68",{"_index":330,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":227,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:14",{"_index":236,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:36",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":688,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:19",{"_index":690,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:57",{"_index":694,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:65",{"_index":695,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:72",{"_index":693,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":581,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":587,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":601,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":610,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/ipointersensible.ts",{"_index":614,"title":{},"body":{"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":620,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":624,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":646,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:11",{"_index":649,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/resource/isource.ts",{"_index":632,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/resource/resourceloader.ts",{"_index":716,"title":{},"body":{"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/resource/resourceloader.ts:111",{"_index":772,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:118",{"_index":752,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:125",{"_index":751,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:144",{"_index":765,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:156",{"_index":769,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:165",{"_index":758,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:21",{"_index":741,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:26",{"_index":736,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:31",{"_index":747,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:40",{"_index":740,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:45",{"_index":750,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:50",{"_index":732,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:63",{"_index":774,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/sources",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts",{"_index":654,"title":{},"body":{"injectables/PointerService.html":{},"coverage.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:10",{"_index":663,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:32",{"_index":670,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:39",{"_index":677,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/size/isize.ts",{"_index":628,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/service/size/screen",{"_index":814,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/iexperiencetime.ts",{"_index":590,"title":{},"body":{"interfaces/IExperienceTime.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts",{"_index":889,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts:18",{"_index":904,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:23",{"_index":892,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:35",{"_index":896,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:52",{"_index":893,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:60",{"_index":895,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:67",{"_index":901,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/type/consumer.ts",{"_index":1423,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["viewer/engine/world/environment.ts",{"_index":418,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":440,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":438,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":443,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":516,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":428,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":435,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":427,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":446,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":518,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":528,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":532,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":524,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":548,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":552,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:100",{"_index":578,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:115",{"_index":577,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:147",{"_index":580,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:154",{"_index":579,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:56",{"_index":575,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:61",{"_index":576,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:66",{"_index":574,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:71",{"_index":573,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":914,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":926,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":923,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":919,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":921,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":917,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:66",{"_index":931,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:75",{"_index":930,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["vii",{"_index":1287,"title":{},"body":{"license.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1223,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1377,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1292,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1300,"title":{},"body":{"license.html":{}}}],["want",{"_index":1080,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1144,"title":{},"body":{"license.html":{}}}],["way",{"_index":1009,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":689,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":692,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1311,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1197,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1306,"title":{},"body":{"license.html":{}}}],["whole",{"_index":844,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":626,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["window.addeventlistener('pointermove",{"_index":685,"title":{},"body":{"injectables/PointerService.html":{}}}],["window.addeventlistener('resize",{"_index":832,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerheight",{"_index":835,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerwidth",{"_index":834,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.location.hash",{"_index":311,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":911,"title":{},"body":{"injectables/TimeService.html":{}}}],["wish",{"_index":1072,"title":{},"body":{"index.html":{},"license.html":{}}}],["without",{"_index":1041,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1171,"title":{},"body":{"license.html":{}}}],["working",{"_index":1022,"title":{},"body":{"index.html":{}}}],["works",{"_index":1146,"title":{},"body":{"license.html":{}}}],["world",{"_index":327,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["world(this.scene",{"_index":354,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":386,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1314,"title":{},"body":{"license.html":{}}}],["wrapping",{"_index":1051,"title":{},"body":{"index.html":{}}}],["writing",{"_index":1123,"title":{},"body":{"index.html":{}}}],["x",{"_index":497,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":502,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":504,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:36\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../service/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   */\n  constructor(private readonly scene: Scene) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                destroy\n                            \n                            \n                                    Static\n                                getUI\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:10\n                        \n                    \n\n            \n                \n                    lil-gui UI singleton instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:38\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getUI\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                \n            \n\n\n            \n                \n                    Instantiates the UI if none is found, and returns it.\n\n\n                    \n                    \n                    \n                        Returns :     GUI | undefined\n\n                    \n                    \n                        A singleton instance of the lil-gui library\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:31\n                \n            \n\n\n            \n                \n                    Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n\"#debug\"\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the DebugGUI is active, else false\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI {\n  /**\n   * lil-gui UI singleton instance\n   */\n  private static instance: GUI | undefined;\n\n  /**\n   * Instantiates the UI if none is found, and returns it.\n   * @returns A singleton instance of the lil-gui library\n   */\n  static getUI(): GUI | undefined {\n    if (window.location.hash !== '#debug') {\n      return undefined;\n    }\n    if (!DebugGUI.instance) {\n      DebugGUI.instance = new GUI();\n    }\n    return DebugGUI.instance;\n  }\n\n  /**\n   * Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n   * \"#debug\"\n   * @returns true if the DebugGUI is active, else false\n   */\n  static isActive(): boolean {\n    return !!this.instance && window.location.hash !== '#debug';\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  static destroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n                            IPointerSensible\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                reactToPointer\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:36\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:46\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:24\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:41\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:63\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:30\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:58\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:52\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:126\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list and disposes\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactToPointer\n                        \n                    \n                \n            \n            \n                \nreactToPointer(pointerEvent: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:117\n                \n            \n\n\n            \n                \n                    Reacts to the pointer event by passing it down to the children objects that implements the IPointerSensible interface.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pointerEvent\n                                    \n                                            PointerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pointer move event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:100\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:108\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './service/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { DebugGUI } from './debug/DebugGUI';\nimport { IExperienceTime } from './service/time/IExperienceTime';\nimport { IPointerSensible } from './interface/IPointerSensible';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable, IPointerSensible {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder;\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder;\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder;\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this.cameraHolder = new CameraHolder(this.scene);\n    this.rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, canvas);\n    this.controlsHolder = new ControlsHolder(this.cameraHolder.instance, canvas);\n\n    this.updatableList = [\n      this.rendererHolder,\n      this.controlsHolder,\n      this.world\n    ];\n\n    this.resizableList = [\n      this.cameraHolder,\n      this.rendererHolder,\n    ];\n\n    this.destroyableList = [\n      this.controlsHolder,\n      this.rendererHolder\n    ];\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.updatableList.forEach((updatable) => updatable.update(experienceTime));\n  }\n\n  /**\n   * Reacts to the pointer event by passing it down to the children objects that implements the {@link\n   * IPointerSensible} interface.\n   * @param pointerEvent Pointer move event\n   */\n  reactToPointer(pointerEvent: PointerEvent): void {\n    // Add objects sensible to the pointer (example: the camera)\n  }\n\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list and disposes\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n\n    DebugGUI.destroy();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource that has loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceLoader Resource that has loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource loader that has loaded the GLTF file of the fox\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:66\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:56\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:61\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:115\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:100\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:154\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:147\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExperienceTime.html":{"url":"interfaces/IExperienceTime.html","title":"interface - IExperienceTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExperienceTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/IExperienceTime.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the experience time.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            delta\n                                        \n                                \n                                \n                                        \n                                            elapsed\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time used to calculate the elapsed time and the delta time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elapsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elapsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start time of the application (at the instantiation of the experience).\nUsed to calculate the elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IExperienceTime {\n  /**\n   * Start time of the application (at the instantiation of the experience).\n   * Used to calculate the elapsed time from the start of the experience.\n   */\n  start: number;\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   */\n  delta: number;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   */\n  current: number;\n  /**\n   * Elapsed time from the start of the experience.\n   */\n  elapsed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPointerSensible.html":{"url":"interfaces/IPointerSensible.html","title":"interface - IPointerSensible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPointerSensible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IPointerSensible.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that makes objects that implements it sensible to the pointermove event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            reactToPointer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reactToPointer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactToPointer:         Consumer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Consumer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Consumes the pointer event and reacts to it\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Consumer } from '../service/type/Consumer';\n\n/**\n * Contract that makes objects that implements it sensible to the pointermove event.\n */\nexport interface IPointerSensible {\n  /**\n   * Consumes the pointer event and reacts to it\n   */\n  reactToPointer: Consumer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../service/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:11\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n */\nexport interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointerService.html":{"url":"injectables/PointerService.html","title":"injectable - PointerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PointerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/pointer/pointer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the pointermove event outside of Angular and executes the engine callback\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\nListens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\nChange Detection triggering\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:32\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:39\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the pointermove event outside of Angular and executes the engine callback\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService {\n\n  /**\n   * Constructor\n   * Listens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\n   * Change Detection triggering\n   * @param ngZone\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(\n      () => {\n        window.addEventListener('pointermove', (pointerEvent) => {\n          this.engineConsumer(pointerEvent);\n        });\n      }\n    );\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:72\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:57\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:65\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../service/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly scene: Scene,\n              private readonly camera: Camera,\n              private readonly canvas: HTMLCanvasElement) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceLoader.html":{"url":"classes/ResourceLoader.html","title":"class - ResourceLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ResourceLoader.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceLoader implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getHeight\n                            \n                            \n                                    Static\n                                getPixelRatio\n                            \n                            \n                                    Static\n                                getSize\n                            \n                            \n                                    Static\n                                getWidth\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\nListen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:34\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:48\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getWidth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:27\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:61\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\npixel ratio\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:68\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on resize\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { ISize } from './ISize';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenSizeService {\n  /**\n   * Constructor\n   * Listen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('resize', () => {\n        this.engineConsumer(ScreenSizeService.getSize());\n      });\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  static getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  static getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  static getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  static getSize(): ISize {\n    return {\n      width: ScreenSizeService.getWidth(),\n      height: ScreenSizeService.getHeight(),\n      pixelRatio: ScreenSizeService.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\n   * pixel ratio\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on resize\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeService: TimeService, screenSizeService: ScreenSizeService, pointerService: PointerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the animation loop and the time of the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the screen resize for the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        pointerService\n                                                  \n                                                        \n                                                                        PointerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the pointer events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:41\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:20\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\nimport { TimeService } from './engine/service/time/time.service';\nimport { ScreenSizeService } from './engine/service/size/screen-size.service';\nimport { PointerService } from './engine/service/pointer/pointer.service';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Constructor\n   * @param timeService Service that handles the animation loop and the time of the 3D experience engine\n   * @param screenSizeService Service that handles the screen resize for the 3D experience engine\n   * @param pointerService Service that handles the pointer events\n   */\n  constructor(private readonly timeService: TimeService,\n              private readonly screenSizeService: ScreenSizeService,\n              private readonly pointerService: PointerService) {}\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement);\n\n    this.timeService.setConsumer((experienceTime) => this.engine?.update(experienceTime));\n    this.timeService.tick(); //First impulsion of the tick loop\n\n    this.screenSizeService.setConsumer((size) => this.engine?.resize(size));\n\n    this.pointerService.setConsumer((pointerEvent) => this.engine?.reactToPointer(pointerEvent));\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/time.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the time of the 3D experience and the main loop outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                    Readonly\n                                experienceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExperienceTime\n                            \n                            \n                                setConsumer\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExperienceTime\n                        \n                    \n                \n            \n            \n                \ngetExperienceTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:52\n                \n            \n\n\n            \n                \n                    Gets the time object of the experience that contains the information like delta time, elapsed time from the start\nof the experience.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:60\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n            \n                \ntick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:35\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\nExecuted outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:67\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on tick\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        experienceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IExperienceTime\n\n                    \n                \n                \n                    \n                        Default value : {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:18\n                        \n                    \n\n            \n                \n                    Bundle to keep information about the time of the experience.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { IExperienceTime } from './IExperienceTime';\nimport { Consumer } from '../type/Consumer';\n\n\n/**\n * Service that handles the time of the 3D experience and the main loop outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  /**\n   * Bundle to keep information about the time of the experience.\n   * @private\n   */\n  private readonly experienceTime: IExperienceTime = {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(private readonly ngZone: NgZone) {\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   * Executed outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n   */\n  tick() {\n    this.ngZone.runOutsideAngular(() => {\n      const currentTime = Date.now();\n      this.experienceTime.delta = currentTime - this.experienceTime.current;\n      this.experienceTime.current = currentTime;\n\n      this.experienceTime.elapsed = this.experienceTime.current - this.experienceTime.start;\n\n      this.engineConsumer(this.experienceTime);\n      window.requestAnimationFrame(() => this.tick());\n    });\n  }\n\n  /**\n   * Gets the time object of the experience that contains the information like delta time, elapsed time from the start\n   * of the experience.\n   */\n  getExperienceTime() {\n    return { ...this.experienceTime };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer): void {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on tick\n   */\n  private engineConsumer: Consumer = () => {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceLoader(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource loader that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:75\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:66\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { Floor } from './Floor';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource loader that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceLoader = new ResourceLoader(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceLoader.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceLoader);\n                              this.fox = new Fox(scene,\n                                this.resourceLoader);\n                              this.environment = new Environment(scene, this.resourceLoader);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    if (this.fox) {\n      this.fox.update(experienceTime);\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceLoader.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IPointerSensible.ts\n            \n            interface\n            IPointerSensible\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ResourceLoader.ts\n            \n            class\n            ResourceLoader\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/pointer/pointer.service.ts\n            \n            injectable\n            PointerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/IExperienceTime.ts\n            \n            interface\n            IExperienceTime\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            lil-gui : ^0.16.1\n        \n            rxjs : ~7.5.0\n        \n            three : ^0.141.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-three-starter-kit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStack\n\nAngular v14\nThreejs (r141)\n@types/three (r141)\n\nSpecial Thanks\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\nDebug UI integrated (equivalent to dat-gui) and easily accessible due to static singleton pattern\nUtil service\nExecutes the animation loop and the resize outside the NgZone to avoid performance issues due to Angular's Change\ndetection\nInformation obtainable easily without painful constructor argument everywhere. (static method)\nProvides a PointerService to handle pointermove events and executes the pointermove callback of the engine outside\nthe NgZone\n\n\n\nDocumentation\nEngine\nHeart of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene, renderer, ...).\nIt is listening to some handlers to communicate the behaviour to follow to its \"children\".\nHolders\nA holder is a class wrapping a ThreeJS instance. It contains the instantiation of the ThreeJS component with the\nsettings considered for.\nCamera Holder\nHolder of the perspective camera chosen for the template. Can be easily switched to other camera types.\nControl Holder\nHolder for the OrbitControls chosen for the template. Can be switched to other types. Damping is enabled.\nRenderer Holder\n\nPhysically correct lights enabled\nOutput encoding to sRGB\nReinhard tone mapping ON\nShadow map (PCF Shadow Map) enabled\nThe screen resize and the pixel ratio is handled\n\nServices\nThese services do the heavy lifting of the NgZone management that preserves the performance of the Angular application.\nScreenSizeService\nUtil to handle the screen size.\nUpdates on viewport resizing.\nIt executes the consumer callback of the engine while providing it the new size and pixel ratio\nTimeService\nUtil to handle the common tick loop.\nIt executes the consumer callback of the engine while providing it the time information of the current new frame.\nLoader\nResourceLoader\nUtil to handle GLTF models, textures, and cube textures.\n(It is extensible as you wish)\nLoads all the content of the sources-list.ts.\nIt uses a Loading manager (different from the default one).\nInterfaces\nUseful contracts to process your objects in mass (via a for loop for instance),\ndepending on the behaviour you want for them.\nIDestroyable\nContract that marks the class that implements it as destroyable (need to dispose of elements (geometries,\nmaterial...)). Add your objects in your Engine \"destroyableList\" and a loop will take care to call each destroy()\nmethod when the ngOnDestroy() is triggered by the viewer component.\nIListenable\nContract that marks the class that implements it as listenable.\nThe listen method returns an Observable.\nMostly used for the handler to notify other objects via their EventEmitter.\nIResizable\nContract that marks the class that implements it as resizable.\nAdd your objects in your Engine \"resizableList\", this will be added to the callback that is called by the\nScreenSizeService\nIUpdatable\nContract that marks the class that implements it as updatable.\nAdd your objects in your Engine \"updatableList\" and a loop will take care to call each update()\nwhen the TimeHandler loop notifies the Engine of a new frame.\nWorld\nHandles the floor, the fox, the environment.\nIncoming Features\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\n\nNote\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter\nYou can reach me on Twitter: @axiom_3d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consumer   (src/.../Consumer.ts)\n                        \n                        \n                            Item   (src/.../ResourceLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/service/type/Consumer.ts\n    \n    \n        \n            \n                \n                    \n                    Consumer\n                \n            \n            \n                \n                    Represents an operation that accepts a single input argument and returns no result.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/three-viewer/engine/resource/ResourceLoader.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
