var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.167,1,2.186]],["body/classes/AnimationHolder.html",[0,0.176,1,3.303,2,0.791,3,0.243,4,0.243,5,0.39,6,0.382,7,1.719,8,0.49,9,2.099,10,4.051,11,1.468,12,0.165,13,0.497,14,1.593,15,4.602,16,0.647,17,3.941,18,1.181,19,2.337,20,3.941,21,2.543,22,4.224,23,0.654,24,2.337,25,0.884,26,0.03,27,1.061,28,0.382,29,0.82,30,4.436,31,2.337,32,2.951,33,1.965,34,0.791,35,0.852,36,2.337,37,2.951,38,1.974,39,2.922,40,2.951,41,2.788,42,2.337,43,2.951,44,2.088,45,2.583,46,2.951,47,1.905,48,2.288,49,0.396,50,1.055,51,0.816,52,1.988,53,1.268,54,3.545,55,1.611,56,1.853,57,0.589,58,0.991,59,1.268,60,1.719,61,2.151,62,1.072,63,1.965,64,1.489,65,1.268,66,1.104,67,0.918,68,1.489,69,1.39,70,1.965,71,1.233,72,1.965,73,1.965,74,1.842,75,2.951,76,1.965,77,1.965,78,2.951,79,1.965,80,1.965,81,1.965,82,1.965,83,1.965,84,1.39,85,1.536,86,1.536,87,3.312,88,0.243,89,0.735,90,1.905,91,1.965,92,1.564,93,1.268,94,1.719,95,1.965,96,1.268,97,1.39,98,1.072,99,1.164,100,3.545,101,1.536,102,1.164,103,1.072,104,1.164,105,0.683,106,2.307,107,1.536,108,2.307,109,1.965,110,1.965,111,1.965,112,1.965,113,1.965,114,1.965,115,0.759,116,1.965,117,1.965,118,1.965,119,1.489,120,1.611,121,1.719,122,1.965,123,1.536,124,1.536,125,1.965,126,1.965,127,1.965,128,1.965,129,2.307,130,1.965,131,1.965,132,1.39,133,1.268,134,1.965,135,0.918,136,1.965,137,1.719,138,1.268,139,1.965,140,2.951,141,1.965,142,1.965,143,1.965,144,1.965,145,1.965,146,1.965,147,1.965,148,1.965,149,2.951,150,1.965,151,2.951,152,1.965,153,2.951,154,1.965,155,3.545,156,1.164,157,1.965,158,0.918,159,1.611,160,1.268,161,0.991,162,1.39,163,1.965,164,1.965,165,1.536,166,0.791,167,1.965,168,0.015,169,0.015]],["title/components/AppComponent.html",[170,1.978,171,1.805]],["body/components/AppComponent.html",[0,0.207,3,0.429,4,0.429,5,0.381,8,0.479,12,0.291,13,0.737,23,0.639,26,0.029,27,0.958,28,0.336,34,1.395,35,1.502,41,2.451,51,0.584,57,1.436,88,0.429,93,2.822,168,0.022,169,0.022,170,3.671,171,3.248,172,3.419,173,3.032,174,3.464,175,3.032,176,3.464,177,3.464,178,3.093,179,3.935,180,3.827,181,3.464,182,5.033,183,5.033,184,4.373,185,5.701,186,4.373,187,5.202,188,5.19,189,4.373,190,4.373,191,4.373,192,4.121,193,1.891,194,3.464,195,3.419,196,2.822,197,3.032,198,5.033,199,3.464,200,3.464,201,2.236,202,2.451,203,3.464,204,3.464]],["title/modules/AppModule.html",[205,2.796,206,2.186]],["body/modules/AppModule.html",[0,0.22,3,0.457,4,0.457,5,0.406,26,0.029,51,0.867,57,1.105,88,0.457,168,0.023,169,0.023,171,3.642,180,3.979,193,2.013,201,3.474,206,4.342,207,3.227,208,3.555,209,3.688,210,3.688,211,3.688,212,4.547,213,3.688,214,2.609,215,4.387,216,5.409,217,5.409,218,5.409,219,3.688,220,3.227,221,4.387,222,3.227,223,4.387,224,4.387,225,4.387]],["title/classes/CameraHolder.html",[0,0.167,226,2.186]],["body/classes/CameraHolder.html",[0,0.178,2,1.197,3,0.368,4,0.368,5,0.327,6,0.46,8,0.615,12,0.25,13,0.8,14,1.533,16,0.868,18,1.334,23,0.822,25,1.187,26,0.029,27,0.868,28,0.431,29,1.1,49,0.599,50,0.941,51,0.833,56,2.189,57,0.891,71,1.1,74,1.389,88,0.368,89,1.481,99,2.345,103,2.161,105,1.033,115,1.145,168,0.02,169,0.02,226,3.096,227,2.972,228,3.096,229,4.71,230,4.123,231,3.959,232,2.873,233,3.191,234,2.345,235,1.918,236,4.71,237,2.219,238,5.648,239,3.096,240,2.592,241,3.536,242,4.71,243,3.096,244,3.282,245,4.71,246,3.959,247,4.71,248,2.601,249,2.324,250,2.601,251,1.918,252,2.972,253,2.601,254,2.972,255,2.972,256,2.324,257,3.536,258,3.536,259,2.972,260,3.536,261,2.972,262,3.536,263,3.536,264,3.536,265,3.536,266,3.536,267,3.536,268,2.972,269,3.536]],["title/classes/ControlsHolder.html",[0,0.167,270,2.186]],["body/classes/ControlsHolder.html",[0,0.18,2,1.212,3,0.373,4,0.373,5,0.331,6,0.481,8,0.551,12,0.253,13,0.672,14,1.603,16,0.875,18,1.342,23,0.881,25,0.902,26,0.029,27,0.659,28,0.387,29,0.836,49,0.804,50,1.065,51,0.804,57,0.902,64,2.26,65,1.942,66,1.676,67,1.406,71,1.109,88,0.373,89,1.493,92,1.603,105,1.046,115,0.774,135,1.406,166,1.921,168,0.02,169,0.02,195,3.121,196,2.576,202,2.824,228,3.121,230,4.259,231,3.992,233,3.36,237,1.866,256,2.352,270,3.121,271,3.009,272,6.193,273,3.022,274,3.579,275,4.071,276,3.92,277,4.748,278,4.748,279,5.103,280,3.579,281,2.824,282,3.579,283,4.748,284,3.579,285,3.579,286,3.579,287,3.579,288,3.009]],["title/classes/DebugGUI.html",[0,0.167,58,1.411]],["body/classes/DebugGUI.html",[0,0.171,2,1.151,3,0.354,4,0.354,5,0.315,6,0.473,8,0.395,12,0.24,13,0.65,16,0.845,23,0.863,26,0.029,28,0.277,34,1.553,49,1.035,50,0.917,51,0.481,58,2.537,61,3.02,62,2.891,85,3.016,88,0.354,92,1.41,96,3.245,97,2.728,98,2.105,102,2.89,115,0.735,135,1.803,138,2.489,166,1.882,168,0.019,169,0.019,179,3.016,233,3.418,256,3.016,289,2.858,290,2.284,291,3.512,292,5.559,293,5.559,294,3.4,295,5.028,296,4.673,297,3.4,298,3.375,299,3.4,300,4.588,301,4.588,302,4.588,303,4.588,304,3.4,305,4.588,306,3.857,307,3.857,308,3.375,309,3.375,310,4.588,311,4.588,312,2.817,313,5.193,314,3.4]],["title/classes/Engine.html",[0,0.167,315,1.526]],["body/classes/Engine.html",[0,0.092,2,0.623,3,0.192,4,0.192,5,0.17,6,0.483,8,0.523,9,1.454,11,1.207,12,0.13,13,0.414,14,1.733,16,0.538,18,0.914,23,0.91,25,1.207,26,0.029,27,0.761,28,0.409,29,0.965,34,1.229,35,1.642,38,1.148,44,1.737,47,3.096,49,0.699,50,1.041,51,0.808,55,1.34,56,1.986,57,0.464,58,2.033,59,0.999,61,1.34,62,1.34,64,1.91,65,0.999,66,1.416,67,0.724,68,1.752,69,1.095,71,0.965,74,1.148,88,0.192,89,1.299,92,1.775,98,1.34,103,0.845,115,1.252,119,2.033,120,2.199,132,1.095,133,0.999,138,1.584,158,1.623,159,1.895,160,1.584,161,1.239,162,1.737,166,1.398,168,0.012,169,0.012,172,1.919,196,1.584,202,2.456,226,2.715,228,3.15,230,2.96,232,2.443,233,1.584,234,1.454,237,2.047,239,1.919,240,1.895,244,2.241,248,1.355,249,1.21,270,2.715,273,2.057,275,3.15,276,2.67,279,3.472,281,1.737,298,2.148,315,1.34,316,1.548,317,4.13,318,2.92,319,2.455,320,2.92,321,3.472,322,2.96,323,3.629,324,2.715,325,3.629,326,3.629,327,2.456,328,2.455,329,2.92,330,2.92,331,2.455,332,2.92,333,1.841,334,1.841,335,2.92,336,1.841,337,5.037,338,3.525,339,2.92,340,2.92,341,2.455,342,2.455,343,1.841,344,2.92,345,1.737,346,1.841,347,2.455,348,2.6,349,2.92,350,1.841,351,1.841,352,2.455,353,1.919,354,2.92,355,2.92,356,1.841,357,2.92,358,1.239,359,2.304,360,2.92,361,1.454,362,1.841,363,2.92,364,2.92,365,2.92,366,3.786,367,1.841,368,2.455,369,3.313,370,2.92,371,2.92,372,2.92,373,0.495,374,2.92,375,1.841,376,2.148,377,2.92,378,4.13,379,1.737,380,1.737,381,1.841,382,2.455,383,1.841,384,1.841,385,1.841,386,1.841,387,1.841,388,2.92,389,1.841,390,4.13,391,1.841,392,1.841,393,3.629,394,1.841,395,1.841,396,1.841,397,1.841,398,1.841,399,1.841,400,1.841,401,1.841,402,1.841,403,1.841,404,1.548,405,1.841,406,1.355,407,1.841,408,1.841,409,1.841,410,1.841,411,1.841,412,2.92,413,1.548,414,1.841,415,1.841,416,1.841]],["title/classes/Environment.html",[0,0.167,417,1.526]],["body/classes/Environment.html",[0,0.107,2,0.721,3,0.222,4,0.222,5,0.197,6,0.457,8,0.463,12,0.151,13,0.751,14,1.582,16,0.603,18,1.004,23,0.849,25,0.824,26,0.029,27,0.603,28,0.393,29,0.764,38,1.285,49,0.817,50,1.017,51,0.683,52,2.321,53,1.155,55,1.501,56,2.185,57,0.537,58,0.903,59,1.155,61,2.051,62,0.977,66,1.253,67,0.837,71,0.93,74,0.837,88,0.222,89,1.029,92,1.685,96,1.775,97,1.945,98,1.501,101,2.618,102,1.629,103,1.501,105,0.622,106,2.15,107,1.4,108,2.618,115,0.461,119,1.896,120,2.051,123,2.15,124,2.938,129,1.4,132,1.266,133,2.617,135,1.756,156,1.06,158,0.837,165,2.15,166,1.513,168,0.014,169,0.014,235,1.155,237,1.285,290,1.629,291,2.161,309,2.407,312,1.155,358,1.388,359,1.501,361,1.629,373,0.361,406,1.567,417,2.901,418,1.567,419,1.896,420,2.75,421,4.025,422,3.349,423,3.349,424,3.757,425,3.757,426,3.271,427,3.271,428,2.13,429,2.618,430,3.284,431,2.407,432,3.757,433,3.757,434,3.349,435,2.13,436,3.757,437,4.28,438,2.13,439,2.75,440,2.13,441,2.407,442,2.75,443,2.13,444,2.75,445,4.016,446,2.13,447,2.75,448,3.288,449,2.75,450,4.457,451,2.407,452,2.75,453,2.75,454,2.369,455,2.75,456,2.75,457,2.75,458,2.407,459,2.15,460,2.336,461,1.06,462,1.4,463,1.79,464,1.79,465,1.79,466,2.75,467,1.79,468,1.79,469,1.79,470,2.15,471,1.79,472,1.79,473,1.79,474,1.79,475,1.79,476,1.79,477,2.75,478,1.79,479,1.79,480,1.79,481,1.79,482,1.79,483,1.79,484,1.79,485,1.79,486,1.79,487,1.79,488,1.79,489,1.79,490,1.79,491,1.79,492,1.79,493,2.75,494,1.79,495,4.054,496,3.349,497,1.79,498,1.79,499,3.349,500,3.349,501,3.349,502,1.79,503,1.79,504,1.79,505,1.79,506,1.79,507,2.75,508,2.75,509,1.79,510,1.79,511,1.79,512,1.79,513,1.79,514,1.79]],["title/interfaces/EnvironmentMapHolder.html",[373,0.563,429,2.186]],["body/interfaces/EnvironmentMapHolder.html",[0,0.125,3,0.26,4,0.26,5,0.231,6,0.3,8,0.29,12,0.176,13,0.765,14,1.402,16,0.679,18,0.628,23,0.387,26,0.029,28,0.3,38,0.98,49,0.624,50,0.967,51,0.731,52,2.053,53,1.353,55,1.691,56,2.143,57,0.628,58,1.058,59,1.353,61,2.011,62,1.144,66,1.159,67,0.98,71,1.024,74,0.98,88,0.26,89,0.785,92,1.591,96,1.353,97,1.483,98,1.144,101,1.639,102,1.242,103,1.144,105,0.729,106,2.422,107,1.639,108,2.88,115,0.539,119,1.563,120,1.691,123,1.639,124,2.422,129,1.639,132,1.483,133,2.802,135,1.722,156,1.835,158,1.448,165,1.639,166,0.844,168,0.016,169,0.016,237,0.98,290,1.242,291,1.353,309,1.835,312,1.353,358,1.058,359,1.144,361,1.242,373,0.422,406,1.835,417,2.904,418,1.835,419,1.563,420,2.097,421,3.561,422,2.097,423,2.097,424,2.097,425,2.097,429,2.88,430,3.235,431,1.835,432,3.098,433,3.098,434,3.098,436,3.098,437,3.684,439,2.097,441,1.835,442,2.097,444,2.097,445,3.975,447,2.097,448,2.711,449,2.097,450,5.012,451,1.835,452,2.097,453,2.097,454,2.606,455,3.098,456,3.098,457,3.098,458,2.711,459,2.422,460,2.808,461,2.182,462,2.422,463,3.098,464,3.098,465,3.098,466,4.341,467,2.097,468,2.097,469,2.097,470,2.422,471,2.097,472,2.097,473,2.097,474,2.097,475,2.097,476,2.097,477,3.098,478,2.097,479,2.097,480,2.097,481,2.097,482,2.097,483,2.097,484,2.097,485,2.097,486,2.097,487,2.097,488,2.097,489,2.097,490,2.097,491,2.097,492,2.097,493,3.098,494,2.097,495,4.341,496,3.684,497,2.097,498,2.097,499,3.684,500,3.684,501,3.684,502,2.097,503,2.097,504,2.097,505,2.097,506,2.097,507,3.098,508,3.098,509,2.097,510,2.097,511,2.097,512,2.097,513,2.097,514,2.097,515,0.98,516,2.494]],["title/classes/Floor.html",[0,0.167,517,1.978]],["body/classes/Floor.html",[0,0.129,2,0.868,3,0.267,4,0.267,5,0.237,6,0.481,8,0.437,12,0.181,13,0.532,14,1.651,16,0.693,18,1.122,23,0.898,25,0.646,26,0.029,27,0.472,28,0.444,29,0.599,33,2.155,34,1.66,35,1.788,38,1.927,49,0.754,50,0.98,51,0.695,52,2.454,53,1.391,55,2.754,56,2.104,57,0.646,66,1.401,67,1.007,71,0.878,86,2.471,88,0.267,89,1.183,92,1.735,104,1.872,105,0.749,115,1.18,121,2.766,135,1.007,166,1.66,168,0.016,169,0.016,235,1.391,237,2.273,250,1.886,358,1.595,382,3.161,430,2.661,441,2.766,445,3.707,454,2.917,458,3.842,459,2.471,460,2.588,517,3.856,518,2.155,519,3.161,520,4.742,521,4.475,522,4.905,523,4.905,524,3.76,525,4.453,526,3.76,527,3.76,528,2.563,529,3.76,530,3.76,531,3.76,532,2.563,533,1.872,534,3.76,535,3.76,536,4.39,537,3.76,538,3.743,539,3.76,540,2.563,541,2.766,542,2.563,543,3.76,544,3.76,545,3.76,546,3.76,547,3.76,548,2.563,549,3.76,550,3.76,551,3.76,552,2.563,553,3.161,554,5.223,555,2.563,556,2.563,557,2.563,558,2.563,559,3.76,560,2.563,561,2.563,562,2.563,563,2.563,564,2.563,565,2.563,566,2.563,567,2.563,568,2.563,569,2.563,570,2.563,571,2.563,572,2.563]],["title/classes/Fox.html",[0,0.167,87,1.805]],["body/classes/Fox.html",[0,0.161,1,3.454,2,0.703,3,0.216,4,0.216,5,0.441,6,0.463,7,1.529,8,0.455,9,1.953,10,3.74,11,1.536,12,0.147,13,0.455,14,1.665,15,3.297,16,0.591,17,1.747,18,1.111,20,2.698,21,1.741,22,3.297,23,0.864,25,0.809,26,0.029,27,0.929,28,0.41,29,0.75,30,4.009,32,1.747,37,1.747,38,2.065,39,3.054,40,1.747,41,1.909,43,1.747,44,1.236,45,1.529,46,1.747,47,1.127,48,2.128,49,0.747,50,1.113,51,0.789,52,2.302,53,1.127,54,4.009,55,1.473,56,2.016,57,0.523,58,0.881,59,1.127,60,1.529,61,2.313,62,0.953,63,1.747,64,1.664,65,1.127,66,1.234,67,0.816,68,1.871,69,1.236,70,1.747,71,1.177,72,1.747,73,1.747,74,1.733,75,2.698,76,1.747,77,1.747,78,2.698,79,1.747,80,1.747,81,1.747,82,1.747,83,1.747,84,1.236,85,1.366,86,2.11,87,3.503,88,0.216,89,1.01,90,2.393,91,2.698,92,1.678,93,1.741,94,2.361,95,3.297,96,1.741,97,1.909,98,1.473,99,1.598,100,4.237,101,2.578,102,1.598,103,1.473,104,1.598,105,0.607,106,2.11,107,1.366,108,2.11,109,1.747,110,1.747,111,1.747,112,1.747,113,1.747,114,1.747,115,0.694,116,1.747,117,1.747,118,1.747,119,1.871,120,2.024,121,2.361,122,2.698,123,2.11,124,2.11,125,2.698,126,2.698,127,3.709,128,1.747,129,2.11,130,1.747,131,1.747,132,1.236,133,1.127,134,1.747,135,0.816,136,2.698,137,2.361,138,1.741,139,3.709,140,2.698,141,1.747,142,1.747,143,1.747,144,1.747,145,1.747,146,1.747,147,1.747,148,1.747,149,2.698,150,1.747,151,2.698,152,1.747,153,2.698,154,1.747,155,3.297,156,1.598,157,2.698,158,1.261,159,2.024,160,1.741,161,1.361,162,1.909,163,1.747,164,1.747,165,2.11,166,1.494,167,1.747,168,0.014,169,0.014,235,1.127,273,1.598,573,3.21,574,2.078,575,2.078,576,2.078,577,2.078,578,2.078,579,2.078,580,2.078]],["title/interfaces/IDestroyable.html",[66,1.046,373,0.563]],["body/interfaces/IDestroyable.html",[3,0.495,4,0.495,5,0.44,6,0.463,8,0.552,12,0.336,16,1.046,23,0.738,26,0.028,49,0.805,50,1.135,66,1.787,88,0.495,166,2.13,168,0.024,169,0.024,281,3.378,338,3.498,342,4.775,359,2.182,361,2.828,373,0.805,515,1.868,581,3.997,582,2.827,583,4.755,584,2.58,585,3.997,586,3.997,587,4.755,588,5.68,589,5.68]],["title/interfaces/IExperienceTime.html",[68,1.411,373,0.563]],["body/interfaces/IExperienceTime.html",[3,0.408,4,0.408,5,0.362,6,0.319,8,0.455,11,1.144,12,0.277,13,0.713,21,3.478,26,0.029,28,0.478,68,2.136,88,0.408,137,3.704,159,2.31,161,2.84,168,0.021,169,0.021,179,3.309,319,4.233,345,3.851,373,0.663,461,3.292,515,1.539,533,3.098,590,3.291,591,5.389,592,5.489,593,4.803,594,5.875,595,5.035,596,5.035,597,4.233,598,5.035,599,5.035]],["title/interfaces/IListenable.html",[373,0.563,600,2.186]],["body/interfaces/IListenable.html",[3,0.467,4,0.467,5,0.415,6,0.446,8,0.521,12,0.317,16,1.01,23,0.696,26,0.029,49,1.003,51,0.635,88,0.467,168,0.023,169,0.023,359,2.515,373,0.759,419,2.616,515,1.762,582,3.26,600,3.603,601,3.769,602,6.168,603,4.033,604,5.48,605,4.608,606,4.736,607,5.482,608,5.482,609,5.482,610,4.483,611,3.603,612,5.482,613,2.947]],["title/interfaces/IPointerSensible.html",[322,2.186,373,0.563]],["body/interfaces/IPointerSensible.html",[3,0.483,4,0.483,5,0.429,6,0.377,8,0.538,12,0.328,13,0.792,26,0.029,28,0.377,51,0.656,88,0.483,89,1.76,168,0.024,169,0.024,322,3.677,328,5.245,348,3.385,359,2.567,368,4.703,369,4.116,373,0.785,404,4.703,515,1.822,582,3.327,614,3.897,615,4.703,616,4.116,617,3.71,618,5.594,619,4.636]],["title/interfaces/IResizable.html",[232,1.805,373,0.563]],["body/interfaces/IResizable.html",[3,0.438,4,0.438,5,0.389,6,0.429,8,0.612,11,1.54,12,0.297,16,0.971,23,0.653,25,1.06,26,0.029,27,0.775,28,0.342,29,0.982,49,0.712,50,1.053,51,0.596,71,0.982,88,0.438,115,1.37,168,0.022,169,0.022,175,3.876,232,2.859,234,3.155,239,3.463,240,2.768,243,3.463,244,3.438,249,2.764,347,4.43,348,2.859,373,0.712,376,3.876,379,3.587,380,3.587,419,2.558,515,1.653,582,3.133,620,3.536,621,4.43,622,2.624,623,2.624,624,4.206,625,5.269,626,3.876,627,3.876]],["title/interfaces/ISize.html",[240,1.526,373,0.563]],["body/interfaces/ISize.html",[3,0.472,4,0.472,5,0.42,6,0.369,8,0.526,11,1.855,12,0.32,13,0.781,26,0.029,28,0.484,88,0.472,168,0.023,169,0.023,240,2.532,244,2.459,373,0.768,379,3.282,380,3.282,461,3.307,515,1.781,626,4.748,627,4.748,628,3.811,629,5.205,630,4.06]],["title/interfaces/ISource.html",[373,0.563,631,1.978]],["body/interfaces/ISource.html",[3,0.414,4,0.615,5,0.519,6,0.324,8,0.462,11,1.162,12,0.281,13,0.72,26,0.029,27,1.151,28,0.537,29,1.38,38,1.563,39,2.792,41,3.862,48,2.157,88,0.53,104,3.041,168,0.022,169,0.022,290,1.98,373,0.673,460,2.712,515,1.563,533,2.942,631,3.024,632,2.925,633,3.976,634,4.731,635,4.347,636,4.275,637,5.909,638,5.085,639,4.275,640,4.275,641,3.685,642,4.347,643,3.976,644,3.343,645,3.343]],["title/interfaces/IUpdatable.html",[64,1.411,373,0.563]],["body/interfaces/IUpdatable.html",[0,0.27,3,0.453,4,0.453,5,0.403,6,0.438,8,0.625,9,2.679,11,1.572,12,0.307,16,0.991,23,0.675,25,1.096,26,0.029,27,0.801,28,0.354,29,1.016,49,0.737,50,1.075,51,0.616,64,2.282,68,2.589,69,2.586,71,1.016,88,0.453,156,3.039,158,2.114,159,2.932,160,2.919,161,2.282,162,3.2,168,0.023,169,0.023,273,2.679,306,4.523,373,0.737,419,2.282,515,1.709,582,3.2,621,4.523,623,2.679,646,3.656,647,5.38,648,4.523,649,4.349,650,5.38]],["title/injectables/PointerService.html",[651,1.656,652,1.978]],["body/injectables/PointerService.html",[0,0.167,3,0.347,4,0.347,5,0.308,6,0.449,8,0.525,12,0.235,13,0.64,14,0.903,16,0.833,18,1.294,23,0.797,25,1.139,26,0.029,27,0.833,28,0.418,29,1.056,34,1.127,35,1.213,49,0.564,50,0.665,51,0.64,71,0.777,88,0.347,92,1.394,93,1.806,99,2.744,105,0.973,119,1.918,168,0.019,169,0.019,178,3.277,193,1.527,214,2.689,315,2.839,348,3.225,366,2.798,533,2.252,584,2.453,616,4.551,617,3.861,622,2.252,623,2.252,651,2.252,652,2.689,653,2.187,654,2.798,655,2.689,656,3.906,657,4.632,658,3.534,659,3.779,660,3.327,661,2.448,662,4.169,663,3.328,664,3.801,665,3.801,666,4.522,667,3.622,668,4.522,669,3.327,670,3.328,671,3.327,672,3.327,673,2.972,674,3.327,675,3.327,676,3.327,677,3.328,678,3.327,679,2.972,680,3.327,681,3.327,682,2.448,683,2.448,684,2.448,685,3.328,686,3.328,687,2.448]],["title/classes/RendererHolder.html",[0,0.167,324,2.186]],["body/classes/RendererHolder.html",[0,0.143,2,0.963,3,0.296,4,0.296,5,0.263,6,0.461,8,0.549,11,1.185,12,0.201,13,0.574,14,1.536,16,0.747,18,1.19,23,0.845,25,1.022,26,0.029,27,0.747,28,0.385,29,0.947,49,0.8,50,1.088,51,0.858,56,2.173,57,0.717,64,2.004,65,1.544,66,1.486,67,1.118,71,1.203,74,1.118,88,0.296,89,1.275,92,1.536,105,0.832,115,1.259,119,2.184,120,1.861,135,1.856,159,1.861,166,1.743,168,0.017,169,0.017,195,2.665,196,2.2,202,2.411,228,2.665,230,4.038,232,2.563,233,2.953,234,2.019,235,1.544,237,2.223,239,2.665,240,2.363,243,3.384,244,3.07,248,2.093,249,1.87,250,2.093,251,1.544,252,2.392,253,2.093,254,2.392,255,2.392,256,1.87,259,2.392,268,2.392,273,2.564,275,3.912,276,3.475,281,2.411,288,2.392,321,5.004,324,2.665,358,1.72,376,2.983,379,2.411,380,2.411,459,2.665,470,1.87,533,2.019,688,2.392,689,4.328,690,4.055,691,5.149,692,5.149,693,2.845,694,2.845,695,2.845,696,4.055,697,4.055,698,2.845,699,4.055,700,4.055,701,2.845,702,2.845,703,2.845,704,2.845,705,2.845,706,2.845,707,2.845,708,2.845,709,2.845,710,2.845,711,2.845,712,2.845,713,2.845,714,2.845,715,2.845]],["title/classes/ResourceLoader.html",[0,0.167,52,1.411]],["body/classes/ResourceLoader.html",[0,0.085,2,0.57,3,0.175,4,0.58,5,0.506,6,0.474,8,0.5,12,0.119,13,0.385,14,1.639,16,0.501,18,0.862,23,0.891,25,0.989,26,0.029,27,0.723,28,0.411,29,0.917,34,1.641,35,1.679,38,2.406,39,2.145,41,3.18,47,1.476,49,0.882,50,1.093,51,0.686,52,1.154,55,1.248,56,0.57,57,0.424,60,1.24,66,1.076,67,0.662,71,1.132,74,0.662,88,0.283,89,0.856,90,2.826,92,1.741,94,1.24,104,2.511,105,0.492,115,1.272,133,0.914,158,0.662,166,1.329,168,0.012,169,0.012,193,0.773,237,1.069,246,2.286,281,1.617,290,0.839,308,4.167,312,0.914,348,2.13,359,0.773,361,1.955,417,1.248,419,1.451,430,2.736,448,2.001,451,2.516,460,1.977,461,2.86,462,1.788,521,2.888,600,2.248,604,3.621,606,2.888,613,1.107,622,1.354,623,1.354,631,2.999,634,2.001,635,1.24,641,2.248,642,1.24,658,2.739,716,1.24,717,6.194,718,2.72,719,3.926,720,3.926,721,4.606,722,3.926,723,5.209,724,4.606,725,3.926,726,2.72,727,3.926,728,2.72,729,2.72,730,3.926,731,1.685,732,2.72,733,2.248,734,3.389,735,2.72,736,1.685,737,2.72,738,3.926,739,2.72,740,1.685,741,1.685,742,2.72,743,5.209,744,5.209,745,2.72,746,2.72,747,1.685,748,5.044,749,2.72,750,1.685,751,1.685,752,1.685,753,2.72,754,2.72,755,2.286,756,3.926,757,2.72,758,1.685,759,4.606,760,3.621,761,2.72,762,5.114,763,2.72,764,3.169,765,1.685,766,2.72,767,2.72,768,2.72,769,1.685,770,2.72,771,2.72,772,1.685,773,2.72,774,1.685,775,2.72,776,2.72,777,2.72,778,1.685,779,1.685,780,1.685,781,1.685,782,1.685,783,2.875,784,1.416,785,3.926,786,3.3,787,3.42,788,3.42,789,3.42,790,1.685,791,3.42,792,3.42,793,1.416,794,1.685,795,1.416,796,2.72,797,1.685,798,1.685,799,1.685,800,1.685,801,1.685,802,1.685,803,1.685,804,1.685,805,1.685,806,1.685,807,1.685,808,1.685,809,1.685,810,1.685,811,1.685,812,1.685,813,1.685]],["title/injectables/ScreenSizeService.html",[251,1.805,651,1.656]],["body/injectables/ScreenSizeService.html",[0,0.134,3,0.277,4,0.277,5,0.247,6,0.476,8,0.449,9,1.925,11,1.13,12,0.188,13,0.548,14,0.723,16,0.712,18,1.147,21,3.002,23,0.886,25,0.974,26,0.029,27,0.712,28,0.371,29,0.903,34,0.902,35,0.971,49,1.06,50,0.532,51,0.645,71,0.622,84,2.299,88,0.277,92,1.236,93,1.445,99,1.925,105,0.778,115,1.08,119,1.64,168,0.016,169,0.016,178,2.97,193,1.222,214,2.299,234,2.912,240,2.292,243,3.843,244,3.002,251,2.098,291,3.364,312,2.71,315,2.292,341,3.25,379,2.97,380,2.97,454,2.299,461,2.755,533,1.925,584,2.71,606,2.845,611,2.541,617,3.779,622,1.925,623,1.925,626,3.349,627,3.349,629,2.239,630,2.845,651,1.925,653,1.751,655,2.299,656,3.636,658,2.299,659,3.349,660,2.845,661,1.959,662,3.979,664,3.25,667,2.541,669,2.845,671,2.845,672,2.845,673,2.541,674,2.845,675,2.845,676,2.845,678,2.845,679,2.541,680,2.845,681,3.674,682,1.959,683,1.959,684,1.959,687,1.959,814,4.916,815,2.239,816,4.995,817,4.995,818,4.995,819,4.995,820,2.663,821,3.867,822,3.867,823,2.663,824,2.663,825,4.459,826,3.867,827,3.867,828,2.663,829,2.663,830,2.663,831,2.663,832,2.663,833,2.663,834,2.663,835,2.663,836,2.663,837,2.663,838,2.663,839,2.663]],["title/components/ThreeViewerComponent.html",[170,1.978,201,1.805]],["body/components/ThreeViewerComponent.html",[0,0.131,3,0.272,4,0.272,5,0.242,6,0.447,8,0.443,10,2.506,12,0.185,13,0.54,14,1.222,16,0.702,18,1.134,23,0.853,25,0.658,26,0.029,27,0.829,28,0.367,29,0.61,48,2.068,49,0.646,50,0.9,51,0.745,56,1.291,57,1.465,71,1.051,88,0.272,89,1.199,92,1.492,102,2.621,105,0.763,115,0.824,120,1.749,135,1.498,161,1.617,168,0.016,169,0.016,170,3.13,171,1.417,172,2.506,173,1.922,174,2.196,175,1.922,176,2.196,180,1.922,181,2.196,182,4.16,183,4.16,184,3.205,186,3.205,193,1.199,194,2.196,195,2.506,196,2.068,197,1.922,198,4.16,199,2.196,200,2.196,201,2.685,202,3.13,203,2.196,204,2.196,222,4.043,234,1.898,237,1.945,251,3.156,253,1.922,275,3.73,291,2.685,315,2.97,345,3.632,353,1.717,358,2.557,369,2.805,431,2.805,611,2.506,622,2.736,630,2.805,652,3.459,655,3.268,689,3.784,760,2.196,786,2.196,840,2.196,841,3.812,842,3.784,843,3.812,844,3.205,845,4.502,846,4.502,847,4.502,848,3.812,849,4.502,850,4.949,851,5.495,852,2.612,853,3.73,854,3.812,855,3.312,856,2.612,857,3.812,858,3.812,859,2.612,860,3.812,861,4.502,862,2.612,863,3.812,864,2.612,865,3.812,866,3.205,867,3.812,868,3.205,869,2.612,870,2.612,871,2.612,872,2.612,873,2.612,874,2.612,875,2.612,876,2.612,877,2.612,878,2.612,879,2.612,880,2.612,881,2.612,882,2.612,883,2.612,884,2.612,885,2.612,886,2.612,887,2.612,888,2.612]],["title/injectables/TimeService.html",[651,1.656,853,2.186]],["body/injectables/TimeService.html",[0,0.135,3,0.28,4,0.28,5,0.249,6,0.466,8,0.452,9,2.496,11,1.465,12,0.19,13,0.551,14,1.361,16,0.716,18,1.152,21,2.11,23,0.861,25,0.98,26,0.029,27,0.716,28,0.408,29,0.908,34,1.316,35,1.418,49,0.774,50,0.914,51,0.647,68,2.126,71,0.627,74,1.055,88,0.28,92,1.553,93,1.456,99,2.496,105,0.785,115,0.841,119,1.649,156,1.936,158,1.528,159,1.784,160,2.481,161,2.68,168,0.017,169,0.017,178,2.312,193,1.232,214,2.312,273,1.936,312,1.456,315,2.3,345,3.607,348,2.11,353,3.646,358,1.649,419,1.649,519,3.269,533,1.936,584,2.72,591,4.214,592,4.214,593,3.688,617,3.727,622,2.496,623,1.936,651,1.936,653,1.764,655,2.312,656,3.646,658,2.312,659,3.364,660,2.861,661,1.975,662,4.082,667,3.295,669,2.861,671,2.861,672,2.861,673,2.556,674,3.688,675,3.688,676,2.861,678,2.861,679,3.295,680,2.861,681,2.861,682,1.975,683,1.975,684,1.975,687,1.975,734,2.861,764,2.861,853,2.556,855,2.861,889,2.257,890,3.889,891,5.013,892,2.684,893,2.684,894,3.889,895,2.684,896,2.684,897,3.889,898,3.889,899,3.269,900,3.269,901,2.684,902,4.572,903,5.548,904,2.684,905,4.572,906,2.684,907,4.572,908,2.684,909,2.684,910,2.684,911,2.684,912,2.684,913,2.684]],["title/classes/World.html",[0,0.167,327,1.978]],["body/classes/World.html",[0,0.124,2,0.835,3,0.257,4,0.257,5,0.403,6,0.476,8,0.506,9,1.82,11,1.068,12,0.174,13,0.518,14,1.553,16,0.673,18,1.097,23,0.888,25,0.921,26,0.029,27,0.673,28,0.438,29,0.854,34,0.835,35,0.899,44,2.174,47,1.338,49,0.619,50,0.962,51,0.854,52,2.042,53,1.338,56,1.979,57,0.622,58,2.427,59,1.338,64,1.847,65,1.338,66,1.37,67,0.969,68,2.042,69,1.467,71,1.017,86,2.403,87,3.171,88,0.257,89,1.15,90,2.612,92,1.759,98,1.677,102,2.681,103,1.677,104,2.397,105,0.721,115,1.112,138,1.983,156,1.82,158,1.436,159,1.677,160,1.983,161,1.55,162,2.174,166,1.63,168,0.016,169,0.016,196,1.983,233,2.612,235,1.338,273,1.82,298,2.689,327,3.702,331,3.073,337,3.073,345,2.863,352,3.073,353,2.403,358,2.59,361,1.82,417,2.768,419,2.042,421,2.689,430,1.983,517,3.476,553,3.073,584,1.983,585,3.073,586,3.073,613,1.622,622,1.82,623,2.397,640,3.073,733,1.622,914,2.074,915,3.655,916,5.723,917,3.655,918,3.073,919,2.467,920,4.815,921,2.467,922,3.655,923,2.467,924,3.655,925,3.655,926,2.467,927,3.655,928,3.655,929,3.655,930,2.467,931,2.467,932,2.467,933,2.467,934,2.467,935,2.467,936,2.467,937,2.074,938,2.467,939,2.467,940,4.354,941,3.655,942,2.467,943,2.467,944,2.467,945,2.467,946,2.467,947,2.467,948,2.467,949,2.467,950,2.467]],["title/coverage.html",[951,3.8]],["body/coverage.html",[0,0.324,1,2.284,5,0.322,6,0.552,7,3.425,26,0.029,28,0.283,52,1.474,58,1.474,64,1.474,66,1.093,68,1.474,87,1.886,115,0.752,168,0.02,169,0.02,170,2.769,171,1.886,177,2.922,201,1.886,222,2.557,226,2.284,227,2.922,232,1.886,240,1.595,251,1.886,261,5.718,270,2.284,271,2.922,289,2.922,315,1.595,316,2.922,322,2.284,324,2.284,327,2.067,373,1.072,417,2.409,418,3.425,429,2.284,517,2.067,518,2.922,581,2.922,590,2.922,600,2.284,601,2.922,614,2.922,620,2.922,628,2.922,631,2.067,632,2.557,646,2.922,651,2.614,652,2.067,654,2.922,688,2.922,716,2.557,733,2.284,814,2.922,815,2.922,840,2.922,853,2.284,889,2.922,914,2.922,951,2.922,952,2.922,953,3.475,954,3.475,955,6.02,956,4.656,957,5.609,958,5.848,959,4.656,960,2.922,961,2.922,962,5.251,963,5.251,964,3.475,965,3.475,966,5.251,967,3.475,968,2.922,969,2.922,970,3.475,971,3.475]],["title/dependencies.html",[208,2.626,972,2.343]],["body/dependencies.html",[26,0.029,57,1.184,61,2.157,62,2.157,90,3.06,168,0.024,169,0.024,193,2.157,208,3.089,219,4.742,220,4.15,613,3.089,973,4.7,974,6.637,975,4.7,976,4.7,977,4.7,978,4.7,979,4.7,980,4.7,981,4.7,982,4.7,983,4.7,984,4.7,985,4.7,986,4.7,987,4.7,988,4.7,989,4.7,990,4.7]],["title/miscellaneous/enumerations.html",[991,1.512,992,3.358]],["body/miscellaneous/enumerations.html",[6,0.41,12,0.356,26,0.028,28,0.41,35,2.268,39,2.508,48,2.732,104,2.508,168,0.025,169,0.025,460,2.696,632,3.705,641,3.31,642,4.323,644,4.234,645,4.234,991,2.732,992,4.234,993,5.036]],["title/index.html",[12,0.197,994,2.343,995,2.343]],["body/index.html",[10,1.899,11,0.845,18,0.728,26,0.028,27,0.755,28,0.235,34,1.388,38,1.135,39,2.372,51,0.675,55,2.186,56,1.755,57,1.379,61,1.881,62,1.326,74,2.235,84,3.083,87,1.568,90,2.813,96,2.813,98,1.881,99,1.439,103,1.326,115,1.292,120,1.326,138,1.568,168,0.017,169,0.017,173,4.028,178,3.256,179,2.695,189,4.005,190,2.429,191,2.429,234,1.439,237,2.151,290,2.726,291,2.224,295,2.429,296,2.429,307,2.429,308,2.126,315,1.326,338,2.126,358,1.739,417,1.326,430,1.568,445,3.408,460,1.881,462,1.899,517,1.718,520,3.446,521,2.126,536,4.005,538,2.429,541,2.126,584,1.568,593,2.126,603,2.126,605,2.429,611,1.899,616,3.016,648,2.429,652,1.718,655,1.718,656,2.695,657,3.446,658,1.718,662,2.695,665,2.429,667,1.899,679,1.899,764,3.016,844,2.429,855,2.126,899,2.429,900,2.429,937,2.429,952,2.429,996,4.1,997,2.89,998,2.89,999,2.89,1000,4.1,1001,2.89,1002,2.89,1003,4.602,1004,4.1,1005,2.89,1006,2.89,1007,4.764,1008,2.89,1009,2.89,1010,2.89,1011,2.429,1012,2.429,1013,2.429,1014,2.89,1015,4.1,1016,2.89,1017,2.89,1018,2.89,1019,4.1,1020,2.89,1021,2.89,1022,4.1,1023,2.89,1024,5.687,1025,2.429,1026,2.89,1027,2.89,1028,2.89,1029,2.89,1030,2.89,1031,2.89,1032,2.89,1033,2.89,1034,2.89,1035,2.89,1036,2.89,1037,2.89,1038,2.89,1039,4.1,1040,2.89,1041,2.89,1042,2.89,1043,2.89,1044,2.89,1045,3.446,1046,2.89,1047,4.1,1048,2.89,1049,2.89,1050,2.89,1051,4.1,1052,2.89,1053,2.89,1054,2.89,1055,2.89,1056,2.89,1057,4.1,1058,2.89,1059,3.446,1060,2.89,1061,2.89,1062,2.89,1063,2.89,1064,2.89,1065,2.89,1066,2.89,1067,2.89,1068,2.89,1069,2.89,1070,2.89,1071,2.89,1072,2.89,1073,2.429,1074,2.89,1075,4.1,1076,2.89,1077,2.89,1078,2.89,1079,2.89,1080,2.429,1081,2.89,1082,2.429,1083,2.89,1084,2.89,1085,2.89,1086,2.89,1087,2.89,1088,2.89,1089,2.89,1090,2.89,1091,2.89,1092,2.89,1093,2.89,1094,2.89,1095,2.89,1096,2.89,1097,2.89,1098,2.89,1099,2.89,1100,2.89,1101,4.1,1102,2.89,1103,2.429,1104,2.89,1105,2.89,1106,4.1,1107,2.89,1108,2.89,1109,2.89,1110,4.1,1111,2.89,1112,2.89,1113,2.89,1114,2.89,1115,2.89,1116,2.89,1117,2.89,1118,4.1,1119,2.89]],["title/license.html",[994,2.343,995,2.343,1120,2.343]],["body/license.html",[11,1.128,21,1.708,23,0.314,26,0.013,44,1.205,45,3.202,48,1.099,158,1.71,161,1.335,168,0.013,169,0.013,188,1.703,197,2.316,327,1.872,454,1.872,461,1.567,541,1.491,597,1.703,603,1.491,615,3.245,639,1.703,673,1.332,755,2.646,783,2.646,842,1.703,866,1.703,868,3.245,918,1.703,1003,4.377,1011,1.703,1012,1.703,1013,2.646,1025,1.703,1045,1.703,1059,1.703,1073,1.703,1080,4.377,1103,1.703,1120,4.194,1121,5.207,1122,5.383,1123,4.714,1124,5.207,1125,2.026,1126,2.026,1127,2.026,1128,5.383,1129,2.026,1130,2.026,1131,3.148,1132,4.714,1133,2.026,1134,2.026,1135,2.026,1136,2.026,1137,3.86,1138,2.026,1139,4.714,1140,4.353,1141,2.026,1142,3.86,1143,2.026,1144,2.026,1145,2.026,1146,2.026,1147,5.383,1148,2.026,1149,2.026,1150,3.148,1151,2.026,1152,2.026,1153,3.148,1154,5.754,1155,5.754,1156,6.337,1157,3.148,1158,3.148,1159,2.026,1160,2.026,1161,2.026,1162,3.148,1163,6.438,1164,2.026,1165,3.86,1166,3.148,1167,2.026,1168,3.148,1169,2.026,1170,3.148,1171,2.026,1172,3.86,1173,2.026,1174,3.148,1175,3.148,1176,4.353,1177,2.026,1178,2.026,1179,2.026,1180,4.353,1181,3.148,1182,2.026,1183,2.026,1184,3.148,1185,2.026,1186,2.026,1187,2.026,1188,2.026,1189,3.86,1190,4.714,1191,5.528,1192,4.714,1193,3.86,1194,2.026,1195,2.026,1196,2.026,1197,3.148,1198,2.026,1199,3.148,1200,1.703,1201,2.026,1202,2.026,1203,2.026,1204,2.026,1205,2.026,1206,2.026,1207,2.026,1208,2.026,1209,2.026,1210,2.026,1211,3.148,1212,2.026,1213,5.754,1214,4.714,1215,2.026,1216,2.026,1217,2.026,1218,3.148,1219,5.207,1220,2.026,1221,2.026,1222,2.026,1223,2.026,1224,2.026,1225,2.026,1226,2.026,1227,2.026,1228,2.026,1229,2.026,1230,2.026,1231,2.026,1232,2.026,1233,2.026,1234,2.026,1235,4.353,1236,2.026,1237,2.026,1238,2.026,1239,2.026,1240,3.86,1241,2.026,1242,2.026,1243,2.026,1244,3.148,1245,2.026,1246,2.026,1247,2.026,1248,3.86,1249,3.148,1250,2.026,1251,2.026,1252,2.026,1253,2.026,1254,3.148,1255,3.148,1256,2.026,1257,2.026,1258,2.026,1259,2.026,1260,2.026,1261,2.026,1262,2.026,1263,4.714,1264,2.026,1265,2.026,1266,2.026,1267,2.026,1268,2.026,1269,1.703,1270,2.026,1271,2.026,1272,2.026,1273,2.026,1274,3.148,1275,2.026,1276,3.86,1277,2.026,1278,2.026,1279,1.703,1280,2.026,1281,2.026,1282,5.207,1283,3.86,1284,2.026,1285,5.207,1286,3.148,1287,3.148,1288,2.026,1289,3.86,1290,2.026,1291,2.026,1292,2.026,1293,2.026,1294,2.026,1295,2.026,1296,4.989,1297,3.148,1298,3.86,1299,3.148,1300,2.026,1301,2.026,1302,2.026,1303,2.026,1304,4.714,1305,3.148,1306,3.148,1307,3.86,1308,3.148,1309,3.148,1310,3.148,1311,3.148,1312,3.148,1313,3.148,1314,2.026,1315,2.026,1316,2.026,1317,2.026,1318,2.026,1319,2.026,1320,2.026,1321,4.353,1322,2.026,1323,2.026,1324,2.026,1325,2.026,1326,2.026,1327,2.026,1328,2.026,1329,2.026,1330,2.026,1331,4.353,1332,3.86,1333,2.026,1334,3.148,1335,3.86,1336,3.148,1337,3.148,1338,3.148,1339,2.026,1340,2.026,1341,2.026,1342,2.026,1343,2.026,1344,3.148,1345,2.026,1346,4.353,1347,2.026,1348,2.026,1349,2.026,1350,2.026,1351,3.148,1352,2.026,1353,2.026,1354,2.026,1355,2.026,1356,2.026,1357,2.026,1358,2.026,1359,2.026,1360,2.026,1361,2.026,1362,2.026,1363,3.148,1364,2.026,1365,2.026,1366,2.026,1367,2.026,1368,2.026,1369,2.026,1370,2.026,1371,2.026,1372,2.026,1373,3.148,1374,2.026,1375,2.026,1376,2.026,1377,2.026,1378,2.026,1379,2.026,1380,2.026,1381,2.026,1382,2.026,1383,2.026,1384,3.148,1385,2.026,1386,2.026,1387,2.026,1388,2.026,1389,2.026,1390,2.026,1391,2.026,1392,3.148,1393,2.026,1394,2.026,1395,2.026,1396,2.026,1397,2.026,1398,2.026,1399,2.026,1400,2.026,1401,2.026,1402,2.026,1403,2.026,1404,2.026]],["title/modules.html",[207,3.325]],["body/modules.html",[26,0.026,168,0.026,169,0.026,206,3.455,207,3.867,220,3.867,1405,5.257,1406,5.257,1407,5.257]],["title/overview.html",[1408,3.8]],["body/overview.html",[2,1.636,26,0.027,84,2.874,168,0.024,169,0.024,171,3.591,172,3.177,201,3.318,205,4.063,206,4.35,208,3.77,209,4.063,210,4.063,211,4.063,212,4.822,213,4.063,214,2.874,470,3.177,515,1.899,653,3.177,825,4.063,1269,4.063,1408,4.063,1409,4.834]],["title/properties.html",[13,0.566,972,2.343]],["body/properties.html",[13,0.748,26,0.027,168,0.026,169,0.026,1279,4.442,1410,5.284]],["title/miscellaneous/typealiases.html",[991,1.512,1411,3.995]],["body/miscellaneous/typealiases.html",[6,0.472,12,0.348,26,0.027,28,0.472,38,1.936,39,2.453,49,0.834,168,0.025,169,0.025,290,2.453,359,2.261,413,4.142,460,2.261,617,3.45,636,4.142,641,3.238,716,3.625,762,4.877,991,2.673,1082,4.142,1412,4.927,1413,4.927,1414,4.927,1415,4.927,1416,4.927,1417,4.927,1418,4.927,1419,4.927,1420,4.927]],["title/miscellaneous/variables.html",[991,1.512,1421,3.358]],["body/miscellaneous/variables.html",[6,0.343,12,0.298,26,0.029,27,1.112,28,0.524,34,1.95,35,2.1,47,2.287,85,2.77,135,1.656,168,0.022,169,0.022,361,2.099,417,2.909,419,2.238,631,2.506,634,4.237,635,3.101,733,3.468,734,3.101,784,3.543,793,4.435,795,3.543,960,3.543,961,4.435,968,3.543,969,3.543,991,2.287,1200,5.225,1421,4.842,1422,4.215,1423,4.215,1424,4.215,1425,4.215,1426,4.215,1427,4.215,1428,4.215,1429,4.215,1430,4.215,1431,4.215,1432,4.215,1433,4.215,1434,4.215,1435,4.215,1436,4.215,1437,4.215,1438,4.215]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":903,"title":{},"body":{"injectables/TimeService.html":{}}}],["0.001",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.11.4",{"_index":990,"title":{},"body":{"dependencies.html":{}}}],["0.141.0",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["0.16.1",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1410,"title":{},"body":{"properties.html":{}}}],["0.4",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.5",{"_index":567,"title":{},"body":{"classes/Floor.html":{}}}],["0xff0000",{"_index":1106,"title":{},"body":{"index.html":{}}}],["1",{"_index":84,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1125,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":559,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1269,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14",{"_index":996,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["1996",{"_index":1271,"title":{},"body":{"license.html":{}}}],["2",{"_index":825,"title":{},"body":{"injectables/ScreenSizeService.html":{},"overview.html":{}}}],["2.0.0",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["2.25",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.3.0",{"_index":988,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{},"overview.html":{}}}],["35",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":358,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1257,"title":{},"body":{"license.html":{}}}],["4.0.2",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":500,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":527,"title":{},"body":{"classes/Floor.html":{}}}],["7.5.0",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["8/8",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1409,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1265,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1370,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1294,"title":{},"body":{"license.html":{}}}],["above",{"_index":826,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["absence",{"_index":1384,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1418,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":1022,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":307,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["account",{"_index":1341,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1387,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1401,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":310,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1231,"title":{},"body":{"license.html":{}}}],["add",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":382,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{}}}],["addition",{"_index":1342,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1208,"title":{},"body":{"license.html":{}}}],["adds",{"_index":773,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["advertising",{"_index":1312,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1344,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1213,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1296,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1360,"title":{},"body":{"license.html":{}}}],["against",{"_index":1250,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1277,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1165,"title":{},"body":{"license.html":{}}}],["angular",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["angular's",{"_index":1078,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":1066,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["antialias",{"_index":702,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":185,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":171,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1282,"title":{},"body":{"license.html":{}}}],["application",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"classes/DebugGUI.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["applied",{"_index":541,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":439,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["appmodule",{"_index":206,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1068,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1082,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":1264,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1362,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1060,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1297,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1212,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1133,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":453,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1238,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1164,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1151,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":584,"title":{},"body":{"interfaces/IDestroyable.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["awesome",{"_index":1006,"title":{},"body":{"index.html":{}}}],["b",{"_index":1374,"title":{},"body":{"license.html":{}}}],["based",{"_index":673,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["basis",{"_index":1136,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1108,"title":{},"body":{"index.html":{}}}],["behaviour",{"_index":672,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["below",{"_index":1157,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1314,"title":{},"body":{"license.html":{}}}],["between",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{}}}],["bind",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":335,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":1058,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":309,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":860,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":1067,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1109,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1111,"title":{},"body":{"index.html":{}}}],["break",{"_index":792,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["browse",{"_index":1407,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":1041,"title":{},"body":{"index.html":{}}}],["build",{"_index":1025,"title":{},"body":{"index.html":{},"license.html":{}}}],["builda",{"_index":1028,"title":{},"body":{"index.html":{}}}],["buildor",{"_index":1027,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["c",{"_index":1391,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":594,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["calculations",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":759,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["callback",{"_index":658,"title":{},"body":{"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["camera",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["cameraholder",{"_index":226,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":389,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":763,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cancellation",{"_index":1324,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":849,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["case",{"_index":783,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["casting",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1298,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1124,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1167,"title":{},"body":{"license.html":{}}}],["change",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["changedetection",{"_index":821,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["changes",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{}}}],["check",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["checks",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":407,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":409,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":410,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":372,"title":{},"body":{"classes/Engine.html":{}}}],["choose",{"_index":1008,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":231,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{}}}],["circlegeometry",{"_index":525,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":526,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1180,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":589,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":857,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1393,"title":{},"body":{"license.html":{}}}],["click",{"_index":1004,"title":{},"body":{"index.html":{}}}],["client",{"_index":1134,"title":{},"body":{"license.html":{}}}],["clone",{"_index":1015,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1059,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":929,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":536,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1193,"title":{},"body":{"license.html":{}}}],["commons",{"_index":1122,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1233,"title":{},"body":{"license.html":{}}}],["compensation",{"_index":1210,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1252,"title":{},"body":{"license.html":{}}}],["complete",{"_index":808,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["completed",{"_index":756,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["component",{"_index":170,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"overview.html":{}}}],["composing",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1093,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1378,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1152,"title":{},"body":{"license.html":{}}}],["configure",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":424,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":522,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":549,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":425,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":523,"title":{},"body":{"classes/Floor.html":{}}}],["congratulations",{"_index":1014,"title":{},"body":{"index.html":{}}}],["consents",{"_index":1397,"title":{},"body":{"license.html":{}}}],["consider",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceLoader.html":{}}}],["consideration",{"_index":1209,"title":{},"body":{"license.html":{}}}],["considered",{"_index":697,"title":{},"body":{"classes/RendererHolder.html":{}}}],["console.log('loading",{"_index":807,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log('play",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log('resources",{"_index":936,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":813,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(`loading",{"_index":810,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(newaction",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["constructor(camera",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":329,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(ngzone",{"_index":661,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":731,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["constructor(timeservice",{"_index":852,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["consumer",{"_index":617,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"miscellaneous/typealiases.html":{}}}],["consumes",{"_index":618,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["contained",{"_index":377,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":357,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":841,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":519,"title":{},"body":{"classes/Floor.html":{},"injectables/TimeService.html":{}}}],["contemplated",{"_index":1330,"title":{},"body":{"license.html":{}}}],["contract",{"_index":582,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["contrary",{"_index":1364,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1288,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1194,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1173,"title":{},"body":{"license.html":{}}}],["controls",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":270,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":394,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1311,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1154,"title":{},"body":{"license.html":{}}}],["core",{"_index":317,"title":{},"body":{"classes/Engine.html":{}}}],["corporation",{"_index":1127,"title":{},"body":{"license.html":{}}}],["correct",{"_index":448,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["correctly",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1268,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":951,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1011,"title":{},"body":{"index.html":{},"license.html":{}}}],["creative",{"_index":1121,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1159,"title":{},"body":{"license.html":{}}}],["cube",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["cube_texture",{"_index":645,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":641,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":720,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":735,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cultural",{"_index":1174,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1198,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["currenttime",{"_index":905,"title":{},"body":{"injectables/TimeService.html":{}}}],["d",{"_index":1399,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1144,"title":{},"body":{"license.html":{}}}],["dat",{"_index":1074,"title":{},"body":{"index.html":{}}}],["data",{"_index":1261,"title":{},"body":{"license.html":{}}}],["database",{"_index":1166,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1273,"title":{},"body":{"license.html":{}}}],["date",{"_index":1354,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":902,"title":{},"body":{"injectables/TimeService.html":{}}}],["debug",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["debug/debuggui",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":58,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debuggui.destroy",{"_index":416,"title":{},"body":{"classes/Engine.html":{}}}],["debuggui.getui",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui.instance",{"_index":313,"title":{},"body":{"classes/DebugGUI.html":{}}}],["debugobject",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["debugui",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debugui.addfolder('environment",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["debugui.addfolder('fox",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":862,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1352,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1386,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":591,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["dependencies",{"_index":208,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":777,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["depicted",{"_index":1247,"title":{},"body":{"license.html":{}}}],["described",{"_index":925,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["destroy",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["destroyable",{"_index":363,"title":{},"body":{"classes/Engine.html":{}}}],["destroyable.destroy",{"_index":415,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":323,"title":{},"body":{"classes/Engine.html":{}}}],["destroyed",{"_index":927,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":858,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detection",{"_index":667,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["determine",{"_index":671,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["detriment",{"_index":1317,"title":{},"body":{"license.html":{}}}],["development",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["directional",{"_index":436,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1365,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1142,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1389,"title":{},"body":{"license.html":{}}}],["display",{"_index":842,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":920,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":865,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":553,"title":{},"body":{"classes/Floor.html":{},"classes/World.html":{}}}],["disposed",{"_index":583,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":339,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{}}}],["disrupt",{"_index":1327,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1260,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1029,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1218,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1131,"title":{},"body":{"license.html":{}}}],["document",{"_index":1132,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":952,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1097,"title":{},"body":{"index.html":{}}}],["done",{"_index":738,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["down",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["draco",{"_index":1092,"title":{},"body":{"index.html":{}}}],["due",{"_index":764,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["duration",{"_index":1308,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1403,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["easily",{"_index":1075,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":320,"title":{},"body":{"classes/Engine.html":{}}}],["effect",{"_index":1224,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1353,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1204,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":592,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["elects",{"_index":1216,"title":{},"body":{"license.html":{}}}],["element",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":861,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":337,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["emit",{"_index":602,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":737,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitter",{"_index":767,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitting",{"_index":897,"title":{},"body":{"injectables/TimeService.html":{}}}],["encoding",{"_index":550,"title":{},"body":{"classes/Floor.html":{}}}],["end",{"_index":340,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":315,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":341,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":878,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":870,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/pointer/pointer.service",{"_index":873,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/size/screen",{"_index":872,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/time/time.service",{"_index":871,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engineconsumer",{"_index":659,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["enjoyment",{"_index":1329,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":867,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enter",{"_index":1005,"title":{},"body":{"index.html":{}}}],["enum",{"_index":643,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":992,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":417,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":944,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":422,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":429,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1326,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1073,"title":{},"body":{"index.html":{},"license.html":{}}}],["error",{"_index":760,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":787,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["error('canvas",{"_index":876,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":798,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["errors",{"_index":1388,"title":{},"body":{"license.html":{}}}],["european",{"_index":1266,"title":{},"body":{"license.html":{}}}],["event",{"_index":348,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["eventemitter",{"_index":721,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["events",{"_index":611,"title":{},"body":{"interfaces/IListenable.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["everywhere",{"_index":1083,"title":{},"body":{"index.html":{}}}],["example",{"_index":405,"title":{},"body":{"classes/Engine.html":{}}}],["exclusive",{"_index":1153,"title":{},"body":{"license.html":{}}}],["execute",{"_index":681,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executed",{"_index":674,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executes",{"_index":657,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["exercise",{"_index":1351,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1302,"title":{},"body":{"license.html":{}}}],["exists",{"_index":799,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["expect",{"_index":1037,"title":{},"body":{"index.html":{}}}],["expectation",{"_index":1207,"title":{},"body":{"license.html":{}}}],["experience",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["experiences",{"_index":997,"title":{},"body":{"index.html":{}}}],["experiencetime",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["exposes",{"_index":647,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["express",{"_index":1331,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1309,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1214,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1259,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1333,"title":{},"body":{"license.html":{}}}],["false",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":1064,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1178,"title":{},"body":{"license.html":{}}}],["features",{"_index":1057,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":812,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["fires",{"_index":766,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["firm",{"_index":1129,"title":{},"body":{"license.html":{}}}],["first",{"_index":882,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["fit",{"_index":1054,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1382,"title":{},"body":{"license.html":{}}}],["floor",{"_index":517,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":939,"title":{},"body":{"classes/World.html":{}}}],["folder",{"_index":1030,"title":{},"body":{"index.html":{}}}],["folders",{"_index":1070,"title":{},"body":{"index.html":{}}}],["follow",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{}}}],["following",{"_index":1229,"title":{},"body":{"license.html":{}}}],["form",{"_index":1188,"title":{},"body":{"license.html":{}}}],["forward",{"_index":898,"title":{},"body":{"injectables/TimeService.html":{}}}],["found",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["fox",{"_index":87,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":942,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["framerate",{"_index":599,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["free",{"_index":1197,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1186,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1116,"title":{},"body":{"index.html":{}}}],["fully",{"_index":755,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["function",{"_index":413,"title":{},"body":{"classes/Engine.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":1199,"title":{},"body":{"license.html":{}}}],["future",{"_index":1304,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1201,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":928,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["generated",{"_index":1031,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":520,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getexperiencetime",{"_index":891,"title":{},"body":{"injectables/TimeService.html":{}}}],["getheight",{"_index":816,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getpixelratio",{"_index":817,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gets",{"_index":894,"title":{},"body":{"injectables/TimeService.html":{}}}],["getsize",{"_index":818,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getting",{"_index":994,"title":{"index.html":{},"license.html":{}},"body":{}}],["getui",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{}}}],["getwidth",{"_index":819,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["git",{"_index":1016,"title":{},"body":{"index.html":{}}}],["give",{"_index":1035,"title":{},"body":{"index.html":{}}}],["gives",{"_index":305,"title":{},"body":{"classes/DebugGUI.html":{}}}],["glslify",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":722,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfloader(this.loadingmanager",{"_index":739,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfmodel",{"_index":644,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1343,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1203,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1286,"title":{},"body":{"license.html":{}}}],["group",{"_index":54,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["handle",{"_index":1084,"title":{},"body":{"index.html":{}}}],["handles",{"_index":622,"title":{},"body":{"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["handling",{"_index":1095,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":675,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["height",{"_index":627,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["heirs",{"_index":1318,"title":{},"body":{"license.html":{}}}],["held",{"_index":1368,"title":{},"body":{"license.html":{}}}],["here",{"_index":637,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1289,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1141,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1146,"title":{},"body":{"license.html":{}}}],["highly",{"_index":1047,"title":{},"body":{"index.html":{}}}],["holder",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["holder/cameraholder",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":384,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":383,"title":{},"body":{"classes/Engine.html":{}}}],["holds",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["hosted",{"_index":1033,"title":{},"body":{"index.html":{}}}],["html",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["http://localhost:4200",{"_index":1023,"title":{},"body":{"index.html":{}}}],["huge",{"_index":1040,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1196,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":66,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["iexperiencetime",{"_index":68,"title":{"interfaces/IExperienceTime.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["ii",{"_index":1235,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1240,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":600,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"coverage.html":{}}}],["image",{"_index":1245,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1275,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1284,"title":{},"body":{"license.html":{}}}],["implements",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IPointerSensible.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["implied",{"_index":1379,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["impulsion",{"_index":883,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["include",{"_index":1227,"title":{},"body":{"license.html":{}}}],["including",{"_index":1191,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1085,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1183,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1338,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1357,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["infringement",{"_index":1181,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["initialsize",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{}}}],["injectable",{"_index":651,"title":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["injectables",{"_index":653,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["input",{"_index":1419,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inspiration",{"_index":1043,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":1048,"title":{},"body":{"index.html":{}}}],["instance",{"_index":233,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["instanceof",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["instantiated",{"_index":915,"title":{},"body":{"classes/World.html":{}}}],["instantiates",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{}}}],["instantiation",{"_index":319,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{}}}],["integrated",{"_index":1072,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1087,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1223,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1320,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":450,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":373,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":778,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["interface/ipointersensible",{"_index":387,"title":{},"body":{"classes/Engine.html":{}}}],["interface/iresizable",{"_index":248,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":515,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"overview.html":{}}}],["invalid",{"_index":1337,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1358,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1356,"title":{},"body":{"license.html":{}}}],["ipointersensible",{"_index":322,"title":{"interfaces/IPointerSensible.html":{}},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["iresizable",{"_index":232,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1349,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1291,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{}}}],["isenvmappable",{"_index":426,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":240,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["isource",{"_index":631,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issues",{"_index":900,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["it's",{"_index":1113,"title":{},"body":{"index.html":{}}}],["item",{"_index":762,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":806,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["item.scene.traverse((object",{"_index":803,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["items",{"_index":723,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemsloaded",{"_index":743,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemstotal",{"_index":744,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["iupdatable",{"_index":64,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{}}}],["iv",{"_index":1248,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1086,"title":{},"body":{"index.html":{}}}],["journey",{"_index":1049,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1335,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1149,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1091,"title":{},"body":{"index.html":{}}}],["keep",{"_index":679,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["key",{"_index":408,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1377,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":1046,"title":{},"body":{"index.html":{}}}],["kit",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1221,"title":{},"body":{"license.html":{}}}],["known",{"_index":1300,"title":{},"body":{"license.html":{}}}],["large",{"_index":1316,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1385,"title":{},"body":{"license.html":{}}}],["later",{"_index":1179,"title":{},"body":{"license.html":{}}}],["law",{"_index":1128,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1148,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":586,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":364,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1123,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1336,"title":{},"body":{"license.html":{}}}],["legend",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":1044,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1143,"title":{},"body":{"license.html":{}}}],["library",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{}}}],["license",{"_index":1120,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1372,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":342,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["light",{"_index":437,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":421,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{}}}],["likeness",{"_index":1246,"title":{},"body":{"license.html":{}}}],["lil",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":1192,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1255,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1228,"title":{},"body":{"license.html":{}}}],["link",{"_index":403,"title":{},"body":{"classes/Engine.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":606,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{}}}],["listens",{"_index":664,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":734,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["loaders",{"_index":1063,"title":{},"body":{"index.html":{}}}],["loading",{"_index":717,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loadingmanager",{"_index":724,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loads",{"_index":924,"title":{},"body":{"classes/World.html":{}}}],["loop",{"_index":855,"title":{},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["made",{"_index":866,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["main",{"_index":890,"title":{},"body":{"injectables/TimeService.html":{}}}],["makes",{"_index":615,"title":{},"body":{"interfaces/IPointerSensible.html":{},"license.html":{}}}],["manager",{"_index":748,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mandatory",{"_index":633,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":1069,"title":{},"body":{"index.html":{}}}],["map",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["maps",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1270,"title":{},"body":{"license.html":{}}}],["matching",{"_index":169,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":445,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":433,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":836,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["math.pi",{"_index":566,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":494,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":511,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":501,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1307,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1222,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1310,"title":{},"body":{"license.html":{}}}],["member",{"_index":1315,"title":{},"body":{"license.html":{}}}],["memory",{"_index":585,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1381,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1112,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":534,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1110,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":456,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":648,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["min",{"_index":499,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":493,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":991,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":788,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["modelgroup",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":719,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["modify",{"_index":1182,"title":{},"body":{"license.html":{}}}],["module",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":207,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1236,"title":{},"body":{"license.html":{}}}],["more",{"_index":1115,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1206,"title":{},"body":{"license.html":{}}}],["move",{"_index":374,"title":{},"body":{"classes/Engine.html":{}}}],["multiple",{"_index":638,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":510,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":492,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":498,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":503,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":505,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1098,"title":{},"body":{"index.html":{}}}],["national",{"_index":1274,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1396,"title":{},"body":{"license.html":{}}}],["need",{"_index":338,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needs",{"_index":623,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1226,"title":{},"body":{"license.html":{}}}],["new",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":650,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":850,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngoninit",{"_index":851,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngzone",{"_index":662,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["non",{"_index":1346,"title":{},"body":{"license.html":{}}}],["none",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{}}}],["normal",{"_index":538,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":530,"title":{},"body":{"classes/Floor.html":{}}}],["notes",{"_index":1096,"title":{},"body":{"index.html":{}}}],["notified",{"_index":607,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":753,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["now",{"_index":1012,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1019,"title":{},"body":{"index.html":{}}}],["null",{"_index":514,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["number",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["object",{"_index":419,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":804,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["object.material.dispose",{"_index":805,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["objects",{"_index":359,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1404,"title":{},"body":{"license.html":{}}}],["observable",{"_index":604,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{}}}],["obtainable",{"_index":1079,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1395,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":1056,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":609,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":761,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["offers",{"_index":1375,"title":{},"body":{"license.html":{}}}],["old",{"_index":595,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["oldaction",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":512,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":846,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["one",{"_index":596,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["onerror",{"_index":726,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onerror(url",{"_index":757,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["oninit",{"_index":845,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":727,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress",{"_index":728,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress(url",{"_index":768,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["operation",{"_index":1417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["opinion",{"_index":1114,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1094,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orbitcontrols(camera",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":318,"title":{},"body":{"classes/Engine.html":{}}}],["organized",{"_index":1071,"title":{},"body":{"index.html":{}}}],["original",{"_index":1162,"title":{},"body":{"license.html":{}}}],["others",{"_index":1205,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1373,"title":{},"body":{"license.html":{}}}],["out",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["outside",{"_index":656,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["over",{"_index":1090,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":827,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["overtly",{"_index":1290,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1408,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1013,"title":{},"body":{"index.html":{},"license.html":{}}}],["owner(s",{"_index":1161,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1168,"title":{},"body":{"license.html":{}}}],["package",{"_index":972,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["painful",{"_index":1081,"title":{},"body":{"index.html":{}}}],["panel",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["paragraph",{"_index":1256,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parent",{"_index":332,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1267,"title":{},"body":{"license.html":{}}}],["part",{"_index":868,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["partial",{"_index":1355,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1383,"title":{},"body":{"license.html":{}}}],["party",{"_index":1402,"title":{},"body":{"license.html":{}}}],["passing",{"_index":370,"title":{},"body":{"classes/Engine.html":{}}}],["patent",{"_index":1367,"title":{},"body":{"license.html":{}}}],["path",{"_index":634,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":635,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":1076,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":699,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1232,"title":{},"body":{"license.html":{}}}],["performance",{"_index":899,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["performer(s",{"_index":1239,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1170,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1390,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1398,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1287,"title":{},"body":{"license.html":{}}}],["person",{"_index":1211,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1244,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1394,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":229,"title":{},"body":{"classes/CameraHolder.html":{}}}],["perspectivecamera",{"_index":238,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1243,"title":{},"body":{"license.html":{}}}],["pixel",{"_index":379,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["pixelratio",{"_index":629,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["pointer",{"_index":369,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"components/ThreeViewerComponent.html":{}}}],["pointerevent",{"_index":366,"title":{},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{}}}],["pointermove",{"_index":616,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"index.html":{}}}],["pointerservice",{"_index":652,"title":{"injectables/PointerService.html":{}},"body":{"injectables/PointerService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1187,"title":{},"body":{"license.html":{}}}],["present",{"_index":918,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1339,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":666,"title":{},"body":{"injectables/PointerService.html":{}}}],["privacy",{"_index":1242,"title":{},"body":{"license.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["processes",{"_index":676,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["product",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1200,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":718,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["promote",{"_index":1195,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1313,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":789,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["protected",{"_index":1225,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1249,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1272,"title":{},"body":{"license.html":{}}}],["provide",{"_index":597,"title":{},"body":{"interfaces/IExperienceTime.html":{},"license.html":{}}}],["provided",{"_index":1140,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":683,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["providers",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1045,"title":{},"body":{"index.html":{},"license.html":{}}}],["public",{"_index":1176,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1241,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1217,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1147,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1190,"title":{},"body":{"license.html":{}}}],["put",{"_index":1101,"title":{},"body":{"index.html":{}}}],["quick",{"_index":1002,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1328,"title":{},"body":{"license.html":{}}}],["r141",{"_index":1000,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":380,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["raw",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1119,"title":{},"body":{"index.html":{}}}],["reacts",{"_index":368,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer",{"_index":328,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer(pointerevent",{"_index":365,"title":{},"body":{"classes/Engine.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["ready",{"_index":937,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1334,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":546,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":1050,"title":{},"body":{"index.html":{}}}],["redistribute",{"_index":1185,"title":{},"body":{"license.html":{}}}],["reference",{"_index":331,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1138,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1253,"title":{},"body":{"license.html":{}}}],["reinhardtonemapping",{"_index":700,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1155,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1135,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1177,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1171,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1036,"title":{},"body":{"index.html":{}}}],["remainder",{"_index":1359,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1361,"title":{},"body":{"license.html":{}}}],["removes",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":691,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":321,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["rendererholder",{"_index":324,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":391,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":696,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":554,"title":{},"body":{"classes/Floor.html":{}}}],["repo",{"_index":1010,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1007,"title":{},"body":{"index.html":{}}}],["representations",{"_index":1376,"title":{},"body":{"license.html":{}}}],["representing",{"_index":420,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["represents",{"_index":1416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reproduce",{"_index":1230,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1202,"title":{},"body":{"license.html":{}}}],["requests",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":639,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1323,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":588,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable.resize(size",{"_index":400,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":325,"title":{},"body":{"classes/Engine.html":{}}}],["resize",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["resize(size",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":347,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":376,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":625,"title":{},"body":{"interfaces/IResizable.html":{}}}],["resource",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resource/resourceloader",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["resource/sources",{"_index":932,"title":{},"body":{"classes/World.html":{}}}],["resourceloader",{"_index":52,"title":{"classes/ResourceLoader.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["resourceloader(sourcelist",{"_index":922,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":361,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1363,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1392,"title":{},"body":{"license.html":{}}}],["result",{"_index":1420,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resulting",{"_index":1145,"title":{},"body":{"license.html":{}}}],["results",{"_index":168,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1237,"title":{},"body":{"license.html":{}}}],["return",{"_index":312,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/typealiases.html":{}}}],["reuse",{"_index":1184,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1322,"title":{},"body":{"license.html":{}}}],["reworked",{"_index":1052,"title":{},"body":{"index.html":{}}}],["right",{"_index":1103,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1156,"title":{},"body":{"license.html":{}}}],["root",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["root'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1345,"title":{},"body":{"license.html":{}}}],["run",{"_index":1026,"title":{},"body":{"index.html":{}}}],["runs",{"_index":843,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":613,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":598,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["scene",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1175,"title":{},"body":{"license.html":{}}}],["screen",{"_index":630,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{}}}],["screensizeservice",{"_index":251,"title":{"injectables/ScreenSizeService.html":{}},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["screensizeservice.getheight",{"_index":838,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getpixelratio",{"_index":839,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getsize",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["screensizeservice.getwidth",{"_index":837,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["see",{"_index":1024,"title":{},"body":{"index.html":{}}}],["selector",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["sensible",{"_index":404,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["serve",{"_index":1018,"title":{},"body":{"index.html":{}}}],["serveby",{"_index":1021,"title":{},"body":{"index.html":{}}}],["service",{"_index":655,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["service/size/isize",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["service/size/screen",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["service/time/iexperiencetime",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["service/type/consumer",{"_index":619,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["services",{"_index":1130,"title":{},"body":{"license.html":{}}}],["set",{"_index":665,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["setconsumer",{"_index":660,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setconsumer(consumer",{"_index":669,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["sets",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setting",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":344,"title":{},"body":{"classes/Engine.html":{}}}],["shadow",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["shadows",{"_index":547,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1321,"title":{},"body":{"license.html":{}}}],["show",{"_index":360,"title":{},"body":{"classes/Engine.html":{}}}],["similar",{"_index":1281,"title":{},"body":{"license.html":{}}}],["simon",{"_index":1042,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1100,"title":{},"body":{"index.html":{}}}],["single",{"_index":636,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/typealiases.html":{}}}],["singleton",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["size",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["size.height",{"_index":268,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.service",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["size.service.ts",{"_index":815,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:11",{"_index":820,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":829,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:34",{"_index":823,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:41",{"_index":824,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:48",{"_index":828,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:61",{"_index":830,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:68",{"_index":831,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.width",{"_index":267,"title":{},"body":{"classes/CameraHolder.html":{}}}],["slot",{"_index":678,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["source.path",{"_index":785,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.pathlist",{"_index":796,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.type",{"_index":782,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourcelist",{"_index":733,"title":{},"body":{"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":729,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourceloaded(source",{"_index":771,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sources",{"_index":640,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{}}}],["sourcetype",{"_index":642,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":795,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":784,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":793,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":1038,"title":{},"body":{"index.html":{}}}],["specific",{"_index":608,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../consumer.ts",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":993,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourceloader.ts",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgbencoding",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":998,"title":{},"body":{"index.html":{}}}],["start",{"_index":593,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["started",{"_index":995,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":730,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startor",{"_index":1020,"title":{},"body":{"index.html":{}}}],["starts",{"_index":775,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startup",{"_index":1065,"title":{},"body":{"index.html":{}}}],["state",{"_index":306,"title":{},"body":{"classes/DebugGUI.html":{},"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1332,"title":{},"body":{"license.html":{}}}],["statements",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["statically",{"_index":1032,"title":{},"body":{"index.html":{}}}],["statutory",{"_index":1380,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":495,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":612,"title":{},"body":{"interfaces/IListenable.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{}}}],["styles",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1254,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1348,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":935,"title":{},"body":{"classes/World.html":{}}}],["subscribers",{"_index":754,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["subscription",{"_index":916,"title":{},"body":{"classes/World.html":{}}}],["subsequent",{"_index":1160,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1278,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1319,"title":{},"body":{"license.html":{}}}],["such",{"_index":1263,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":423,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1405,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":432,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["sure",{"_index":1034,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":1371,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1295,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1406,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":781,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["switching",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":621,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":1340,"title":{},"body":{"license.html":{}}}],["template",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["terminal",{"_index":1017,"title":{},"body":{"index.html":{}}}],["termination",{"_index":1325,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1220,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1305,"title":{},"body":{"license.html":{}}}],["test",{"_index":1061,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1089,"title":{},"body":{"index.html":{}}}],["texture",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":725,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textureloader(this.loadingmanager",{"_index":749,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textures",{"_index":521,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["thanks",{"_index":1039,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1276,"title":{},"body":{"license.html":{}}}],["thing",{"_index":1053,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(experiencetime.delta",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":715,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":388,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":392,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":875,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":556,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":555,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":393,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":797,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.debugfolder",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(debugobject",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.environmentmap",{"_index":509,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":496,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":491,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":355,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist",{"_index":398,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":414,"title":{},"body":{"classes/Engine.html":{}}}],["this.engine",{"_index":877,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":888,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.reacttopointer(pointerevent",{"_index":887,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.resize(size",{"_index":885,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.update(experiencetime",{"_index":880,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engineconsumer",{"_index":687,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.engineconsumer(pointerevent",{"_index":686,"title":{},"body":{"injectables/PointerService.html":{}}}],["this.engineconsumer(screensizeservice.getsize",{"_index":833,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.engineconsumer(this.experiencetime",{"_index":910,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.environment",{"_index":943,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":950,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":472,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":506,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":508,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":801,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.eventemitter.emit",{"_index":809,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.experiencetime",{"_index":913,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.current",{"_index":907,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.delta",{"_index":906,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.elapsed",{"_index":908,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.start",{"_index":909,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.floor",{"_index":938,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":948,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":941,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update(experiencetime",{"_index":945,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":949,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":571,"title":{},"body":{"classes/Floor.html":{}}}],["this.gltf",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":790,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.instance",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.destroy",{"_index":314,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.instance.dispose",{"_index":288,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":286,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":704,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":703,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":714,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":709,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":711,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":713,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":710,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":712,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":707,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":708,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":705,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":706,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":287,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":269,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":802,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.items.set(source.name",{"_index":800,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.material",{"_index":535,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":572,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":568,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":565,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.ngzone.runoutsideangular",{"_index":684,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.onerror(url",{"_index":746,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onload",{"_index":742,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onprogress(url",{"_index":745,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.pointerservice.setconsumer((pointerevent",{"_index":886,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.rendererholder",{"_index":390,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist",{"_index":397,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":399,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourceloader",{"_index":940,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.destroy",{"_index":947,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.items.get('environmentmaptexture",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourceloader.items.get('foxmodel",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourceloader.items.get('grasscolortexture",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.items.get('grassnormaltexture",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.listen",{"_index":934,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":569,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":490,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":507,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":570,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":167,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":513,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":406,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.screensizeservice.setconsumer((size",{"_index":884,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.sourcelist",{"_index":780,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.sourceloaded(source",{"_index":791,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.startloading",{"_index":779,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.subscription",{"_index":933,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":946,"title":{},"body":{"classes/World.html":{}}}],["this.sunlight",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":489,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":794,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.textures.color",{"_index":529,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":557,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":558,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":560,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":561,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":531,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":562,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":563,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":564,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":912,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timeservice.setconsumer((experiencetime",{"_index":879,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.timeservice.tick",{"_index":881,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.updatablelist",{"_index":395,"title":{},"body":{"classes/Engine.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":401,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":396,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1172,"title":{},"body":{"license.html":{}}}],["three",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1104,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1107,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1105,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":60,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["three/src/animation/animationaction",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":701,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":698,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":237,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":201,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":603,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{},"license.html":{}}}],["throughout",{"_index":1150,"title":{},"body":{"license.html":{}}}],["throw",{"_index":786,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":874,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":353,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["tiling",{"_index":551,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["timeservice",{"_index":853,"title":{"injectables/TimeService.html":{}},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["title",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tool",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":770,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["track",{"_index":680,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["trademark",{"_index":1366,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1347,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1234,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1283,"title":{},"body":{"license.html":{}}}],["tree",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":349,"title":{},"body":{"classes/Engine.html":{}}}],["triggering",{"_index":668,"title":{},"body":{"injectables/PointerService.html":{}}}],["triggers",{"_index":822,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["true",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["twitter",{"_index":1118,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type/consumer",{"_index":682,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["typealiases",{"_index":1411,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":411,"title":{},"body":{"classes/Engine.html":{}}}],["types/three",{"_index":1001,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1055,"title":{},"body":{"index.html":{}}}],["ui",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["unconditional",{"_index":1350,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1292,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1219,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1400,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1251,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1088,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1126,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1301,"title":{},"body":{"license.html":{}}}],["up",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["updatable",{"_index":378,"title":{},"body":{"classes/Engine.html":{}}}],["updatable.update(experiencetime",{"_index":402,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":326,"title":{},"body":{"classes/Engine.html":{}}}],["update",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["update(experiencetime",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["updated",{"_index":352,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["upon",{"_index":1158,"title":{},"body":{"license.html":{}}}],["url",{"_index":308,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["url}.\\nloaded",{"_index":811,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["use",{"_index":1003,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":533,"title":{},"body":{"classes/Floor.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["useful",{"_index":605,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["using",{"_index":776,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["usual",{"_index":1099,"title":{},"body":{"index.html":{}}}],["util",{"_index":1077,"title":{},"body":{"index.html":{}}}],["v",{"_index":1258,"title":{},"body":{"license.html":{}}}],["v14",{"_index":999,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":412,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1421,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1279,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1262,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":869,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":863,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["viewer.component",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":848,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":847,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":840,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:20",{"_index":864,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":854,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":859,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":856,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:10",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:31",{"_index":304,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:38",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":316,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:100",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:108",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:117",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:126",{"_index":362,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:24",{"_index":336,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:30",{"_index":350,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:36",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:41",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:46",{"_index":334,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:52",{"_index":356,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:58",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:63",{"_index":346,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:68",{"_index":330,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":227,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:14",{"_index":236,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:36",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":688,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:19",{"_index":690,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:57",{"_index":694,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:65",{"_index":695,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:72",{"_index":693,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":581,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":587,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":601,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":610,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/ipointersensible.ts",{"_index":614,"title":{},"body":{"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":620,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":624,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":646,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:11",{"_index":649,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/resource/isource.ts",{"_index":632,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/resource/resourceloader.ts",{"_index":716,"title":{},"body":{"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/resource/resourceloader.ts:111",{"_index":772,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:118",{"_index":752,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:125",{"_index":751,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:144",{"_index":765,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:156",{"_index":769,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:165",{"_index":758,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:21",{"_index":741,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:26",{"_index":736,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:31",{"_index":747,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:40",{"_index":740,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:45",{"_index":750,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:50",{"_index":732,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:63",{"_index":774,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/sources",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts",{"_index":654,"title":{},"body":{"injectables/PointerService.html":{},"coverage.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:10",{"_index":663,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:31",{"_index":670,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:38",{"_index":677,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/size/isize.ts",{"_index":628,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/service/size/screen",{"_index":814,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/iexperiencetime.ts",{"_index":590,"title":{},"body":{"interfaces/IExperienceTime.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts",{"_index":889,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts:18",{"_index":904,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:23",{"_index":892,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:35",{"_index":896,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:52",{"_index":893,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:60",{"_index":895,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:67",{"_index":901,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/type/consumer.ts",{"_index":1415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["viewer/engine/world/environment.ts",{"_index":418,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":440,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":438,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":443,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":516,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":428,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":435,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":427,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":446,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":518,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":528,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":532,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":524,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":548,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":552,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:100",{"_index":578,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:115",{"_index":577,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:147",{"_index":580,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:154",{"_index":579,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:56",{"_index":575,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:61",{"_index":576,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:66",{"_index":574,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:71",{"_index":573,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":914,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":926,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":923,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":919,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":921,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":917,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:66",{"_index":931,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:75",{"_index":930,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["vii",{"_index":1280,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1009,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1215,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1369,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1285,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1293,"title":{},"body":{"license.html":{}}}],["want",{"_index":1102,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1137,"title":{},"body":{"license.html":{}}}],["way",{"_index":1051,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":689,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":692,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1303,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1189,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1299,"title":{},"body":{"license.html":{}}}],["whole",{"_index":844,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":626,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["window.addeventlistener('pointermove",{"_index":685,"title":{},"body":{"injectables/PointerService.html":{}}}],["window.addeventlistener('resize",{"_index":832,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerheight",{"_index":835,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerwidth",{"_index":834,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.location.hash",{"_index":311,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":911,"title":{},"body":{"injectables/TimeService.html":{}}}],["wish",{"_index":1169,"title":{},"body":{"license.html":{}}}],["without",{"_index":1080,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1163,"title":{},"body":{"license.html":{}}}],["working",{"_index":1062,"title":{},"body":{"index.html":{}}}],["works",{"_index":1139,"title":{},"body":{"license.html":{}}}],["world",{"_index":327,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"license.html":{}}}],["world(this.scene",{"_index":354,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":386,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1306,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1117,"title":{},"body":{"index.html":{}}}],["x",{"_index":497,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":502,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":504,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":989,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:36\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../service/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   */\n  constructor(private readonly scene: Scene) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                destroy\n                            \n                            \n                                    Static\n                                getUI\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:10\n                        \n                    \n\n            \n                \n                    lil-gui UI singleton instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:38\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getUI\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                \n            \n\n\n            \n                \n                    Instantiates the UI if none is found, and returns it.\n\n\n                    \n                    \n                    \n                        Returns :     GUI | undefined\n\n                    \n                    \n                        A singleton instance of the lil-gui library\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:31\n                \n            \n\n\n            \n                \n                    Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n\"#debug\"\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the DebugGUI is active, else false\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI {\n  /**\n   * lil-gui UI singleton instance\n   */\n  private static instance: GUI | undefined;\n\n  /**\n   * Instantiates the UI if none is found, and returns it.\n   * @returns A singleton instance of the lil-gui library\n   */\n  static getUI(): GUI | undefined {\n    if (window.location.hash !== '#debug') {\n      return undefined;\n    }\n    if (!DebugGUI.instance) {\n      DebugGUI.instance = new GUI();\n    }\n    return DebugGUI.instance;\n  }\n\n  /**\n   * Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n   * \"#debug\"\n   * @returns true if the DebugGUI is active, else false\n   */\n  static isActive(): boolean {\n    return !!this.instance && window.location.hash !== '#debug';\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  static destroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n                            IPointerSensible\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                reactToPointer\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:36\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:46\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:24\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:41\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:63\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:30\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:58\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:52\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:126\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list and disposes\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactToPointer\n                        \n                    \n                \n            \n            \n                \nreactToPointer(pointerEvent: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:117\n                \n            \n\n\n            \n                \n                    Reacts to the pointer event by passing it down to the children objects that implements the IPointerSensible interface.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pointerEvent\n                                    \n                                            PointerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pointer move event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:100\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:108\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './service/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { DebugGUI } from './debug/DebugGUI';\nimport { IExperienceTime } from './service/time/IExperienceTime';\nimport { IPointerSensible } from './interface/IPointerSensible';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable, IPointerSensible {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder;\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder;\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder;\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this.cameraHolder = new CameraHolder(this.scene);\n    this.rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, canvas);\n    this.controlsHolder = new ControlsHolder(this.cameraHolder.instance, canvas);\n\n    this.updatableList = [\n      this.rendererHolder,\n      this.controlsHolder,\n      this.world\n    ];\n\n    this.resizableList = [\n      this.cameraHolder,\n      this.rendererHolder,\n    ];\n\n    this.destroyableList = [\n      this.controlsHolder,\n      this.rendererHolder\n    ];\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.updatableList.forEach((updatable) => updatable.update(experienceTime));\n  }\n\n  /**\n   * Reacts to the pointer event by passing it down to the children objects that implements the {@link\n   * IPointerSensible} interface.\n   * @param pointerEvent Pointer move event\n   */\n  reactToPointer(pointerEvent: PointerEvent): void {\n    // Add objects sensible to the pointer (example: the camera)\n  }\n\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list and disposes\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n\n    DebugGUI.destroy();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource that has loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceLoader Resource that has loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource loader that has loaded the GLTF file of the fox\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:66\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:56\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:61\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:115\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:100\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:154\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:147\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExperienceTime.html":{"url":"interfaces/IExperienceTime.html","title":"interface - IExperienceTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExperienceTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/IExperienceTime.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the experience time.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            delta\n                                        \n                                \n                                \n                                        \n                                            elapsed\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time used to calculate the elapsed time and the delta time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elapsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elapsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start time of the application (at the instantiation of the experience).\nUsed to calculate the elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IExperienceTime {\n  /**\n   * Start time of the application (at the instantiation of the experience).\n   * Used to calculate the elapsed time from the start of the experience.\n   */\n  start: number;\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   */\n  delta: number;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   */\n  current: number;\n  /**\n   * Elapsed time from the start of the experience.\n   */\n  elapsed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPointerSensible.html":{"url":"interfaces/IPointerSensible.html","title":"interface - IPointerSensible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPointerSensible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IPointerSensible.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that makes objects that implements it sensible to the pointermove event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            reactToPointer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reactToPointer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactToPointer:         Consumer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Consumer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Consumes the pointer event and reacts to it\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Consumer } from '../service/type/Consumer';\n\n/**\n * Contract that makes objects that implements it sensible to the pointermove event.\n */\nexport interface IPointerSensible {\n  /**\n   * Consumes the pointer event and reacts to it\n   */\n  reactToPointer: Consumer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../service/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:11\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n */\nexport interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointerService.html":{"url":"injectables/PointerService.html","title":"injectable - PointerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PointerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/pointer/pointer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the pointermove event outside of Angular and executes the engine callback\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\nListens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\nChange Detection triggering\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:38\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the pointermove event outside of Angular and executes the engine callback\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService {\n\n  /**\n   * Constructor\n   * Listens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\n   * Change Detection triggering\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(\n      () => {\n        window.addEventListener('pointermove', (pointerEvent) => {\n          this.engineConsumer(pointerEvent);\n        });\n      }\n    );\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:72\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:57\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:65\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../service/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly scene: Scene,\n              private readonly camera: Camera,\n              private readonly canvas: HTMLCanvasElement) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceLoader.html":{"url":"classes/ResourceLoader.html","title":"class - ResourceLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ResourceLoader.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceLoader implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getHeight\n                            \n                            \n                                    Static\n                                getPixelRatio\n                            \n                            \n                                    Static\n                                getSize\n                            \n                            \n                                    Static\n                                getWidth\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\nListen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:34\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:48\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getWidth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:27\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:61\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\npixel ratio\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:68\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on resize\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { ISize } from './ISize';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenSizeService {\n  /**\n   * Constructor\n   * Listen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('resize', () => {\n        this.engineConsumer(ScreenSizeService.getSize());\n      });\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  static getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  static getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  static getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  static getSize(): ISize {\n    return {\n      width: ScreenSizeService.getWidth(),\n      height: ScreenSizeService.getHeight(),\n      pixelRatio: ScreenSizeService.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\n   * pixel ratio\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on resize\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeService: TimeService, screenSizeService: ScreenSizeService, pointerService: PointerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the animation loop and the time of the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the screen resize for the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        pointerService\n                                                  \n                                                        \n                                                                        PointerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the pointer events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:41\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:20\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\nimport { TimeService } from './engine/service/time/time.service';\nimport { ScreenSizeService } from './engine/service/size/screen-size.service';\nimport { PointerService } from './engine/service/pointer/pointer.service';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Constructor\n   * @param timeService Service that handles the animation loop and the time of the 3D experience engine\n   * @param screenSizeService Service that handles the screen resize for the 3D experience engine\n   * @param pointerService Service that handles the pointer events\n   */\n  constructor(private readonly timeService: TimeService,\n              private readonly screenSizeService: ScreenSizeService,\n              private readonly pointerService: PointerService) {}\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement);\n\n    this.timeService.setConsumer((experienceTime) => this.engine?.update(experienceTime));\n    this.timeService.tick(); //First impulsion of the tick loop\n\n    this.screenSizeService.setConsumer((size) => this.engine?.resize(size));\n\n    this.pointerService.setConsumer((pointerEvent) => this.engine?.reactToPointer(pointerEvent));\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/time.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the time of the 3D experience and the main loop outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                    Readonly\n                                experienceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExperienceTime\n                            \n                            \n                                setConsumer\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExperienceTime\n                        \n                    \n                \n            \n            \n                \ngetExperienceTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:52\n                \n            \n\n\n            \n                \n                    Gets the time object of the experience that contains the information like delta time, elapsed time from the start\nof the experience.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:60\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n            \n                \ntick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:35\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\nExecuted outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:67\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on tick\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        experienceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IExperienceTime\n\n                    \n                \n                \n                    \n                        Default value : {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:18\n                        \n                    \n\n            \n                \n                    Bundle to keep information about the time of the experience.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { IExperienceTime } from './IExperienceTime';\nimport { Consumer } from '../type/Consumer';\n\n\n/**\n * Service that handles the time of the 3D experience and the main loop outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  /**\n   * Bundle to keep information about the time of the experience.\n   * @private\n   */\n  private readonly experienceTime: IExperienceTime = {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(private readonly ngZone: NgZone) {\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   * Executed outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n   */\n  tick() {\n    this.ngZone.runOutsideAngular(() => {\n      const currentTime = Date.now();\n      this.experienceTime.delta = currentTime - this.experienceTime.current;\n      this.experienceTime.current = currentTime;\n\n      this.experienceTime.elapsed = this.experienceTime.current - this.experienceTime.start;\n\n      this.engineConsumer(this.experienceTime);\n      window.requestAnimationFrame(() => this.tick());\n    });\n  }\n\n  /**\n   * Gets the time object of the experience that contains the information like delta time, elapsed time from the start\n   * of the experience.\n   */\n  getExperienceTime() {\n    return { ...this.experienceTime };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer): void {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on tick\n   */\n  private engineConsumer: Consumer = () => {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceLoader(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource loader that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:75\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:66\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { Floor } from './Floor';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource loader that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceLoader = new ResourceLoader(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceLoader.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceLoader);\n                              this.fox = new Fox(scene,\n                                this.resourceLoader);\n                              this.environment = new Environment(scene, this.resourceLoader);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    if (this.fox) {\n      this.fox.update(experienceTime);\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceLoader.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IPointerSensible.ts\n            \n            interface\n            IPointerSensible\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ResourceLoader.ts\n            \n            class\n            ResourceLoader\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/pointer/pointer.service.ts\n            \n            injectable\n            PointerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/IExperienceTime.ts\n            \n            interface\n            IExperienceTime\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            glslify-loader : ^2.0.0\n        \n            lil-gui : ^0.16.1\n        \n            raw-loader : ^4.0.2\n        \n            rxjs : ~7.5.0\n        \n            three : ^0.141.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    \n    \n    ng-three-starter-kit\n    \n        An Angular 14 template for your ThreeJS experiences\n    \n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n         \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n\n\n    ➡️ Documentation ⬅️\n\n\nStack 🧰\n\n    \n    \n    \n    \n\n\n\nAngular v14\nThreejs (r141)\n@types/three (r141)\n\nQuick Start 🏁\nHow to use this template 🔧\n\n    \n\n\n\nClick on Use this template\nEnter the ✨awesome✨ name of your repository\nChoose the visibility of the repo\nClick on Create repository from template\nYou are now the owner of a new Angular ThreeJS project. Congratulations !\n\n(You can clone your new repository with git clone  in your Terminal)\nServe the application 👨‍💻\nnpm startor\n\nng serveBy default, you can access it through: http://localhost:4200/\nWhat you should see\n\n    \n\n\nBuild the application 🏗️\nnpm run buildor\n\nng buildA dist folder is generated that can be statically hosted.\nDebug and tweak your 3D scene with lil-gui 🐞\nBy default, you can add #debug in the URL to access the debug panel, useful to tweak your scene.\nBe sure to give a reload if you cannot see it.\nWhat you can expect to see\n\n    \n\n\nSpecial Thanks 💖\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures 🛠️\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\nDebug UI integrated (equivalent to dat-gui) and easily accessible due to static singleton pattern\nUtil service\nExecutes the animation loop and the resize outside the NgZone to avoid performance issues due to Angular's Change\ndetection\nInformation obtainable easily without painful constructor argument everywhere. (static method)\nProvides a PointerService to handle pointermove events and executes the pointermove callback of the engine outside\nthe NgZone\n\n\n\nIncoming Features ⚙️\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\n\nNotes 🗒️\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter 🐦\nYou can reach me on Twitter:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.2.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consumer   (src/.../Consumer.ts)\n                        \n                        \n                            Item   (src/.../ResourceLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/service/type/Consumer.ts\n    \n    \n        \n            \n                \n                    \n                    Consumer\n                \n            \n            \n                \n                    Represents an operation that accepts a single input argument and returns no result.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/three-viewer/engine/resource/ResourceLoader.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
