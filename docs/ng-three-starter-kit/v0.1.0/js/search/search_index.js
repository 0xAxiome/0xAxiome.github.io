var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.015,1,2.105]],["body/classes/AnimationHolder.html",[0,0.016,1,3.191,2,0.631,3,0.274,4,0.274,5,0.435,6,0.424,7,1.684,8,0.548,9,2.52,10,4.421,11,1.732,12,0.185,13,0.561,14,1.61,15,4.481,16,0.616,17,3.847,18,1.256,19,2.312,20,3.847,21,2.685,22,4.119,23,0.609,24,2.312,25,1.201,26,0.032,27,1.305,28,0.544,29,1.109,30,4.323,31,2.312,32,2.241,33,1.933,34,0.803,35,0.803,36,2.312,37,2.893,38,1.732,39,2.778,40,2.893,41,2.685,42,2.312,43,2.893,44,2.019,45,2.52,46,2.893,47,1.834,48,2.197,49,0.375,50,1.1,51,0.913,52,1.732,53,1.226,54,2.043,55,1.498,56,3.466,57,1.536,58,1.718,59,0.536,60,1.879,61,1.226,62,1.684,63,2.228,64,1.12,65,1.933,66,1.302,67,1.226,68,0.871,69,0.803,70,1.933,71,1.718,72,1.684,73,1.933,74,2.197,75,2.893,76,1.933,77,1.933,78,2.893,79,1.933,80,1.933,81,1.933,82,1.933,83,1.933,84,1.226,85,1.684,86,1.498,87,3.217,88,0.274,89,0.536,90,1.498,91,1.933,92,1.59,93,1.684,94,1.684,95,1.933,96,1.349,97,2.019,98,1.675,99,1.684,100,3.847,101,1.498,102,1.12,103,0.944,104,1.12,105,1.536,106,1.498,107,1.226,108,1.536,109,1.933,110,0.87,111,2.241,112,1.498,113,1.933,114,1.933,115,1.933,116,1.933,117,1.933,118,1.933,119,0.674,120,1.933,121,1.933,122,1.933,123,1.834,124,1.302,125,1.684,126,1.933,127,1.498,128,1.349,129,1.933,130,1.933,131,1.933,132,1.933,133,2.241,134,1.933,135,1.933,136,1.349,137,1.226,138,1.933,139,0.944,140,1.933,141,1.684,142,1.349,143,1.933,144,2.893,145,1.933,146,1.933,147,1.933,148,1.933,149,1.933,150,1.933,151,1.933,152,1.933,153,2.893,154,1.933,155,2.893,156,1.933,157,2.893,158,1.933,159,3.466,160,1.027,161,1.933,162,0.803,163,1.12,164,1.933,165,1.933,166,1.498,167,0.684,168,1.933,169,0.016,170,0.016]],["title/components/AppComponent.html",[171,1.722,172,1.722]],["body/components/AppComponent.html",[0,0.019,3,0.481,4,0.481,5,0.426,8,0.537,12,0.324,13,0.827,23,0.596,26,0.032,27,1.182,28,0.481,34,1.411,35,1.411,41,2.371,51,0.658,59,1.293,88,0.481,93,3.718,169,0.024,170,0.024,171,3.198,172,3.104,173,2.979,174,2.959,175,3.397,176,2.959,177,3.397,178,3.397,179,4.268,180,4.897,181,3.718,182,3.397,183,4.897,184,4.897,185,4.268,186,5.581,187,4.268,188,5.104,189,5.045,190,4.268,191,4.268,192,4.268,193,4.062,194,1.967,195,3.397,196,3.307,197,2.706,198,2.959,199,4.897,200,3.397,201,3.397,202,2.153,203,2.153,204,3.397,205,3.397]],["title/modules/AppModule.html",[206,2.717,207,2.105]],["body/modules/AppModule.html",[0,0.02,3,0.51,4,0.51,5,0.453,26,0.032,51,0.97,59,0.999,88,0.51,169,0.025,170,0.025,172,3.469,181,3.859,194,2.089,202,3.313,207,4.174,208,3.142,209,3.433,210,3.607,211,3.607,212,3.607,213,4.431,214,3.607,215,3.607,216,4.313,217,5.298,218,5.298,219,5.298,220,3.607,221,2.795,222,4.313,223,3.142,224,4.313,225,4.313,226,4.313]],["title/classes/CameraHolder.html",[0,0.015,227,2.105]],["body/classes/CameraHolder.html",[0,0.016,2,0.936,3,0.406,4,0.406,5,0.36,6,0.506,8,0.681,12,0.274,13,0.89,14,1.499,16,0.815,18,1.405,23,0.756,25,1.589,26,0.032,27,1.06,28,0.609,29,1.467,32,2.964,49,0.556,50,0.973,51,0.89,58,2.018,59,0.794,71,1.65,88,0.406,89,1.06,99,3.332,103,1.869,110,1.291,119,1.004,124,1.722,169,0.022,170,0.022,227,2.964,228,2.868,229,2.67,230,3.825,231,3.561,232,3.332,233,2.493,234,2.77,235,2.67,236,1.818,237,4.592,238,2.668,239,4.574,240,2.067,241,2.911,242,2.955,243,3.825,244,4.574,245,2.215,246,5.49,247,2.964,248,3.429,249,3.332,250,3.825,251,3.825,252,4.574,253,2.498,254,2.222,255,2.498,256,2.498,257,3.429,258,3.429,259,2.868,260,3.429,261,2.868,262,3.429,263,3.429,264,3.429,265,3.429,266,3.429,267,3.429,268,2.868,269,3.429]],["title/classes/ControlsHolder.html",[0,0.015,270,2.105]],["body/classes/ControlsHolder.html",[0,0.017,2,0.968,3,0.42,4,0.42,5,0.372,6,0.533,8,0.619,12,0.283,13,0.758,14,1.579,16,0.833,18,1.429,23,0.817,25,1.231,26,0.032,27,0.821,28,0.553,29,1.137,49,0.758,50,1.114,51,0.902,59,0.821,66,1.97,67,1.88,68,1.317,69,1.231,71,1.499,88,0.42,89,1.083,92,1.579,108,2.638,110,1.335,119,0.691,139,1.448,167,1.647,169,0.022,170,0.022,196,3.03,197,2.479,203,2.479,229,2.729,231,3.693,232,3.407,234,2.933,240,1.761,256,2.583,270,3.03,271,2.965,272,5.065,273,3.545,274,3.924,275,3.812,276,4.676,277,4.676,278,4.967,279,3.545,280,3.03,281,3.545,282,4.676,283,3.545,284,3.545,285,3.545,286,3.545,287,2.965]],["title/classes/DebugGUI.html",[0,0.015,60,1.327]],["body/classes/DebugGUI.html",[0,0.017,2,0.99,3,0.429,4,0.429,5,0.381,6,0.537,8,0.48,12,0.289,13,0.769,14,1.632,16,0.845,18,1.591,23,0.824,26,0.032,28,0.429,34,1.259,35,1.259,49,0.588,50,1.01,51,0.769,60,1.939,63,3.111,64,2.949,68,1.331,69,1.259,88,0.429,89,1.099,92,1.532,96,3.488,97,2.77,98,2.298,102,2.298,103,1.939,119,0.707,142,3.276,167,1.661,169,0.023,170,0.023,234,2.718,288,3.032,289,2.718,290,5.29,291,6.088,292,4.745,293,4.745,294,4.745,295,3.968,296,3.968,297,4.745,298,3.968,299,3.625,300,3.625,301,3.457,302,4.745,303,4.745,304,3.625]],["title/classes/Engine.html",[0,0.015,305,1.896]],["body/classes/Engine.html",[0,0.008,2,0.444,3,0.192,4,0.192,5,0.171,6,0.532,8,0.438,11,1.431,12,0.13,13,0.426,14,1.721,16,0.468,18,0.903,23,0.839,25,1.32,26,0.032,27,0.609,28,0.579,29,0.842,34,1.879,35,1.938,38,0.989,44,1.533,47,2.958,49,0.536,50,0.95,51,0.892,54,2.173,55,1.053,57,1.167,58,1.789,59,0.376,60,1.824,61,0.861,63,1.272,64,1.272,66,1.571,67,0.861,68,1.05,69,0.564,71,0.842,72,1.183,74,1.393,88,0.192,89,0.609,92,1.757,98,1.272,105,1.688,107,1.393,108,2.173,119,1.153,123,2.367,124,1.681,136,0.948,137,0.861,142,1.533,162,1.551,163,1.84,167,1.125,169,0.012,170,0.012,173,1.533,197,1.393,203,2.015,227,2.462,229,2.606,231,2.218,233,2.021,234,1.272,235,2.606,238,1.688,240,1.842,241,1.393,242,2.162,245,1.84,247,1.702,249,1.914,253,1.183,254,1.053,270,2.462,274,2.704,275,2.41,278,3.178,298,2.197,301,1.914,305,2.606,306,1.358,307,3.178,308,2.197,309,1.914,310,2.197,311,2.768,312,2.197,313,3.178,314,1.914,315,2.197,316,2.197,317,2.766,318,2.462,319,2.766,320,2.766,321,3.308,322,2.766,323,2.015,324,1.624,325,2.627,326,2.197,327,2.627,328,2.627,329,3.8,330,1.624,331,2.627,332,3.8,333,1.624,334,2.627,335,1.624,336,4.307,337,3.8,338,4.465,339,3.8,340,1.624,341,3.564,342,2.627,343,3.8,344,3.8,345,3.178,346,2.627,347,2.627,348,1.624,349,2.197,350,2.893,351,2.627,352,1.624,353,2.197,354,2.015,355,1.914,356,1.624,357,2.436,358,1.624,359,2.627,360,2.015,361,2.627,362,3.178,363,1.824,364,2.197,365,2.766,366,2.627,367,2.627,368,1.914,369,1.914,370,1.914,371,1.624,372,1.702,373,2.627,374,2.197,375,2.627,376,1.624,377,2.197,378,1.702,379,2.627,380,2.197,381,1.624,382,2.627,383,1.553,384,1.272,385,1.624,386,2.197,387,2.627,388,1.393,389,1.702,390,2.627,391,1.624,392,1.914,393,2.627,394,3.178,395,1.624,396,2.197,397,1.624,398,1.624,399,1.624,400,1.624,401,1.624,402,0.787,403,1.624,404,1.624,405,1.624,406,1.624,407,1.624,408,1.358,409,1.624,410,1.624,411,1.624,412,1.624,413,1.624,414,1.624,415,1.624,416,1.183,417,1.624,418,1.624,419,1.624,420,1.624,421,1.624,422,2.627,423,1.624,424,1.624,425,1.624]],["title/classes/Environment.html",[0,0.015,426,1.443]],["body/classes/Environment.html",[0,0.01,2,0.58,3,0.251,4,0.251,5,0.223,6,0.507,8,0.521,12,0.17,13,0.844,14,1.581,16,0.578,18,1.075,23,0.788,25,1.127,26,0.032,27,0.752,28,0.562,29,1.04,38,1.221,49,0.769,50,1.065,51,0.769,52,2.021,53,1.126,57,1.441,58,2.021,59,0.492,60,2.193,61,1.126,63,2.134,64,1.029,68,0.991,69,0.738,71,1.413,88,0.251,89,0.752,92,1.668,96,1.894,97,1.894,98,1.571,101,2.551,102,1.571,103,1.325,110,0.8,111,2.102,112,2.102,119,0.414,123,2.336,124,1.659,127,2.102,128,2.572,133,1.376,136,1.24,137,2.516,139,1.8,160,0.943,162,0.738,166,2.102,167,1.304,169,0.015,170,0.015,236,1.126,240,1.221,289,1.571,363,1.325,383,1.325,384,1.571,416,1.547,426,2.744,427,1.547,428,1.957,429,2.363,430,3.478,431,3.292,432,3.292,433,3.685,434,3.685,435,2.868,436,3.244,437,3.244,438,2.124,439,2.551,440,3.139,441,2.363,442,3.685,443,3.685,444,3.292,445,2.124,446,3.685,447,4.185,448,2.124,449,2.713,450,2.124,451,2.363,452,2.713,453,2.124,454,2.713,455,3.873,456,2.124,457,2.713,458,2.855,459,2.713,460,4.354,461,2.363,462,2.713,463,2.713,464,2.713,465,2.298,466,2.713,467,2.713,468,2.713,469,2.363,470,2.102,471,2.223,472,0.492,473,1.029,474,1.376,475,1.776,476,1.776,477,1.776,478,2.713,479,1.776,480,1.776,481,1.776,482,2.363,483,1.776,484,1.776,485,1.776,486,1.776,487,1.776,488,1.776,489,2.713,490,1.776,491,1.776,492,1.776,493,1.776,494,1.24,495,1.776,496,1.776,497,1.776,498,1.776,499,1.776,500,1.776,501,1.776,502,1.776,503,1.776,504,1.776,505,1.776,506,2.713,507,1.776,508,3.97,509,3.292,510,1.776,511,1.776,512,3.292,513,3.292,514,3.292,515,1.776,516,1.776,517,1.776,518,1.776,519,1.776,520,2.713,521,2.713,522,1.776,523,1.776,524,1.776,525,1.776,526,1.776,527,1.776]],["title/interfaces/EnvironmentMapHolder.html",[439,2.105,472,0.753]],["body/interfaces/EnvironmentMapHolder.html",[0,0.012,3,0.294,4,0.294,5,0.261,6,0.337,8,0.329,12,0.199,13,0.861,14,1.45,16,0.651,18,0.679,23,0.365,26,0.032,28,0.432,38,0.937,49,0.592,50,1.015,51,0.823,52,1.795,53,1.319,57,1.622,58,1.983,59,0.576,60,1.948,61,1.319,63,2.096,64,1.205,68,0.919,69,0.864,71,1.529,88,0.294,89,0.576,92,1.594,96,1.452,97,1.452,98,1.205,101,1.612,102,1.205,103,1.016,110,0.937,111,2.366,112,2.366,119,0.485,123,1.936,124,1.375,127,1.612,128,2.132,133,1.612,136,1.452,137,2.692,139,1.768,160,1.622,162,1.268,166,1.612,167,0.736,169,0.017,170,0.017,240,0.937,289,1.205,363,1.016,383,1.016,384,1.205,416,1.812,426,2.748,427,1.812,428,1.622,429,1.812,430,3.089,431,2.08,432,2.08,433,2.08,434,2.08,435,1.812,439,2.804,440,3.095,441,1.812,442,3.054,443,3.054,444,3.054,446,3.054,447,3.619,449,2.08,451,1.812,452,2.08,454,2.08,455,3.835,457,2.08,458,2.366,459,2.08,460,4.883,461,1.812,462,2.08,463,2.08,464,2.08,465,2.526,466,3.054,467,3.054,468,3.054,469,2.66,470,2.366,471,2.66,472,0.576,473,2.096,474,2.366,475,3.054,476,3.054,477,3.054,478,4.247,479,2.08,480,2.08,481,2.08,482,2.66,483,2.08,484,2.08,485,2.08,486,2.08,487,2.08,488,2.08,489,3.054,490,2.08,491,2.08,492,2.08,493,2.08,494,1.452,495,2.08,496,2.08,497,2.08,498,2.08,499,2.08,500,2.08,501,2.08,502,2.08,503,2.08,504,2.08,505,2.08,506,3.054,507,2.08,508,4.247,509,3.619,510,2.08,511,2.08,512,3.619,513,3.619,514,3.619,515,2.08,516,2.08,517,2.08,518,2.08,519,2.08,520,3.054,521,3.054,522,2.08,523,2.08,524,2.08,525,2.08,526,2.08,527,2.08,528,1.016,529,2.487]],["title/classes/Floor.html",[0,0.015,530,1.896]],["body/classes/Floor.html",[0,0.012,2,0.698,3,0.303,4,0.303,5,0.269,6,0.533,8,0.493,12,0.204,13,0.604,14,1.626,16,0.664,18,1.201,23,0.833,25,0.888,26,0.032,27,0.592,28,0.634,29,0.82,33,2.139,34,1.678,35,1.678,38,1.819,49,0.713,50,1.028,51,0.783,52,2.135,53,1.356,57,2.61,58,1.949,59,0.592,68,1.107,69,0.888,71,1.195,86,2.415,88,0.303,89,0.863,92,1.706,104,1.805,105,1.655,110,0.963,119,1.045,125,2.715,139,1.045,167,1.43,169,0.018,170,0.018,236,1.356,240,2.135,255,1.863,363,1.523,389,2.415,396,3.117,440,2.561,451,2.715,455,3.586,465,2.82,469,3.741,470,2.415,471,2.458,530,3.696,531,2.139,532,3.117,533,4.628,534,4.338,535,4.831,536,4.831,537,3.727,538,4.397,539,3.727,540,3.727,541,2.557,542,3.727,543,3.727,544,3.727,545,2.557,546,2.175,547,3.727,548,3.727,549,4.295,550,3.727,551,3.677,552,3.727,553,2.557,554,2.715,555,2.557,556,3.727,557,3.727,558,3.727,559,3.727,560,3.727,561,2.557,562,3.727,563,3.117,564,3.727,565,2.557,566,5.136,567,2.557,568,2.557,569,2.557,570,2.557,571,3.727,572,2.557,573,2.557,574,2.557,575,2.557,576,2.557,577,2.557,578,2.557,579,2.557,580,2.557,581,2.557,582,2.557,583,2.557,584,2.557]],["title/classes/Fox.html",[0,0.015,87,1.722]],["body/classes/Fox.html",[0,0.015,1,3.333,2,0.561,3,0.243,4,0.243,5,0.491,6,0.513,7,1.496,8,0.418,9,1.496,10,4.184,11,1.76,12,0.164,13,0.512,14,1.659,15,3.223,16,0.563,17,1.717,18,1.182,20,2.644,21,1.845,22,3.223,23,0.8,25,0.713,26,0.032,27,1.083,28,0.553,29,0.658,30,3.909,32,1.33,37,1.717,38,1.76,39,2.9,40,1.717,41,1.845,43,1.717,44,1.198,45,1.496,46,1.717,47,1.088,48,2.043,49,0.702,50,1.159,51,0.883,52,1.999,53,1.088,54,2.359,55,1.33,56,3.909,57,1.404,58,1.865,59,0.476,60,2.169,61,1.088,62,1.496,63,2.391,64,0.994,65,1.717,66,1.451,67,1.088,68,0.97,69,0.713,70,1.717,71,1.649,72,1.496,73,1.717,74,2.043,75,2.644,76,1.717,77,1.717,78,2.644,79,1.717,80,1.717,81,1.717,82,1.717,83,1.717,84,1.088,85,1.496,86,2.048,87,3.376,88,0.243,89,0.732,90,2.048,91,2.644,92,1.669,93,2.303,94,2.303,95,3.223,96,1.845,97,2.527,98,2.096,99,2.303,100,4.441,101,2.497,102,1.531,103,1.291,104,1.531,105,1.923,106,2.048,107,1.676,108,2.193,109,2.644,110,0.773,111,2.048,112,1.33,113,1.717,114,1.717,115,1.717,116,1.717,117,1.717,118,1.717,119,0.616,120,1.717,121,1.717,122,1.717,123,2.295,124,1.63,125,2.303,126,2.644,127,2.048,128,1.845,129,2.644,130,2.644,131,3.62,132,1.717,133,2.048,134,1.717,135,1.717,136,1.198,137,1.088,138,1.717,139,0.839,140,2.644,141,2.303,142,1.845,143,3.62,144,2.644,145,1.717,146,1.717,147,1.717,148,1.717,149,1.717,150,1.717,151,1.717,152,1.717,153,2.644,154,1.717,155,2.644,156,1.717,157,2.644,158,1.717,159,3.223,160,1.404,161,2.644,162,1.098,163,1.531,164,1.717,165,1.717,166,2.048,167,1.281,168,1.717,169,0.015,170,0.015,236,1.088,585,3.161,586,2.053,587,2.053,588,2.053,589,2.053,590,2.053,591,2.053,592,2.053]],["title/interfaces/IDestroyable.html",[68,0.818,472,0.753]],["body/interfaces/IDestroyable.html",[3,0.551,4,0.551,5,0.489,6,0.512,8,0.616,12,0.372,16,0.989,23,0.684,26,0.031,49,0.755,50,1.181,68,1.397,88,0.551,167,1.817,169,0.026,170,0.026,280,3.597,341,3.394,345,4.642,368,3.394,369,3.394,370,3.394,383,1.903,384,2.688,472,1.079,528,1.903,593,3.896,594,2.719,595,4.658,596,4.658,597,5.551,598,5.551]],["title/interfaces/IListenable.html",[472,0.753,599,1.573]],["body/interfaces/IListenable.html",[3,0.521,4,0.521,5,0.462,6,0.495,8,0.583,12,0.352,16,0.956,23,0.647,26,0.031,49,0.938,51,0.714,88,0.521,169,0.025,170,0.025,383,2.192,388,3.371,402,2.133,428,2.676,472,1.02,528,1.799,594,3.132,599,2.599,600,3.683,601,6.024,602,4.487,603,4.487,604,3.666,605,5.366,606,5.366,607,5.366,608,4.403,609,5.366,610,3.909]],["title/interfaces/IResizable.html",[233,1.573,472,0.753]],["body/interfaces/IResizable.html",[3,0.49,4,0.49,5,0.435,6,0.476,8,0.683,11,1.945,12,0.331,16,0.92,23,0.608,25,1.439,26,0.031,27,0.96,28,0.49,29,1.328,49,0.671,50,1.1,51,0.671,71,1.328,88,0.49,119,1.207,169,0.025,170,0.025,176,3.764,233,2.502,235,3.612,238,2.619,241,2.739,242,2.997,245,2.856,247,3.348,254,2.684,353,4.321,354,2.739,360,3.126,392,3.764,428,2.619,472,0.96,528,1.692,594,3.016,611,3.464,612,4.321,613,3.016,614,3.016,615,4.142,616,3.764,617,3.764,618,3.764]],["title/interfaces/ISize.html",[238,1.443,472,0.753]],["body/interfaces/ISize.html",[3,0.527,4,0.527,5,0.467,6,0.41,8,0.589,11,2.332,12,0.355,13,0.875,26,0.032,28,0.688,88,0.527,169,0.026,170,0.026,238,2.399,242,2.155,245,2.615,360,2.863,472,1.031,473,3.136,528,1.818,617,4.587,618,4.587,619,3.722,620,5.056,621,3.934]],["title/interfaces/ISource.html",[472,0.753,622,1.896]],["body/interfaces/ISource.html",[3,0.464,4,0.684,5,0.577,6,0.362,8,0.519,11,1.478,12,0.313,13,0.81,26,0.032,27,1.414,28,0.761,29,1.854,38,1.478,39,2.66,41,3.699,48,2.081,88,0.591,104,2.892,169,0.024,170,0.024,289,1.901,471,2.569,472,0.909,528,1.603,546,3.375,622,2.915,623,2.859,624,3.924,625,4.573,626,4.213,627,4.994,628,5.782,629,4.994,630,4.177,631,3.638,632,3.56,633,4.213,634,3.924,635,3.282,636,3.282]],["title/interfaces/IUpdatable.html",[66,1.223,472,0.753]],["body/interfaces/IUpdatable.html",[0,0.022,3,0.549,4,0.549,5,0.487,6,0.51,8,0.613,12,0.37,16,0.986,23,0.681,26,0.031,49,0.752,50,1.178,66,2.084,88,0.549,108,2.723,160,2.629,162,1.611,163,2.866,169,0.026,170,0.026,428,2.459,472,1.074,528,1.895,594,2.707,612,3.879,614,2.707,637,3.879,638,3.379,639,3.879,640,4.638,641,5.536,642,5.536]],["title/classes/RendererHolder.html",[0,0.015,318,2.105]],["body/classes/RendererHolder.html",[0,0.013,2,0.77,3,0.334,4,0.334,5,0.296,6,0.511,8,0.614,11,1.505,12,0.225,13,0.648,14,1.513,16,0.712,18,1.268,23,0.783,25,1.388,26,0.032,27,0.926,28,0.55,29,1.282,32,2.59,49,0.753,50,1.135,51,0.944,58,2.009,59,0.653,66,1.748,67,1.495,68,1.169,69,0.979,71,1.71,88,0.334,89,0.926,92,1.513,108,2.244,110,1.061,119,1.111,123,2.679,124,1.505,139,1.897,163,1.936,167,1.495,169,0.019,170,0.019,196,2.59,197,2.119,203,2.119,229,2.333,231,3.505,233,2.249,234,2.584,235,2.333,236,1.495,237,4.226,238,2.531,240,2.086,241,2.937,242,2.819,245,1.936,247,2.59,253,2.054,254,1.827,255,2.054,256,2.054,259,2.358,268,2.358,274,3.772,275,3.383,280,2.59,287,2.358,311,4.241,318,2.59,360,2.119,363,1.633,392,2.912,470,2.59,482,2.054,546,2.333,643,2.358,644,4.226,645,3.997,646,5.053,647,5.053,648,2.819,649,2.819,650,2.819,651,3.997,652,3.343,653,2.819,654,3.997,655,3.997,656,2.819,657,2.819,658,2.819,659,2.819,660,2.819,661,2.819,662,2.819,663,2.819,664,2.819,665,2.819,666,2.819,667,2.819,668,2.819,669,2.819,670,2.819]],["title/classes/ResourceHandler.html",[0,0.015,52,1.223]],["body/classes/ResourceHandler.html",[0,0.008,2,0.464,3,0.201,4,0.648,5,0.565,6,0.526,8,0.565,12,0.136,13,0.442,14,1.616,16,0.485,18,0.931,23,0.828,25,1.355,26,0.032,27,0.904,28,0.589,29,1.251,34,1.663,35,1.583,38,2.258,39,2.068,41,3.073,47,1.444,49,0.832,50,1.145,51,0.776,52,1.026,57,1.21,58,0.545,59,0.394,62,1.238,68,0.858,69,0.59,71,1.535,74,0.901,88,0.322,89,0.631,90,3.326,92,1.712,94,1.238,104,2.41,110,0.64,119,1.125,137,0.901,162,0.59,167,1.155,169,0.013,170,0.013,194,0.823,240,1.026,251,2.279,280,1.765,289,0.823,296,4.654,354,2.068,364,2.279,372,1.765,383,0.694,384,1.889,388,2.264,402,0.823,426,1.21,428,1.515,440,2.638,458,1.765,461,2.484,471,1.897,473,2.732,474,1.765,494,0.992,534,2.842,599,1.652,604,2.277,613,1.59,614,1.59,622,2.904,625,1.985,626,1.238,632,2.21,633,1.238,671,1.238,672,5.072,673,2.725,674,3.263,675,3.901,676,2.953,677,3.901,678,5.132,679,4.557,680,3.901,681,2.725,682,3.901,683,2.725,684,2.725,685,3.901,686,1.7,687,2.725,688,2.21,689,3.811,690,2.725,691,1.7,692,1.765,693,3.901,694,2.725,695,1.7,696,1.7,697,2.725,698,5.132,699,5.132,700,2.725,701,2.725,702,1.7,703,4.161,704,2.725,705,1.7,706,1.7,707,1.7,708,1.985,709,2.279,710,3.901,711,2.725,712,1.7,713,4.557,714,3.811,715,3.571,716,4.985,717,2.725,718,4.27,719,1.7,720,2.725,721,2.725,722,2.725,723,1.7,724,2.725,725,2.725,726,1.7,727,2.725,728,1.7,729,2.725,730,2.725,731,2.279,732,1.238,733,1.7,734,1.7,735,1.7,736,1.7,737,2.852,738,1.421,739,3.901,740,3.263,741,3.41,742,3.41,743,3.41,744,1.7,745,3.41,746,3.41,747,1.421,748,1.7,749,1.421,750,2.725,751,1.7,752,1.7,753,1.7,754,1.7,755,1.238,756,1.7,757,1.7,758,1.7,759,1.7,760,1.7,761,1.7,762,1.7,763,1.238,764,1.7,765,1.7,766,1.7,767,1.7]],["title/classes/ScreenSizeHandler.html",[0,0.015,357,1.896]],["body/classes/ScreenSizeHandler.html",[0,0.014,2,0.818,3,0.355,4,0.355,5,0.315,6,0.545,8,0.396,9,3.04,11,1.571,12,0.239,13,0.676,14,1.311,16,0.743,18,1.49,21,3.298,23,0.851,26,0.032,34,1.041,35,1.041,49,1.019,51,0.841,84,2.212,88,0.355,89,0.967,92,1.417,105,1.853,119,1.153,169,0.02,170,0.02,194,1.451,221,2.704,238,2.306,241,3.134,242,2.945,245,2.514,250,3.49,354,2.212,355,3.04,357,2.435,360,2.752,388,3.073,402,1.451,465,2.435,473,2.736,494,3.185,599,2.325,604,3.03,610,3.781,614,2.435,616,3.04,617,3.781,618,3.781,620,3.49,621,3.04,638,3.04,676,3.661,692,3.363,708,3.04,732,2.183,755,2.183,763,2.183,768,2.506,769,5.191,770,5.191,771,5.191,772,5.191,773,4.173,774,2.997,775,2.997,776,4.564,777,4.173,778,4.173,779,2.997,780,2.997,781,2.997,782,4.173,783,2.997,784,4.173,785,4.173,786,4.173,787,2.997,788,2.997,789,2.997]],["title/components/ThreeViewerComponent.html",[171,1.722,202,1.722]],["body/components/ThreeViewerComponent.html",[0,0.015,3,0.362,4,0.362,5,0.322,6,0.507,8,0.405,12,0.245,13,0.687,16,0.755,23,0.808,26,0.032,27,0.981,28,0.501,48,2.246,49,0.687,50,1.033,51,0.687,58,1.358,59,1.377,88,0.362,89,0.981,92,1.431,102,2.664,119,0.826,124,1.595,139,1.731,169,0.02,170,0.02,171,2.916,172,1.624,173,2.472,174,2.231,175,2.561,176,2.231,177,2.561,181,2.231,182,2.561,183,4.382,184,4.382,185,3.543,187,3.543,194,1.483,195,2.561,196,2.745,197,2.246,198,2.231,199,4.382,200,2.561,201,2.561,202,2.778,203,2.916,204,2.561,205,2.561,223,4.007,240,1.973,274,3.779,305,3.701,350,3.779,363,2.324,435,3.817,441,3.086,644,4.061,715,2.561,740,2.561,790,2.561,791,4.236,792,4.061,793,4.236,794,3.543,795,4.856,796,4.856,797,4.856,798,4.236,799,4.856,800,4.382,801,5.689,802,3.063,803,4.236,804,4.236,805,3.063,806,4.236,807,4.856,808,3.063,809,4.236,810,3.063,811,4.236,812,3.543,813,4.236,814,3.086,815,3.063,816,3.063,817,3.063,818,3.063,819,3.063,820,3.063,821,3.063,822,3.063,823,3.063]],["title/classes/TimeHandler.html",[0,0.015,54,1.443]],["body/classes/TimeHandler.html",[0,0.011,2,0.628,3,0.272,4,0.272,5,0.241,6,0.543,8,0.304,12,0.184,13,0.558,14,1.409,16,0.614,18,1.342,21,3.476,23,0.854,26,0.032,28,0.543,34,1.707,35,1.707,49,0.975,50,0.489,51,0.67,54,2.038,74,1.219,84,1.826,88,0.272,89,0.798,92,1.705,103,1.407,105,1.53,107,3.414,119,0.895,124,1.297,141,3.342,160,1.53,162,1.792,163,2.912,169,0.016,170,0.016,180,3.837,194,1.113,309,2.509,350,3.817,354,2.735,363,1.407,372,2.232,374,4.981,378,2.973,388,2.605,402,1.113,429,2.509,473,2.853,494,2.678,546,3.21,599,2,604,2.678,610,2.509,613,2.01,638,2.509,676,3.342,692,2.973,708,3.342,732,1.675,755,1.675,763,1.675,824,1.923,825,5.624,826,5.624,827,4.588,828,4.588,829,4.588,830,3.444,831,5.158,832,2.299,833,4.588,834,2.299,835,3.444,836,3.837,837,2.881,838,3.444,839,3.444,840,2.299,841,3.837,842,3.444,843,4.131,844,2.299,845,2.299,846,4.131,847,3.444,848,3.444,849,3.444,850,3.444,851,2.299,852,3.444,853,2.299,854,3.444,855,3.444,856,3.444,857,3.444,858,2.881,859,2.509,860,2.299,861,3.444,862,2.299,863,3.444,864,3.444,865,3.444,866,4.131,867,4.131,868,3.444,869,4.588,870,3.444,871,2.299]],["title/classes/World.html",[0,0.015,323,1.722]],["body/classes/World.html",[0,0.012,2,0.667,3,0.289,4,0.289,5,0.45,6,0.527,8,0.477,10,2.626,11,1.357,12,0.195,13,0.584,14,1.561,16,0.642,18,1.169,23,0.822,25,0.849,26,0.032,27,0.566,28,0.597,29,0.784,34,0.849,35,0.849,44,2.104,47,1.296,49,0.584,50,1.006,51,0.956,52,1.78,53,1.296,54,2.487,55,1.584,58,1.833,59,0.566,60,2.375,61,1.296,66,1.612,67,1.296,68,1.078,69,0.849,71,1.373,86,2.336,87,3.031,88,0.289,89,0.835,92,1.732,98,1.746,102,2.555,103,1.473,104,2.29,105,2.343,106,2.336,107,1.911,108,2.1,110,0.92,119,0.983,142,2.104,160,1.601,162,1.252,167,1.399,169,0.017,170,0.017,197,1.911,234,2.29,236,1.296,301,2.626,323,3.223,326,3.015,336,2.626,350,3.063,363,2.438,365,4.683,368,2.626,369,2.626,370,2.626,377,3.015,378,2.336,380,2.044,383,1.473,384,1.746,389,2.336,402,1.184,408,2.044,426,2.619,428,2.1,430,2.336,440,1.911,530,3.337,613,2.104,614,2.759,631,2.626,688,1.584,858,3.015,872,2.044,873,3.605,874,3.605,875,3.015,876,3.605,877,3.015,878,2.444,879,4.727,880,2.444,881,3.605,882,2.444,883,3.605,884,2.444,885,3.605,886,3.605,887,3.605,888,2.444,889,2.444,890,2.444,891,2.444,892,2.444,893,2.444,894,2.044,895,2.444,896,2.444,897,4.283,898,3.605,899,2.444,900,2.444,901,2.444,902,2.444,903,2.444,904,2.444,905,2.444,906,2.444,907,2.444]],["title/coverage.html",[908,3.688]],["body/coverage.html",[0,0.03,1,2.317,5,0.375,6,0.607,7,3.426,26,0.032,28,0.423,52,1.346,54,1.588,60,1.461,66,1.346,68,0.9,87,1.896,119,0.697,169,0.022,170,0.022,171,2.493,172,1.896,178,2.99,202,1.896,223,2.605,227,2.317,228,2.99,233,1.732,238,1.588,261,5.538,270,2.317,271,2.99,288,2.99,305,2.087,306,2.99,318,2.317,323,1.896,357,2.087,426,2.334,427,3.426,439,2.317,472,1.406,530,2.087,531,2.99,593,2.99,599,1.732,600,2.99,611,2.99,619,2.99,622,2.087,623,2.605,637,2.99,643,2.99,671,2.605,688,2.317,768,2.99,790,2.99,824,2.99,872,2.99,908,2.99,909,2.99,910,3.576,911,3.576,912,5.799,913,3.576,914,5.582,915,3.576,916,2.99,917,2.605,918,5.254,919,5.254,920,5.582,921,3.576,922,3.576,923,3.576,924,5.254,925,3.576,926,2.99,927,2.99,928,3.576,929,3.576]],["title/dependencies.html",[209,2.527,930,2.278]],["body/dependencies.html",[26,0.032,59,1.086,63,2.271,64,2.271,169,0.026,170,0.026,194,2.271,209,3.039,220,4.661,221,3.611,402,2.271,931,4.69,932,6.49,933,4.69,934,4.69,935,4.69,936,4.69,937,4.69,938,4.69,939,4.69,940,4.69,941,4.69,942,4.69,943,4.69,944,4.69]],["title/miscellaneous/enumerations.html",[945,1.444,946,3.262]],["body/miscellaneous/enumerations.html",[6,0.454,12,0.393,26,0.03,28,0.582,35,2.107,39,2.383,48,2.609,104,2.383,169,0.027,170,0.027,471,2.547,623,3.585,632,3.189,633,4.177,635,4.116,636,4.116,945,2.609,946,4.116,947,4.921]],["title/index.html",[12,0.218,859,1.984,948,2.278]],["body/index.html",[0,0.024,26,0.029,27,0.59,28,0.301,34,0.884,38,0.958,39,2.334,49,0.413,51,0.711,52,0.958,54,1.65,57,1.948,58,1.406,59,1.187,66,0.958,68,0.641,74,2.837,84,2.555,87,1.969,89,1.117,90,3.123,103,1.791,105,1.65,106,1.649,108,1.13,119,1.104,124,0.958,128,2.167,160,1.13,162,1.674,163,1.233,167,0.753,169,0.018,170,0.018,171,1.969,173,1.485,174,3.194,179,3.667,190,2.128,191,2.128,192,2.128,203,2.324,229,3.124,230,2.128,231,2.559,232,2.705,233,1.233,234,1.798,235,2.559,240,2.015,241,1.349,242,1.798,243,2.128,245,1.798,249,1.854,272,2.128,289,2.334,305,3.124,307,2.128,308,2.128,309,2.705,310,2.128,311,2.705,312,2.128,313,3.106,314,1.854,315,3.106,316,2.128,317,2.128,319,2.128,320,2.128,322,2.128,323,1.349,336,1.854,341,2.705,349,2.128,354,1.969,355,2.705,357,1.485,360,1.969,362,2.128,363,1.04,372,2.406,378,1.649,383,2.094,386,2.128,388,2.324,389,1.649,394,2.128,426,1.65,430,1.649,440,2.324,455,3.321,458,1.649,471,1.65,474,2.406,528,1.04,530,2.167,532,3.106,533,3.106,534,3.194,546,1.485,549,3.667,551,2.128,554,1.854,563,2.128,594,2.813,599,1.233,603,2.128,604,1.485,613,1.485,616,1.854,621,2.705,631,1.854,639,3.106,652,2.128,672,2.128,674,2.128,676,1.649,692,2.406,703,2.128,714,3.667,731,2.128,794,2.128,800,2.128,814,1.854,836,2.128,841,2.128,894,2.128,909,3.106,917,1.854,949,2.545,950,2.545,951,3.713,952,2.545,953,2.545,954,3.713,955,2.545,956,2.545,957,2.545,958,2.545,959,2.545,960,2.128,961,2.545,962,3.713,963,2.545,964,2.545,965,2.545,966,3.713,967,2.545,968,2.545,969,2.545,970,2.545,971,2.545,972,2.545,973,3.713,974,2.545,975,3.667,976,3.667,977,2.545,978,2.545,979,2.545,980,2.545,981,4.385,982,2.545,983,2.545,984,2.545,985,2.545,986,2.545,987,2.545,988,2.545,989,2.545,990,2.545,991,2.545,992,2.545,993,2.545,994,2.545,995,3.713,996,3.713,997,2.545,998,2.545,999,4.385,1000,2.545,1001,2.545,1002,2.545,1003,2.545,1004,2.545,1005,2.545,1006,2.545,1007,2.545,1008,2.545,1009,4.82,1010,4.82,1011,4.385,1012,4.82,1013,2.545,1014,5.526,1015,2.545,1016,2.128,1017,2.545,1018,2.545,1019,2.545,1020,2.545,1021,2.545,1022,3.713,1023,4.82,1024,2.545,1025,4.385,1026,2.545,1027,2.545,1028,2.545,1029,2.545,1030,2.545,1031,2.545,1032,2.545,1033,2.545,1034,2.545,1035,2.545,1036,2.545,1037,2.545,1038,2.545,1039,2.545,1040,2.545,1041,2.545,1042,2.545,1043,2.545,1044,2.545,1045,2.545,1046,2.545,1047,3.713,1048,2.128,1049,2.545,1050,2.545,1051,3.713,1052,2.545,1053,2.545,1054,2.545,1055,3.713,1056,2.545,1057,2.545,1058,2.545,1059,2.545,1060,2.545,1061,2.545,1062,2.545,1063,3.713,1064,2.545,1065,2.545]],["title/license.html",[859,1.984,948,2.278,1066,2.278]],["body/license.html",[11,1.444,21,1.834,23,0.299,26,0.015,44,1.189,45,3.141,48,1.08,107,1.666,162,1.497,169,0.015,170,0.015,189,1.704,198,2.289,295,1.704,314,1.484,323,1.666,465,1.834,473,1.522,554,1.484,602,1.704,630,1.704,709,2.628,737,2.628,792,1.704,812,1.704,814,2.794,837,1.704,875,1.704,877,4.43,960,1.704,975,1.704,976,4.29,1016,1.704,1048,1.704,1066,4.116,1067,5.129,1068,5.297,1069,4.658,1070,5.129,1071,2.037,1072,2.037,1073,2.037,1074,5.297,1075,2.037,1076,2.037,1077,3.142,1078,4.658,1079,2.037,1080,2.037,1081,2.037,1082,2.037,1083,2.037,1084,3.835,1085,3.835,1086,2.037,1087,4.658,1088,4.311,1089,2.037,1090,3.835,1091,2.037,1092,2.037,1093,2.037,1094,2.037,1095,2.037,1096,2.037,1097,3.142,1098,2.037,1099,2.037,1100,3.142,1101,5.649,1102,5.649,1103,6.198,1104,3.142,1105,3.142,1106,2.037,1107,2.037,1108,2.037,1109,3.142,1110,3.142,1111,6.292,1112,2.037,1113,3.835,1114,3.142,1115,2.037,1116,3.142,1117,3.142,1118,2.037,1119,3.835,1120,2.037,1121,3.142,1122,3.142,1123,4.311,1124,2.037,1125,5.129,1126,2.037,1127,2.037,1128,4.311,1129,3.142,1130,2.037,1131,2.037,1132,2.037,1133,3.142,1134,2.037,1135,2.037,1136,2.037,1137,2.037,1138,3.835,1139,4.658,1140,5.435,1141,4.658,1142,3.835,1143,2.037,1144,2.037,1145,2.037,1146,3.142,1147,2.037,1148,3.142,1149,1.704,1150,2.037,1151,2.037,1152,2.037,1153,2.037,1154,2.037,1155,2.037,1156,2.037,1157,2.037,1158,2.037,1159,2.037,1160,3.142,1161,2.037,1162,5.649,1163,4.658,1164,2.037,1165,2.037,1166,2.037,1167,3.142,1168,5.129,1169,2.037,1170,2.037,1171,2.037,1172,2.037,1173,2.037,1174,2.037,1175,2.037,1176,2.037,1177,2.037,1178,2.037,1179,2.037,1180,2.037,1181,2.037,1182,2.037,1183,4.311,1184,2.037,1185,2.037,1186,2.037,1187,2.037,1188,3.835,1189,2.037,1190,2.037,1191,2.037,1192,3.142,1193,2.037,1194,2.037,1195,2.037,1196,3.835,1197,3.142,1198,2.037,1199,2.037,1200,2.037,1201,2.037,1202,3.142,1203,3.142,1204,2.037,1205,2.037,1206,2.037,1207,2.037,1208,2.037,1209,2.037,1210,2.037,1211,4.658,1212,2.037,1213,2.037,1214,2.037,1215,2.037,1216,2.037,1217,2.037,1218,2.037,1219,2.037,1220,2.037,1221,2.037,1222,3.142,1223,2.037,1224,3.835,1225,2.037,1226,2.037,1227,1.704,1228,2.037,1229,2.037,1230,2.037,1231,5.129,1232,3.835,1233,2.037,1234,5.129,1235,3.142,1236,3.142,1237,2.037,1238,3.835,1239,2.037,1240,2.037,1241,2.037,1242,2.037,1243,2.037,1244,2.037,1245,4.922,1246,3.142,1247,3.835,1248,3.142,1249,2.037,1250,2.037,1251,2.037,1252,2.037,1253,2.037,1254,4.658,1255,3.142,1256,3.142,1257,3.835,1258,3.142,1259,3.142,1260,3.142,1261,3.142,1262,3.142,1263,3.142,1264,2.037,1265,2.037,1266,2.037,1267,2.037,1268,2.037,1269,2.037,1270,2.037,1271,4.311,1272,2.037,1273,2.037,1274,2.037,1275,2.037,1276,2.037,1277,2.037,1278,2.037,1279,2.037,1280,2.037,1281,4.311,1282,3.835,1283,2.037,1284,3.142,1285,3.835,1286,3.142,1287,3.142,1288,3.142,1289,2.037,1290,2.037,1291,2.037,1292,2.037,1293,2.037,1294,3.142,1295,2.037,1296,4.311,1297,2.037,1298,2.037,1299,2.037,1300,2.037,1301,3.142,1302,2.037,1303,2.037,1304,2.037,1305,2.037,1306,2.037,1307,2.037,1308,2.037,1309,2.037,1310,2.037,1311,2.037,1312,2.037,1313,3.142,1314,2.037,1315,2.037,1316,2.037,1317,2.037,1318,2.037,1319,2.037,1320,2.037,1321,2.037,1322,2.037,1323,3.142,1324,2.037,1325,2.037,1326,2.037,1327,2.037,1328,2.037,1329,2.037,1330,2.037,1331,2.037,1332,2.037,1333,2.037,1334,3.142,1335,2.037,1336,2.037,1337,2.037,1338,2.037,1339,2.037,1340,2.037,1341,2.037,1342,3.142,1343,2.037,1344,2.037,1345,2.037,1346,2.037,1347,2.037,1348,2.037,1349,2.037,1350,2.037,1351,2.037,1352,2.037,1353,2.037,1354,2.037]],["title/modules.html",[208,3.213]],["body/modules.html",[26,0.028,169,0.028,170,0.028,207,3.322,208,3.735,221,3.322,1355,5.126,1356,5.126,1357,5.126]],["title/overview.html",[1358,3.688]],["body/overview.html",[2,1.298,26,0.03,84,2.52,169,0.027,170,0.027,172,3.423,173,2.775,202,3.17,206,3.976,207,4.183,209,3.64,210,3.976,211,3.976,212,3.976,213,4.698,214,3.976,215,3.976,528,1.942,776,3.976,1358,3.976,1359,4.754,1360,4.754]],["title/properties.html",[13,0.632,930,2.278]],["body/properties.html",[13,0.835,26,0.029,169,0.028,170,0.028,1227,4.308,1361,5.151]],["title/miscellaneous/typealiases.html",[945,1.444,1362,3.901]],["body/miscellaneous/typealiases.html",[6,0.459,12,0.398,26,0.03,28,0.683,38,1.875,39,2.412,169,0.027,170,0.027,289,2.412,383,2.035,471,2.212,632,3.227,671,3.628,716,4.828,945,2.64,1363,4.98,1364,4.98]],["title/miscellaneous/variables.html",[945,1.444,1365,3.262]],["body/miscellaneous/variables.html",[6,0.383,12,0.331,26,0.032,27,1.367,28,0.743,34,1.958,35,1.958,47,2.2,85,3.023,139,1.696,169,0.025,170,0.025,384,2.01,426,2.75,428,2.298,622,2.422,625,4.106,626,3.023,688,3.352,689,3.471,738,3.471,747,4.327,749,3.471,916,3.471,917,3.769,926,3.471,927,3.471,945,2.2,1149,5.078,1365,4.714,1366,4.15,1367,4.15,1368,4.15,1369,4.15,1370,4.15,1371,4.15,1372,4.15,1373,4.15,1374,4.15,1375,4.15,1376,4.15,1377,4.15,1378,4.15,1379,4.15,1380,4.15,1381,4.15,1382,4.15]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":831,"title":{},"body":{"classes/TimeHandler.html":{}}}],["0.001",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.1.0",{"_index":1361,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["0.141.0",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["0.16.1",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.5",{"_index":579,"title":{},"body":{"classes/Floor.html":{}}}],["00:00:00",{"_index":850,"title":{},"body":{"classes/TimeHandler.html":{}}}],["0xff0000",{"_index":1051,"title":{},"body":{"index.html":{}}}],["1",{"_index":84,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1071,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":571,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":501,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1217,"title":{},"body":{"license.html":{}}}],["12/12",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":1359,"title":{},"body":{"overview.html":{}}}],["14",{"_index":970,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":499,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["17/17",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["1970",{"_index":849,"title":{},"body":{"classes/TimeHandler.html":{}}}],["1996",{"_index":1219,"title":{},"body":{"license.html":{}}}],["2",{"_index":776,"title":{},"body":{"classes/ScreenSizeHandler.html":{},"overview.html":{}}}],["2.25",{"_index":496,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.3.0",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{}}}],["35",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":363,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1205,"title":{},"body":{"license.html":{}}}],["4/4",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":513,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["7",{"_index":1360,"title":{},"body":{"overview.html":{}}}],["7.5.0",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["8/8",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1213,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1320,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1243,"title":{},"body":{"license.html":{}}}],["above",{"_index":777,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["absence",{"_index":1334,"title":{},"body":{"license.html":{}}}],["account",{"_index":1291,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1337,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1351,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":557,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1180,"title":{},"body":{"license.html":{}}}],["add",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":396,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{}}}],["addition",{"_index":1292,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1157,"title":{},"body":{"license.html":{}}}],["adds",{"_index":727,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["advertising",{"_index":1262,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1294,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1162,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1245,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1310,"title":{},"body":{"license.html":{}}}],["against",{"_index":1198,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1363,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1225,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1113,"title":{},"body":{"license.html":{}}}],["angular",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":984,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["announce",{"_index":861,"title":{},"body":{"classes/TimeHandler.html":{}}}],["antialias",{"_index":657,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":172,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1231,"title":{},"body":{"license.html":{}}}],["application",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"classes/TimeHandler.html":{}}}],["applied",{"_index":554,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ScreenSizeHandler.html":{},"license.html":{}}}],["appmodule",{"_index":207,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":986,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1212,"title":{},"body":{"license.html":{}}}],["aspect",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{}}}],["assert",{"_index":1312,"title":{},"body":{"license.html":{}}}],["assets",{"_index":977,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1246,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1161,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1080,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1186,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1112,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1098,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":368,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["axiom_3d",{"_index":1065,"title":{},"body":{"index.html":{}}}],["b",{"_index":1324,"title":{},"body":{"license.html":{}}}],["based",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"license.html":{}}}],["basis",{"_index":1083,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1053,"title":{},"body":{"index.html":{}}}],["beginning",{"_index":854,"title":{},"body":{"classes/TimeHandler.html":{}}}],["behaviour",{"_index":315,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["below",{"_index":1104,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1264,"title":{},"body":{"license.html":{}}}],["between",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/TimeHandler.html":{}}}],["bind",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":334,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":974,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":806,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":985,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1054,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1056,"title":{},"body":{"index.html":{}}}],["break",{"_index":746,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["browse",{"_index":1357,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"classes/ScreenSizeHandler.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":956,"title":{},"body":{"index.html":{}}}],["build",{"_index":1130,"title":{},"body":{"license.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ScreenSizeHandler.html":{}}}],["c",{"_index":1341,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":833,"title":{},"body":{"classes/TimeHandler.html":{}}}],["calculations",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":714,"title":{},"body":{"classes/ResourceHandler.html":{},"index.html":{}}}],["callback",{"_index":713,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["camera",{"_index":231,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["cameraholder",{"_index":227,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":328,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":717,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["cancellation",{"_index":1274,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":799,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":558,"title":{},"body":{"classes/Floor.html":{}}}],["care",{"_index":1009,"title":{},"body":{"index.html":{}}}],["case",{"_index":737,"title":{},"body":{"classes/ResourceHandler.html":{},"license.html":{}}}],["casting",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1247,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1070,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1115,"title":{},"body":{"license.html":{}}}],["change",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{}}}],["changes",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ScreenSizeHandler.html":{}}}],["check",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceHandler.html":{}}}],["checks",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":417,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":419,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":490,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":492,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":420,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":316,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["chosen",{"_index":232,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"index.html":{}}}],["circlegeometry",{"_index":538,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1128,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":598,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":803,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1343,"title":{},"body":{"license.html":{}}}],["client",{"_index":1081,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":975,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":887,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":549,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1142,"title":{},"body":{"license.html":{}}}],["common",{"_index":1013,"title":{},"body":{"index.html":{}}}],["commonly",{"_index":855,"title":{},"body":{"classes/TimeHandler.html":{}}}],["commons",{"_index":1068,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":314,"title":{},"body":{"classes/Engine.html":{},"index.html":{},"license.html":{}}}],["compensation",{"_index":1159,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1200,"title":{},"body":{"license.html":{}}}],["complete",{"_index":762,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["completed",{"_index":710,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["component",{"_index":171,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"index.html":{},"overview.html":{}}}],["composing",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1038,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1328,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1099,"title":{},"body":{"license.html":{}}}],["configure",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":433,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":535,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":562,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":536,"title":{},"body":{"classes/Floor.html":{}}}],["consents",{"_index":1347,"title":{},"body":{"license.html":{}}}],["consider",{"_index":251,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceHandler.html":{}}}],["consideration",{"_index":1158,"title":{},"body":{"license.html":{}}}],["considered",{"_index":652,"title":{},"body":{"classes/RendererHolder.html":{},"index.html":{}}}],["console.log('loading",{"_index":761,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["console.log('play",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log('resources",{"_index":893,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":767,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["console.log(`loading",{"_index":764,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["console.log(newaction",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["constructor(camera",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":324,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(private",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":236,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":686,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["contained",{"_index":393,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":382,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":791,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":532,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["contemplated",{"_index":1280,"title":{},"body":{"license.html":{}}}],["content",{"_index":1017,"title":{},"body":{"index.html":{}}}],["contract",{"_index":594,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"index.html":{}}}],["contracts",{"_index":1019,"title":{},"body":{"index.html":{}}}],["contrary",{"_index":1314,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1237,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1143,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1120,"title":{},"body":{"license.html":{}}}],["control",{"_index":997,"title":{},"body":{"index.html":{}}}],["controls",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":270,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":331,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1261,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1101,"title":{},"body":{"license.html":{}}}],["core",{"_index":307,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["corporation",{"_index":1073,"title":{},"body":{"license.html":{}}}],["correct",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceHandler.html":{},"index.html":{}}}],["correctly",{"_index":556,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1216,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":908,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1079,"title":{},"body":{"license.html":{}}}],["creative",{"_index":1067,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1106,"title":{},"body":{"license.html":{}}}],["cube",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceHandler.html":{},"index.html":{}}}],["cube_texture",{"_index":636,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":632,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":675,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":690,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["cultural",{"_index":1121,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1147,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"license.html":{}}}],["currenttime",{"_index":867,"title":{},"body":{"classes/TimeHandler.html":{}}}],["d",{"_index":1349,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1092,"title":{},"body":{"license.html":{}}}],["damping",{"_index":998,"title":{},"body":{"index.html":{}}}],["data",{"_index":1209,"title":{},"body":{"license.html":{}}}],["database",{"_index":1114,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1221,"title":{},"body":{"license.html":{}}}],["date",{"_index":1304,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":843,"title":{},"body":{"classes/TimeHandler.html":{}}}],["debug",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debug/debuggui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":60,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debugobject",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":808,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1302,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1336,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":825,"title":{},"body":{"classes/TimeHandler.html":{}}}],["dependencies",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":731,"title":{},"body":{"classes/ResourceHandler.html":{},"index.html":{}}}],["depicted",{"_index":1195,"title":{},"body":{"license.html":{}}}],["described",{"_index":883,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["destroy",{"_index":167,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"index.html":{}}}],["destroyable",{"_index":386,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyable.destroy",{"_index":425,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":317,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyed",{"_index":885,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":804,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detriment",{"_index":1267,"title":{},"body":{"license.html":{}}}],["development",{"_index":1369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["device",{"_index":361,"title":{},"body":{"classes/Engine.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["different",{"_index":1018,"title":{},"body":{"index.html":{}}}],["directional",{"_index":446,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1315,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1090,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1339,"title":{},"body":{"license.html":{}}}],["display",{"_index":792,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":879,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":811,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":389,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{},"classes/World.html":{},"index.html":{}}}],["disposed",{"_index":595,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":342,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{}}}],["disrupt",{"_index":1277,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1208,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1167,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1077,"title":{},"body":{"license.html":{}}}],["document",{"_index":1078,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":909,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1043,"title":{},"body":{"index.html":{}}}],["done",{"_index":693,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["draco",{"_index":1037,"title":{},"body":{"index.html":{}}}],["due",{"_index":718,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["duration",{"_index":1258,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1353,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["easily",{"_index":994,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":310,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["effect",{"_index":1173,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1303,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1153,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":374,"title":{},"body":{"classes/Engine.html":{},"classes/TimeHandler.html":{}}}],["elects",{"_index":1165,"title":{},"body":{"license.html":{}}}],["element",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":807,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":336,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{},"index.html":{}}}],["emit",{"_index":601,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":692,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["emitter",{"_index":721,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["emitting",{"_index":863,"title":{},"body":{"classes/TimeHandler.html":{}}}],["empty",{"_index":841,"title":{},"body":{"classes/TimeHandler.html":{},"index.html":{}}}],["enabled",{"_index":999,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":563,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["end",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":305,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":344,"title":{},"body":{"classes/Engine.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":822,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":817,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enjoyment",{"_index":1279,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":813,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enum",{"_index":634,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":946,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":426,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":901,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":439,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1276,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1230,"title":{},"body":{"license.html":{}}}],["error",{"_index":715,"title":{},"body":{"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":741,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["error('canvas",{"_index":820,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":752,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["errors",{"_index":1338,"title":{},"body":{"license.html":{}}}],["european",{"_index":1214,"title":{},"body":{"license.html":{}}}],["event",{"_index":354,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["eventemitter",{"_index":676,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["events",{"_index":609,"title":{},"body":{"interfaces/IListenable.html":{}}}],["example",{"_index":858,"title":{},"body":{"classes/TimeHandler.html":{},"classes/World.html":{}}}],["exclusive",{"_index":1100,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1301,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1252,"title":{},"body":{"license.html":{}}}],["exists",{"_index":753,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["expectation",{"_index":1156,"title":{},"body":{"license.html":{}}}],["experience",{"_index":350,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["exposes",{"_index":638,"title":{},"body":{"interfaces/IUpdatable.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["express",{"_index":1281,"title":{},"body":{"license.html":{}}}],["extensible",{"_index":1015,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":1259,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1163,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1207,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1283,"title":{},"body":{"license.html":{}}}],["false",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":982,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1126,"title":{},"body":{"license.html":{}}}],["features",{"_index":973,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":766,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["fires",{"_index":720,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["firm",{"_index":1075,"title":{},"body":{"license.html":{}}}],["fit",{"_index":969,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1332,"title":{},"body":{"license.html":{}}}],["floor",{"_index":530,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":896,"title":{},"body":{"classes/World.html":{}}}],["folders",{"_index":988,"title":{},"body":{"index.html":{}}}],["follow",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"index.html":{}}}],["following",{"_index":1178,"title":{},"body":{"license.html":{}}}],["form",{"_index":1137,"title":{},"body":{"license.html":{}}}],["forward",{"_index":864,"title":{},"body":{"classes/TimeHandler.html":{}}}],["fox",{"_index":87,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":899,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["framerate",{"_index":839,"title":{},"body":{"classes/TimeHandler.html":{}}}],["free",{"_index":1146,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1135,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1061,"title":{},"body":{"index.html":{}}}],["fully",{"_index":709,"title":{},"body":{"classes/ResourceHandler.html":{},"license.html":{}}}],["function",{"_index":423,"title":{},"body":{"classes/Engine.html":{}}}],["further",{"_index":1148,"title":{},"body":{"license.html":{}}}],["future",{"_index":1254,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1150,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":886,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["geometries",{"_index":1024,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":533,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getcurrenttime",{"_index":827,"title":{},"body":{"classes/TimeHandler.html":{}}}],["getdeltatime",{"_index":828,"title":{},"body":{"classes/TimeHandler.html":{}}}],["getelapsedtime",{"_index":829,"title":{},"body":{"classes/TimeHandler.html":{}}}],["getheight",{"_index":769,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["getpixelratio",{"_index":770,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["getsize",{"_index":771,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["getting",{"_index":948,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":772,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["gives",{"_index":373,"title":{},"body":{"classes/Engine.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":677,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["gltfloader(this.loadingmanager",{"_index":694,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["gltfmodel",{"_index":635,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1293,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1152,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1235,"title":{},"body":{"license.html":{}}}],["group",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{}}}],["handle",{"_index":1011,"title":{},"body":{"index.html":{}}}],["handled",{"_index":1007,"title":{},"body":{"index.html":{}}}],["handler",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["handler/resource/resourcehandler",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["handler/resource/sources",{"_index":890,"title":{},"body":{"classes/World.html":{}}}],["handler/size/isize",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["handler/size/screensizehandler",{"_index":401,"title":{},"body":{"classes/Engine.html":{}}}],["handler/time/timehandler",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["handlers",{"_index":313,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["handles",{"_index":613,"title":{},"body":{"interfaces/IResizable.html":{},"classes/ResourceHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["handling",{"_index":1040,"title":{},"body":{"index.html":{}}}],["heart",{"_index":991,"title":{},"body":{"index.html":{}}}],["height",{"_index":618,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/ScreenSizeHandler.html":{}}}],["heirs",{"_index":1268,"title":{},"body":{"license.html":{}}}],["held",{"_index":1318,"title":{},"body":{"license.html":{}}}],["here",{"_index":628,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1238,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1089,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1094,"title":{},"body":{"license.html":{}}}],["highly",{"_index":962,"title":{},"body":{"index.html":{}}}],["holder",{"_index":229,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["holder/cameraholder",{"_index":399,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":398,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":397,"title":{},"body":{"classes/Engine.html":{}}}],["holders",{"_index":992,"title":{},"body":{"index.html":{}}}],["holds",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["html",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["huge",{"_index":955,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1145,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":68,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["ii",{"_index":1183,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1188,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":599,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"coverage.html":{},"index.html":{}}}],["image",{"_index":1193,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1223,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1233,"title":{},"body":{"license.html":{}}}],["implements",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["implied",{"_index":1329,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["include",{"_index":1176,"title":{},"body":{"license.html":{}}}],["including",{"_index":1140,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1030,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1132,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1288,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1307,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["inform",{"_index":842,"title":{},"body":{"classes/TimeHandler.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"classes/World.html":{},"license.html":{}}}],["informed",{"_index":782,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["informs",{"_index":359,"title":{},"body":{"classes/Engine.html":{}}}],["infringement",{"_index":1129,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{}}}],["initialsize",{"_index":237,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{}}}],["inspiration",{"_index":958,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":963,"title":{},"body":{"index.html":{}}}],["instance",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"index.html":{}}}],["instanceof",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{}}}],["instantiated",{"_index":873,"title":{},"body":{"classes/World.html":{}}}],["instantiation",{"_index":309,"title":{},"body":{"classes/Engine.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["integration",{"_index":1032,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1172,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1270,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":472,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":732,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["interface/iresizable",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":528,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":1287,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1308,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1306,"title":{},"body":{"license.html":{}}}],["iresizable",{"_index":233,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1299,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1240,"title":{},"body":{"license.html":{}}}],["isenvmappable",{"_index":436,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":238,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"coverage.html":{}}}],["isource",{"_index":622,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":1058,"title":{},"body":{"index.html":{}}}],["item",{"_index":716,"title":{},"body":{"classes/ResourceHandler.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":760,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["item.scene.traverse((object",{"_index":757,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["items",{"_index":678,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["itemsloaded",{"_index":698,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["itemstotal",{"_index":699,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["iupdatable",{"_index":66,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["iv",{"_index":1196,"title":{},"body":{"license.html":{}}}],["january",{"_index":848,"title":{},"body":{"classes/TimeHandler.html":{}}}],["jest",{"_index":1031,"title":{},"body":{"index.html":{}}}],["journey",{"_index":964,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1285,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1096,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1036,"title":{},"body":{"index.html":{}}}],["keep",{"_index":989,"title":{},"body":{"index.html":{}}}],["key",{"_index":418,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1327,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":961,"title":{},"body":{"index.html":{}}}],["kit",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1170,"title":{},"body":{"license.html":{}}}],["known",{"_index":1250,"title":{},"body":{"license.html":{}}}],["large",{"_index":1266,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1335,"title":{},"body":{"license.html":{}}}],["later",{"_index":1127,"title":{},"body":{"license.html":{}}}],["law",{"_index":1074,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1095,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":370,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":390,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1069,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1286,"title":{},"body":{"license.html":{}}}],["legend",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":959,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1091,"title":{},"body":{"license.html":{}}}],["license",{"_index":1066,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1322,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["light",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{},"index.html":{}}}],["likeness",{"_index":1194,"title":{},"body":{"license.html":{}}}],["lil",{"_index":64,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{}}}],["limitation",{"_index":1141,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1203,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1177,"title":{},"body":{"license.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":604,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["listenable",{"_index":1026,"title":{},"body":{"index.html":{}}}],["listening",{"_index":312,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":689,"title":{},"body":{"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{},"index.html":{}}}],["loaders",{"_index":980,"title":{},"body":{"index.html":{}}}],["loading",{"_index":672,"title":{},"body":{"classes/ResourceHandler.html":{},"index.html":{}}}],["loadingmanager",{"_index":679,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["loads",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["loop",{"_index":1014,"title":{},"body":{"index.html":{}}}],["made",{"_index":812,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["makes",{"_index":1084,"title":{},"body":{"license.html":{}}}],["manager",{"_index":703,"title":{},"body":{"classes/ResourceHandler.html":{},"index.html":{}}}],["mandatory",{"_index":624,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":987,"title":{},"body":{"index.html":{}}}],["map",{"_index":440,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"index.html":{}}}],["mapping",{"_index":1005,"title":{},"body":{"index.html":{}}}],["maps",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1218,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1023,"title":{},"body":{"index.html":{}}}],["mass",{"_index":1021,"title":{},"body":{"index.html":{}}}],["matching",{"_index":170,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":443,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":789,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["math.pi",{"_index":578,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":507,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":524,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":514,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1257,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1171,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1260,"title":{},"body":{"license.html":{}}}],["member",{"_index":1265,"title":{},"body":{"license.html":{}}}],["memory",{"_index":369,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1331,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1057,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":547,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1055,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":639,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["milliseconds",{"_index":847,"title":{},"body":{"classes/TimeHandler.html":{}}}],["min",{"_index":512,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":506,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":945,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":742,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{}}}],["modelgroup",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":674,"title":{},"body":{"classes/ResourceHandler.html":{},"index.html":{}}}],["modify",{"_index":1131,"title":{},"body":{"license.html":{}}}],["module",{"_index":206,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":208,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1184,"title":{},"body":{"license.html":{}}}],["more",{"_index":1060,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":1027,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1155,"title":{},"body":{"license.html":{}}}],["multiple",{"_index":629,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":523,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":505,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":511,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":516,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":518,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1044,"title":{},"body":{"index.html":{}}}],["national",{"_index":1222,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1346,"title":{},"body":{"license.html":{}}}],["need",{"_index":341,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needed",{"_index":876,"title":{},"body":{"classes/World.html":{}}}],["needs",{"_index":614,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1175,"title":{},"body":{"license.html":{}}}],["new",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":641,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":800,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":801,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["non",{"_index":1296,"title":{},"body":{"license.html":{}}}],["normal",{"_index":551,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["note",{"_index":1042,"title":{},"body":{"index.html":{}}}],["notified",{"_index":605,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":372,"title":{},"body":{"classes/Engine.html":{},"classes/ResourceHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["notify",{"_index":1028,"title":{},"body":{"index.html":{}}}],["now",{"_index":1249,"title":{},"body":{"license.html":{}}}],["null",{"_index":527,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["number",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISize.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"license.html":{}}}],["object",{"_index":428,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":758,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["object.material.dispose",{"_index":759,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["objects",{"_index":383,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1354,"title":{},"body":{"license.html":{}}}],["observable",{"_index":388,"title":{},"body":{"classes/Engine.html":{},"interfaces/IListenable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["obtaining",{"_index":1345,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":972,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":607,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":364,"title":{},"body":{"classes/Engine.html":{},"classes/ResourceHandler.html":{}}}],["offers",{"_index":1325,"title":{},"body":{"license.html":{}}}],["old",{"_index":835,"title":{},"body":{"classes/TimeHandler.html":{}}}],["oldaction",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":525,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":796,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["one",{"_index":836,"title":{},"body":{"classes/TimeHandler.html":{},"index.html":{}}}],["onerror",{"_index":681,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["onerror(url",{"_index":711,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["oninit",{"_index":795,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":682,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["onprogress",{"_index":683,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["onprogress(url",{"_index":722,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["opinion",{"_index":1059,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1039,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{},"index.html":{}}}],["orbitcontrols(camera",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":308,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["organized",{"_index":990,"title":{},"body":{"index.html":{}}}],["original",{"_index":1110,"title":{},"body":{"license.html":{}}}],["others",{"_index":1154,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1323,"title":{},"body":{"license.html":{}}}],["out",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["output",{"_index":1001,"title":{},"body":{"index.html":{}}}],["over",{"_index":1035,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":778,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["overtly",{"_index":1239,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1358,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1109,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":1108,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1116,"title":{},"body":{"license.html":{}}}],["package",{"_index":930,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["panel",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["paragraph",{"_index":1204,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{}}}],["parent",{"_index":327,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1215,"title":{},"body":{"license.html":{}}}],["part",{"_index":814,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{},"license.html":{}}}],["partial",{"_index":1305,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1333,"title":{},"body":{"license.html":{}}}],["party",{"_index":1352,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1317,"title":{},"body":{"license.html":{}}}],["path",{"_index":625,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":626,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["pcf",{"_index":1006,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":654,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1181,"title":{},"body":{"license.html":{}}}],["performer(s",{"_index":1187,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1117,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1340,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1348,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1236,"title":{},"body":{"license.html":{}}}],["person",{"_index":1160,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1192,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1344,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["perspectivecamera",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1191,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1000,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":360,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["pixelratio",{"_index":620,"title":{},"body":{"interfaces/ISize.html":{},"classes/ScreenSizeHandler.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playing",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["position",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1136,"title":{},"body":{"license.html":{}}}],["present",{"_index":875,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1289,"title":{},"body":{"license.html":{}}}],["previous",{"_index":852,"title":{},"body":{"classes/TimeHandler.html":{}}}],["privacy",{"_index":1190,"title":{},"body":{"license.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["process",{"_index":1020,"title":{},"body":{"index.html":{}}}],["product",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1149,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":673,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["promote",{"_index":1144,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1263,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":743,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["protected",{"_index":1174,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1197,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1220,"title":{},"body":{"license.html":{}}}],["provide",{"_index":837,"title":{},"body":{"classes/TimeHandler.html":{},"license.html":{}}}],["provided",{"_index":1088,"title":{},"body":{"license.html":{}}}],["providers",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":960,"title":{},"body":{"index.html":{},"license.html":{}}}],["public",{"_index":1123,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1189,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1166,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":877,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["purposes",{"_index":1139,"title":{},"body":{"license.html":{}}}],["put",{"_index":1047,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1278,"title":{},"body":{"license.html":{}}}],["r141",{"_index":951,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["reach",{"_index":1064,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["ready",{"_index":894,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1284,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":559,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":965,"title":{},"body":{"index.html":{}}}],["redistribute",{"_index":1134,"title":{},"body":{"license.html":{}}}],["reference",{"_index":326,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1086,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1201,"title":{},"body":{"license.html":{}}}],["reinhard",{"_index":1003,"title":{},"body":{"index.html":{}}}],["reinhardtonemapping",{"_index":655,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1102,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1082,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1124,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1118,"title":{},"body":{"license.html":{}}}],["reload",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{}}}],["remainder",{"_index":1309,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1311,"title":{},"body":{"license.html":{}}}],["removes",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":646,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":311,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["rendererholder",{"_index":318,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":346,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":651,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":566,"title":{},"body":{"classes/Floor.html":{}}}],["representations",{"_index":1326,"title":{},"body":{"license.html":{}}}],["representing",{"_index":429,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/TimeHandler.html":{}}}],["reproduce",{"_index":1179,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1151,"title":{},"body":{"license.html":{}}}],["requests",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":630,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1273,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":597,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable",{"_index":1029,"title":{},"body":{"index.html":{}}}],["resizable.resize(size",{"_index":411,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":319,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["resize",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["resize(size",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":353,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":392,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":616,"title":{},"body":{"interfaces/IResizable.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["resource",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resourcehandler",{"_index":52,"title":{"classes/ResourceHandler.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["resourcehandler(sourcelist",{"_index":881,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":384,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceHandler.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1313,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1342,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1093,"title":{},"body":{"license.html":{}}}],["results",{"_index":169,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1185,"title":{},"body":{"license.html":{}}}],["return",{"_index":494,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["reuse",{"_index":1133,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1272,"title":{},"body":{"license.html":{}}}],["revoked",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["reworked",{"_index":967,"title":{},"body":{"index.html":{}}}],["right",{"_index":1048,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1103,"title":{},"body":{"license.html":{}}}],["root",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{}}}],["root'},{'name",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1295,"title":{},"body":{"license.html":{}}}],["runs",{"_index":793,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":402,"title":{},"body":{"classes/Engine.html":{},"interfaces/IListenable.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":838,"title":{},"body":{"classes/TimeHandler.html":{}}}],["scene",{"_index":58,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1122,"title":{},"body":{"license.html":{}}}],["screen",{"_index":621,"title":{},"body":{"interfaces/ISize.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["screensizehandler",{"_index":357,"title":{"classes/ScreenSizeHandler.html":{}},"body":{"classes/Engine.html":{},"classes/ScreenSizeHandler.html":{},"coverage.html":{},"index.html":{}}}],["see",{"_index":981,"title":{},"body":{"index.html":{}}}],["selector",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["services",{"_index":1076,"title":{},"body":{"license.html":{}}}],["set",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["sets",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{}}}],["setting",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":349,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["shaders",{"_index":857,"title":{},"body":{"classes/TimeHandler.html":{}}}],["shadow",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["shadows",{"_index":560,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1271,"title":{},"body":{"license.html":{}}}],["show",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{}}}],["similar",{"_index":1229,"title":{},"body":{"license.html":{}}}],["simon",{"_index":957,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1046,"title":{},"body":{"index.html":{}}}],["single",{"_index":627,"title":{},"body":{"interfaces/ISource.html":{}}}],["size",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["size.height",{"_index":268,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.width",{"_index":267,"title":{},"body":{"classes/CameraHolder.html":{}}}],["sizehandler",{"_index":320,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["source.path",{"_index":739,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["source.pathlist",{"_index":750,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["source.type",{"_index":736,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["sourcelist",{"_index":688,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":684,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["sourceloaded(source",{"_index":725,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["sources",{"_index":631,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{},"index.html":{}}}],["sourcetype",{"_index":633,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":749,"title":{},"body":{"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":738,"title":{},"body":{"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":747,"title":{},"body":{"classes/ResourceHandler.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":953,"title":{},"body":{"index.html":{}}}],["specific",{"_index":606,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../environment.prod.ts",{"_index":1366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":947,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourcehandler.ts",{"_index":1364,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":1002,"title":{},"body":{"index.html":{}}}],["srgbencoding",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":949,"title":{},"body":{"index.html":{}}}],["start",{"_index":826,"title":{},"body":{"classes/TimeHandler.html":{}}}],["started",{"_index":859,"title":{"index.html":{},"license.html":{}},"body":{"classes/TimeHandler.html":{}}}],["starter",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":685,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["starts",{"_index":729,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["startup",{"_index":983,"title":{},"body":{"index.html":{}}}],["state",{"_index":642,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1282,"title":{},"body":{"license.html":{}}}],["statements",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":435,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["status",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{}}}],["statutory",{"_index":1330,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":508,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":610,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{}}}],["styles",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1202,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1298,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":408,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["subscribe((size",{"_index":405,"title":{},"body":{"classes/Engine.html":{}}}],["subscribers",{"_index":708,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["subscription",{"_index":365,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["subscription.unsubscribe",{"_index":415,"title":{},"body":{"classes/Engine.html":{}}}],["subscriptionlist",{"_index":321,"title":{},"body":{"classes/Engine.html":{}}}],["subscriptions",{"_index":366,"title":{},"body":{"classes/Engine.html":{}}}],["subsequent",{"_index":1107,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1226,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1269,"title":{},"body":{"license.html":{}}}],["such",{"_index":1211,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":432,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1355,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["surrendered",{"_index":1321,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1244,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1356,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":735,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["switched",{"_index":995,"title":{},"body":{"index.html":{}}}],["switching",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":612,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1025,"title":{},"body":{"index.html":{}}}],["takes",{"_index":1008,"title":{},"body":{"index.html":{}}}],["taking",{"_index":1290,"title":{},"body":{"license.html":{}}}],["template",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["termination",{"_index":1275,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1169,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1255,"title":{},"body":{"license.html":{}}}],["test",{"_index":978,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1034,"title":{},"body":{"index.html":{}}}],["texture",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceHandler.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":680,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["textureloader(this.loadingmanager",{"_index":704,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["textures",{"_index":534,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceHandler.html":{},"index.html":{}}}],["thanks",{"_index":954,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1224,"title":{},"body":{"license.html":{}}}],["thing",{"_index":968,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.active",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.animationholder",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(this.timehandler.getdeltatime",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":670,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":347,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvas",{"_index":332,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":819,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":493,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":568,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":567,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":337,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":751,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.current",{"_index":869,"title":{},"body":{"classes/TimeHandler.html":{}}}],["this.debugfolder",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":509,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(debugobject",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder?.add(this.environmentmap",{"_index":522,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":504,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":339,"title":{},"body":{"classes/Engine.html":{}}}],["this.debuggui.ui",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debuggui.ui.addfolder('environment",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui.ui.addfolder('fox",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.delta",{"_index":868,"title":{},"body":{"classes/TimeHandler.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":424,"title":{},"body":{"classes/Engine.html":{}}}],["this.elapsed",{"_index":870,"title":{},"body":{"classes/TimeHandler.html":{}}}],["this.engine",{"_index":821,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":823,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.environment",{"_index":900,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":907,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":491,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":489,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":519,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":521,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":755,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["this.eventemitter.emit",{"_index":763,"title":{},"body":{"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{}}}],["this.floor",{"_index":895,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":905,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":898,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update",{"_index":902,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":906,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":583,"title":{},"body":{"classes/Floor.html":{}}}],["this.getheight",{"_index":785,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["this.getpixelratio",{"_index":786,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["this.getwidth",{"_index":784,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["this.gltf",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":744,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.instance",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.dispose",{"_index":287,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":659,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":658,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":669,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":664,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":666,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":668,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":665,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":667,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":662,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":663,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":660,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":661,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":286,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":269,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":756,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.items.set(source.name",{"_index":754,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.material",{"_index":548,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":584,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":580,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":577,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.onerror(url",{"_index":701,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.onload",{"_index":697,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.onprogress(url",{"_index":700,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.rendererholder",{"_index":338,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":410,"title":{},"body":{"classes/Engine.html":{}}}],["this.resize(size",{"_index":406,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourcehandler",{"_index":897,"title":{},"body":{"classes/World.html":{}}}],["this.resourcehandler.destroy",{"_index":904,"title":{},"body":{"classes/World.html":{}}}],["this.resourcehandler.items.get('environmentmaptexture",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourcehandler.items.get('foxmodel",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourcehandler.items.get('grasscolortexture",{"_index":550,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourcehandler.items.get('grassnormaltexture",{"_index":552,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourcehandler.listen",{"_index":892,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":581,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":503,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":520,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":582,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":168,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":526,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":416,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sizehandler.getsize",{"_index":329,"title":{},"body":{"classes/Engine.html":{}}}],["this.sizehandler.listen",{"_index":404,"title":{},"body":{"classes/Engine.html":{}}}],["this.sourcelist",{"_index":734,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.sourceloaded(source",{"_index":745,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.start",{"_index":871,"title":{},"body":{"classes/TimeHandler.html":{}}}],["this.startloading",{"_index":733,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.subscription",{"_index":891,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":903,"title":{},"body":{"classes/World.html":{}}}],["this.subscriptionlist.foreach((subscription",{"_index":414,"title":{},"body":{"classes/Engine.html":{}}}],["this.subscriptionlist.push",{"_index":403,"title":{},"body":{"classes/Engine.html":{}}}],["this.sunlight",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":497,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":495,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":498,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":500,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":502,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":748,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["this.textures.color",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":569,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":570,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":572,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":573,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":574,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":575,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":576,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":866,"title":{},"body":{"classes/TimeHandler.html":{}}}],["this.timehandler",{"_index":380,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["this.timehandler.listen",{"_index":407,"title":{},"body":{"classes/Engine.html":{}}}],["this.ui",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.ui.destroy",{"_index":304,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":412,"title":{},"body":{"classes/Engine.html":{}}}],["this.update",{"_index":409,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1119,"title":{},"body":{"license.html":{}}}],["three",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1049,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1052,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1050,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceHandler.html":{}}}],["three/src/animation/animationaction",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":656,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":653,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":240,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":202,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":602,"title":{},"body":{"interfaces/IListenable.html":{},"license.html":{}}}],["throughout",{"_index":1097,"title":{},"body":{"license.html":{}}}],["throw",{"_index":740,"title":{},"body":{"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":818,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":378,"title":{},"body":{"classes/Engine.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["tiling",{"_index":564,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"license.html":{}}}],["timehandler",{"_index":54,"title":{"classes/TimeHandler.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["title",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tone",{"_index":1004,"title":{},"body":{"index.html":{}}}],["tool",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":724,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["trademark",{"_index":1316,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1297,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1182,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1232,"title":{},"body":{"license.html":{}}}],["tree",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":355,"title":{},"body":{"classes/Engine.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["true",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["twitter",{"_index":1063,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1362,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":421,"title":{},"body":{"classes/Engine.html":{}}}],["types",{"_index":996,"title":{},"body":{"index.html":{}}}],["types/three",{"_index":952,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":971,"title":{},"body":{"index.html":{}}}],["ui",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{}}}],["unconditional",{"_index":1300,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1241,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1168,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1350,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1199,"title":{},"body":{"license.html":{}}}],["uniform",{"_index":856,"title":{},"body":{"classes/TimeHandler.html":{}}}],["unit",{"_index":1033,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1072,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1251,"title":{},"body":{"license.html":{}}}],["unsubscribe",{"_index":387,"title":{},"body":{"classes/Engine.html":{}}}],["up",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["updatable",{"_index":394,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["updatable.update",{"_index":413,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":322,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["update",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"index.html":{}}}],["updated",{"_index":377,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"index.html":{}}}],["upon",{"_index":1105,"title":{},"body":{"license.html":{}}}],["url",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceHandler.html":{}}}],["url}.\\nloaded",{"_index":765,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["use",{"_index":976,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":546,"title":{},"body":{"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/TimeHandler.html":{},"index.html":{}}}],["useful",{"_index":603,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["uses",{"_index":362,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["using",{"_index":730,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["usual",{"_index":1045,"title":{},"body":{"index.html":{}}}],["utc",{"_index":846,"title":{},"body":{"classes/TimeHandler.html":{}}}],["util",{"_index":1010,"title":{},"body":{"index.html":{}}}],["v",{"_index":1206,"title":{},"body":{"license.html":{}}}],["v14",{"_index":950,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"classes/ResourceHandler.html":{},"classes/ScreenSizeHandler.html":{},"classes/TimeHandler.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":422,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1365,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1227,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1210,"title":{},"body":{"license.html":{}}}],["via",{"_index":1012,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":816,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":809,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["viewer.component",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":798,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":797,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":790,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:17",{"_index":810,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:22",{"_index":815,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:28",{"_index":805,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:38",{"_index":802,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":288,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:11",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:30",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":306,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:100",{"_index":325,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:120",{"_index":391,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:127",{"_index":395,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:135",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:26",{"_index":335,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:33",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:39",{"_index":358,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:45",{"_index":356,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:51",{"_index":330,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:56",{"_index":348,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:61",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:67",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:73",{"_index":376,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:82",{"_index":352,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:90",{"_index":340,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/handler/resource/isource.ts",{"_index":623,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts",{"_index":671,"title":{},"body":{"classes/ResourceHandler.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:111",{"_index":726,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:118",{"_index":707,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:125",{"_index":706,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:144",{"_index":719,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:156",{"_index":723,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:165",{"_index":712,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:21",{"_index":696,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:26",{"_index":691,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:31",{"_index":702,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:40",{"_index":695,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:45",{"_index":705,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:50",{"_index":687,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/resourcehandler.ts:63",{"_index":728,"title":{},"body":{"classes/ResourceHandler.html":{}}}],["viewer/engine/handler/resource/sources",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/handler/size/isize.ts",{"_index":619,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts",{"_index":768,"title":{},"body":{"classes/ScreenSizeHandler.html":{},"coverage.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:15",{"_index":773,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:33",{"_index":780,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:40",{"_index":774,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:47",{"_index":775,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:54",{"_index":779,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/size/screensizehandler.ts:66",{"_index":781,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts",{"_index":824,"title":{},"body":{"classes/TimeHandler.html":{},"coverage.html":{}}}],["viewer/engine/handler/time/timehandler.ts:14",{"_index":840,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:21",{"_index":844,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:27",{"_index":834,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:32",{"_index":832,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:37",{"_index":830,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:50",{"_index":862,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:65",{"_index":851,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:74",{"_index":845,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:83",{"_index":853,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/handler/time/timehandler.ts:90",{"_index":860,"title":{},"body":{"classes/TimeHandler.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:13",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:35",{"_index":248,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":643,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:18",{"_index":645,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:54",{"_index":649,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:62",{"_index":650,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:69",{"_index":648,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":593,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":596,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":600,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":608,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":611,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":615,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":637,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:8",{"_index":640,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/world/environment.ts",{"_index":427,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":450,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":448,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":453,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":529,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":438,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":445,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":437,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":456,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":531,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":541,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":553,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":561,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":555,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":565,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:104",{"_index":590,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:119",{"_index":589,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:150",{"_index":592,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:157",{"_index":591,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:56",{"_index":587,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:61",{"_index":588,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:66",{"_index":586,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:71",{"_index":585,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":872,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":884,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":882,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":878,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":880,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":874,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:69",{"_index":889,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:78",{"_index":888,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ScreenSizeHandler.html":{},"index.html":{}}}],["vii",{"_index":1228,"title":{},"body":{"license.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceHandler.html":{},"components/ThreeViewerComponent.html":{},"classes/TimeHandler.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1164,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1319,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1234,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1242,"title":{},"body":{"license.html":{}}}],["want",{"_index":1022,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1085,"title":{},"body":{"license.html":{}}}],["way",{"_index":966,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":644,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":647,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1253,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1138,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1248,"title":{},"body":{"license.html":{}}}],["whole",{"_index":794,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":617,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/ScreenSizeHandler.html":{}}}],["window.addeventlistener('resize",{"_index":783,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["window.innerheight",{"_index":788,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["window.innerwidth",{"_index":787,"title":{},"body":{"classes/ScreenSizeHandler.html":{}}}],["window.location.hash",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":865,"title":{},"body":{"classes/TimeHandler.html":{}}}],["wip",{"_index":1041,"title":{},"body":{"index.html":{}}}],["wish",{"_index":1016,"title":{},"body":{"index.html":{},"license.html":{}}}],["without",{"_index":1125,"title":{},"body":{"license.html":{}}}],["work",{"_index":1111,"title":{},"body":{"license.html":{}}}],["working",{"_index":979,"title":{},"body":{"index.html":{}}}],["works",{"_index":1087,"title":{},"body":{"license.html":{}}}],["world",{"_index":323,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["world(this.scene",{"_index":379,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":400,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1256,"title":{},"body":{"license.html":{}}}],["wrapping",{"_index":993,"title":{},"body":{"index.html":{}}}],["writing",{"_index":1062,"title":{},"body":{"index.html":{}}}],["x",{"_index":510,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":515,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":517,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { TimeHandler } from '../handler/time/TimeHandler';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceHandler Resource handler that loads the GLTF file of the fox\n   * @param timeHandler Time handler to update the Fox while playing the animation\n   * @param debugGUI Tool to tweak the fox animations\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceHandler: ResourceHandler,\n              private readonly timeHandler: TimeHandler,\n              private readonly debugGUI: DebugGUI) {\n\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('fox');\n    }\n\n    this.gltf = this.resourceHandler.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugGUI.ui) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder?.add(debugObject, 'playIdle');\n      this.debugFolder?.add(debugObject, 'playWalking');\n      this.debugFolder?.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   */\n  update(): void {\n    this.animationHolder.mixer.update(this.timeHandler.getDeltaTime() * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, initialSize: ISize)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                                \n                                                        initialSize\n                                                  \n                                                        \n                                                                        ISize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initial viewport size to set up the aspect ratio.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:13\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:35\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../handler/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   * @param initialSize Initial viewport size to set up the aspect ratio.\n   */\n  constructor(private readonly scene: Scene, initialSize: ISize) {\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                active\n                            \n                            \n                                    Readonly\n                                ui\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.hash === '#debug'\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                        \n                    \n\n            \n                \n                    Status of the GUI based on the URL of the project (add #debug and reload to show the panel)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ui\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:11\n                        \n                    \n\n            \n                \n                    lil-gui UI instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:30\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI implements IDestroyable {\n  /**\n   * lil-gui UI instance\n   */\n  readonly ui: GUI | undefined;\n  /**\n   * Status of the GUI based on the URL of the project (add #debug and reload to show the panel)\n   * @private\n   */\n  private readonly active = window.location.hash === '#debug';\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    if (this.active) {\n      this.ui = new GUI();\n    }\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  destroy(): void {\n    if (this.active && this.ui) {\n      this.ui.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\nIt is listening to some handlers to communicate the behaviour to follow to its \"children\".\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                sizeHandler\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptionList\n                            \n                            \n                                    Private\n                                    Readonly\n                                timeHandler\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:100\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CameraHolder(this.scene, this.sizeHandler.getSize())\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:51\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ControlsHolder(this.cameraHolder.instance, this.canvas)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:61\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:26\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    this.controlsHolder,\n    this.rendererHolder,\n    this.debugGUI\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:90\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new RendererHolder(this.scene, this.cameraHolder.instance, this.canvas, this.sizeHandler.getSize())\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:56\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    this.cameraHolder,\n    this.rendererHolder,\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:82\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:45\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sizeHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScreenSizeHandler\n\n                    \n                \n                \n                    \n                        Default value : new ScreenSizeHandler()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:39\n                        \n                    \n\n            \n                \n                    Handler that informs about the size of the viewport, and the pixel ratio of the device.\nEngine uses it to resize the elements of the 3D experience when the resize event occurs.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptionList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:100\n                        \n                    \n\n            \n                \n                    List of the subscriptions that need to be revoked at the end of the engine's lifecycle to avoid memory leaks.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        timeHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TimeHandler\n\n                    \n                \n                \n                    \n                        Default value : new TimeHandler()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:33\n                        \n                    \n\n            \n                \n                    Handler that notifies on each frame, and gives some information on elapsed time and so on.\nEngine uses it to update the elements of the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    this.rendererHolder,\n    this.controlsHolder,\n    this.world\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:73\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.timeHandler, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:67\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:135\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list, unsubscribe from handlers' observable and dispose\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:120\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:127\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './handler/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { TimeHandler } from './handler/time/TimeHandler';\nimport { ScreenSizeHandler } from './handler/size/ScreenSizeHandler';\nimport { Subscription } from 'rxjs';\nimport { DebugGUI } from './debug/DebugGUI';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n * It is listening to some handlers to communicate the behaviour to follow to its \"children\".\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * Handler that notifies on each frame, and gives some information on elapsed time and so on.\n   * Engine uses it to update the elements of the 3D experience.\n   * @private\n   */\n  private readonly timeHandler: TimeHandler = new TimeHandler();\n  /**\n   * Handler that informs about the size of the viewport, and the pixel ratio of the device.\n   * Engine uses it to resize the elements of the 3D experience when the resize event occurs.\n   * @private\n   */\n  private readonly sizeHandler: ScreenSizeHandler = new ScreenSizeHandler();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder = new CameraHolder(this.scene, this.sizeHandler.getSize());\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, this.canvas, this.sizeHandler.getSize());\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder = new ControlsHolder(this.cameraHolder.instance, this.canvas);\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.timeHandler, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[] = [\n    this.rendererHolder,\n    this.controlsHolder,\n    this.world\n  ];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[] = [\n    this.cameraHolder,\n    this.rendererHolder,\n  ];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[] = [\n    this.controlsHolder,\n    this.rendererHolder,\n    this.debugGUI\n  ];\n\n  /**\n   * List of the subscriptions that need to be revoked at the end of the engine's lifecycle to avoid memory leaks.\n   * @private\n   */\n  private readonly subscriptionList: Subscription[] = [];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   */\n  constructor(readonly canvas: HTMLCanvasElement,\n  ) {\n    this.subscriptionList.push(\n      this.sizeHandler.listen()\n          .subscribe((size) => this.resize(size)),\n      this.timeHandler.listen()\n          .subscribe(() => this.update())\n    );\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   */\n  update(): void {\n    this.updatableList.forEach((updatable) => updatable.update());\n  }\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list, unsubscribe from handlers' observable and dispose\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.subscriptionList.forEach((subscription) => subscription.unsubscribe());\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceHandler: ResourceHandler, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceHandler\n                                                  \n                                                        \n                                                                        ResourceHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceHandler Resources loaded in the project\n   * @param debugGUI\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceHandler: ResourceHandler,\n              private readonly debugGUI: DebugGUI\n  ) {\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceHandler.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugGUI.ui) {\n      this.debugFolder?.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceHandler Resources loaded in the project\n   * @param debugGUI\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceHandler: ResourceHandler,\n              private readonly debugGUI: DebugGUI\n  ) {\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceHandler.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugGUI.ui) {\n      this.debugFolder?.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceHandler: ResourceHandler)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceHandler\n                                                  \n                                                        \n                                                                        ResourceHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource handler that loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceHandler.items.get('grassColorTexture') as Texture,\n    normal: this.resourceHandler.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceHandler.items.get('grassColorTexture') as Texture,\n    normal: this.resourceHandler.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceHandler Resource handler that loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceHandler: ResourceHandler) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceHandler: ResourceHandler, timeHandler: TimeHandler, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceHandler\n                                                  \n                                                        \n                                                                        ResourceHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource handler that loads the GLTF file of the fox\n\n                                                        \n                                                \n                                                \n                                                        timeHandler\n                                                  \n                                                        \n                                                                        TimeHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Time handler to update the Fox while playing the animation\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tool to tweak the fox animations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:66\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:56\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:61\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:119\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:104\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:157\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:150\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { TimeHandler } from '../handler/time/TimeHandler';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceHandler Resource handler that loads the GLTF file of the fox\n   * @param timeHandler Time handler to update the Fox while playing the animation\n   * @param debugGUI Tool to tweak the fox animations\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceHandler: ResourceHandler,\n              private readonly timeHandler: TimeHandler,\n              private readonly debugGUI: DebugGUI) {\n\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('fox');\n    }\n\n    this.gltf = this.resourceHandler.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugGUI.ui) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder?.add(debugObject, 'playIdle');\n      this.debugFolder?.add(debugObject, 'playWalking');\n      this.debugFolder?.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   */\n  update(): void {\n    this.animationHolder.mixer.update(this.timeHandler.getDeltaTime() * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../handler/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/handler/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/handler/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:8\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   */\n  update(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement, initialSize: ISize)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                                \n                                                        initialSize\n                                                  \n                                                        \n                                                                        ISize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initial size of the viewport\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:18\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:69\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:54\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:62\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../handler/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   * @param initialSize Initial size of the viewport\n   */\n  constructor(private readonly scene: Scene, private readonly camera: Camera, private readonly canvas: HTMLCanvasElement, initialSize: ISize) {\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceHandler.html":{"url":"classes/ResourceHandler.html","title":"class - ResourceHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/handler/resource/ResourceHandler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/resource/ResourceHandler.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceHandler implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScreenSizeHandler.html":{"url":"classes/ScreenSizeHandler.html","title":"class - ScreenSizeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScreenSizeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for the size of the screen (viewport)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                            \n                                getPixelRatio\n                            \n                            \n                                getSize\n                            \n                            \n                                getWidth\n                            \n                            \n                                listen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:15\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:15\n                        \n                    \n\n            \n                \n                    Emits on the stream the new size on resizing event triggered by the browser\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:40\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \ngetPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:47\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:54\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWidth\n                        \n                    \n                \n            \n            \n                \ngetWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:33\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts:66\n                \n            \n\n\n            \n                \n                    Exposes an observable for subscribers that needs to be informed on the size changes.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable that emits the new size and the new pixel ratio in the stream.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { ISize } from './ISize';\nimport { Observable } from 'rxjs';\nimport { IListenable } from '../../interface/IListenable';\n\n/**\n * Handler for the size of the screen (viewport)\n */\nexport class ScreenSizeHandler implements IListenable {\n\n  /**\n   * Emits on the stream the new size on resizing event triggered by the browser\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    window.addEventListener('resize', () => {\n      this.eventEmitter.emit({\n        width: this.getWidth(),\n        height: this.getHeight(),\n        pixelRatio: this.getPixelRatio(),\n      });\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  getSize(): ISize {\n    return {\n      width: this.getWidth(),\n      height: this.getHeight(),\n      pixelRatio: this.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Exposes an observable for subscribers that needs to be informed on the size changes.\n   * @returns an observable that emits the new size and the new pixel ratio in the stream.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:38\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:28\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:17\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:22\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement);\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeHandler.html":{"url":"classes/TimeHandler.html","title":"class - TimeHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/handler/time/TimeHandler.ts\n        \n\n\n            \n                Description\n            \n            \n                Handler for the time of the 3D experience. It notifies subscribers on each frame.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                current\n                            \n                            \n                                    Private\n                                delta\n                            \n                            \n                                    Private\n                                elapsed\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCurrentTime\n                            \n                            \n                                getDeltaTime\n                            \n                            \n                                getElapsedTime\n                            \n                            \n                                listen\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        current\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:32\n                        \n                    \n\n            \n                \n                    Current time used to calculate the elapsed time and the delta time.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        delta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:27\n                        \n                    \n\n            \n                \n                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        elapsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:37\n                        \n                    \n\n            \n                \n                    Elapsed time from the start of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:14\n                        \n                    \n\n            \n                \n                    Emits an empty event on each frame to inform the subscribers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        start\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:21\n                        \n                    \n\n            \n                \n                    Start time of the application (at the instantiation of the TimeHandler).\nUsed to calculate the elapsed time from the start of the experience.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentTime\n                        \n                    \n                \n            \n            \n                \ngetCurrentTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:74\n                \n            \n\n\n            \n                \n                    Returns the current time\n  UTC.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A number representing the number of milliseconds for the current frame since January 1, 1970, 00:00:00,\nUTC.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeltaTime\n                        \n                    \n                \n            \n            \n                \ngetDeltaTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:65\n                \n            \n\n\n            \n                \n                    Returns the delta time\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time between the current frame and the previous one.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getElapsedTime\n                        \n                    \n                \n            \n            \n                \ngetElapsedTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:83\n                \n            \n\n\n            \n                \n                    Returns the elapsed time from the beginning of the experience.\nCommonly used to add time uniform to shaders, for example.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the time elapsed since the application started up\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:90\n                \n            \n\n\n            \n                \n                    Exposes an observable that emits an empty event on the stream to announce a new frame.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n            \n                \ntick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/handler/time/TimeHandler.ts:50\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { IListenable } from '../../interface/IListenable';\n\n/**\n * Handler for the time of the 3D experience. It notifies subscribers on each frame.\n */\nexport class TimeHandler implements IListenable {\n\n  /**\n   * Emits an empty event on each frame to inform the subscribers.\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n\n  /**\n   * Start time of the application (at the instantiation of the TimeHandler).\n   * Used to calculate the elapsed time from the start of the experience.\n   * @private\n   */\n  private readonly start: number = Date.now();\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   * @private\n   */\n  private delta = 0;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   * @private\n   */\n  private current = 0;\n  /**\n   * Elapsed time from the start of the experience.\n   * @private\n   */\n  private elapsed = 0;\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    window.requestAnimationFrame(() => this.tick());\n    this.tick();\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   */\n  tick() {\n    const currentTime = Date.now();\n    this.delta = currentTime - this.current;\n    this.current = currentTime;\n\n    this.elapsed = this.current - this.start;\n\n    this.eventEmitter.emit();\n    window.requestAnimationFrame(() => this.tick());\n  }\n\n  /**\n   * Returns the delta time\n   * @returns The time between the current frame and the previous one.\n   */\n  getDeltaTime() {\n    return this.delta;\n  }\n\n  /**\n   * Returns the current time\n   * @returns A number representing the number of milliseconds for the current frame since January 1, 1970, 00:00:00,\n   *   UTC.\n   */\n  getCurrentTime() {\n    return this.current;\n  }\n\n  /**\n   * Returns the elapsed time from the beginning of the experience.\n   * Commonly used to add time uniform to shaders, for example.\n   * @returns the time elapsed since the application started up\n   */\n  getElapsedTime() {\n    return this.elapsed;\n  }\n\n  /**\n   * Exposes an observable that emits an empty event on the stream to announce a new frame.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceHandler\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, timeHandler: TimeHandler, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        timeHandler\n                                                  \n                                                        \n                                                                        TimeHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Handler for time information needed for some objects (for animation purpose, for example)\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceHandler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceHandler(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource handler that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource handler subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:78\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:69\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceHandler } from '../handler/resource/ResourceHandler';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../handler/resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { TimeHandler } from '../handler/time/TimeHandler';\nimport { Floor } from './Floor';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource handler subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource handler that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceHandler = new ResourceHandler(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param timeHandler Handler for time information needed for some objects (for animation purpose, for example)\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly timeHandler: TimeHandler,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceHandler.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceHandler);\n                              this.fox = new Fox(scene,\n                                this.resourceHandler,\n                                this.timeHandler,\n                                debugGUI);\n                              this.environment = new Environment(scene, this.resourceHandler, debugGUI);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   */\n  update(): void {\n    if (this.fox) {\n      this.fox.update();\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceHandler.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/resource/ResourceHandler.ts\n            \n            class\n            ResourceHandler\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/size/ScreenSizeHandler.ts\n            \n            class\n            ScreenSizeHandler\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/handler/time/TimeHandler.ts\n            \n            class\n            TimeHandler\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            lil-gui : ^0.16.1\n        \n            rxjs : ~7.5.0\n        \n            three : ^0.141.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/handler/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-three-starter-kit\n\n\n\n\n\n\n\n\n\n\n\n\n\nStack\n\nAngular v14\nThreejs (r141)\n@types/three (r141)\n\nSpecial Thanks\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\n\nDocumentation\nEngine\nHeart of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene, renderer, ...).\nIt is listening to some handlers to communicate the behaviour to follow to its \"children\".\nHolders\nA holder is a class wrapping a ThreeJS instance. It contains the instantiation of the ThreeJS component with the\nsettings considered for.\nCamera Holder\nHolder of the perspective camera chosen for the template. Can be easily switched to other camera types.\nControl Holder\nHolder for the OrbitControls chosen for the template. Can be switched to other types. Damping is enabled.\nRenderer Holder\n\nPhysically correct lights enabled\nOutput encoding to sRGB\nReinhard tone mapping ON\nShadow map (PCF Shadow Map) enabled\nThe screen resize and the pixel ratio is handled\n\nHandlers\nA handler takes care of the \"Util\" part of the viewer.\nScreenSizeHandler\nUtil to handle the screen size.\nUpdates on viewport resizing.\nIt emits an event that contains the new size and pixel ratio on resize via an Observable.\nTimeHandler\nUtil to handle the common tick loop.\nIt emits an empty event that is triggered in each loop via an Observable.\nResourceHandler\nUtil to handle GLTF models, textures, and cube textures.\n(It is extensible as you wish)\nLoads all the content of the sources-list.ts.\nIt uses a Loading manager (different from the default one).\nInterfaces\nUseful contracts to process your objects in mass (via a for loop for instance),\ndepending on the behaviour you want for them.\nIDestroyable\nContract that marks the class that implements it as destroyable (need to dispose of elements (geometries,\nmaterial...)). Add your objects in your Engine \"destroyableList\" and a loop will take care to call each destroy()\nmethod when the ngOnDestroy() is triggered by the viewer component.\nIListenable\nContract that marks the class that implements it as listenable.\nThe listen method returns an Observable.\nMostly used for the handler to notify other objects via their EventEmitter.\nIResizable\nContract that marks the class that implements it as resizable.\nAdd your objects in your Engine \"resizableList\" and a loop will take care to call each resize()\nwhen the SizeHandler notifies the Engine.\nIUpdatable\nContract that marks the class that implements it as updatable.\nAdd your objects in your Engine \"updatableList\" and a loop will take care to call each update()\nwhen the TimeHandler loop notifies the Engine of a new frame.\nWorld\nHandles the floor, the fox, the environment.\nIncoming Features\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\nCode documentation :') (WIP)\n\nNote\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter\nYou can reach me on Twitter: @axiom_3d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Item   (src/.../ResourceHandler.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/handler/resource/ResourceHandler.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/handler/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
