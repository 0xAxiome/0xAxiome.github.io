var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.11,1,2.133]],["body/classes/AnimationHolder.html",[0,0.116,1,3.223,2,0.755,3,0.262,4,0.262,5,0.418,6,0.408,7,1.688,8,0.526,9,2.033,10,3.949,11,1.385,12,0.177,13,0.536,14,1.516,15,4.516,16,0.643,17,3.87,18,1.195,19,2.31,20,3.87,21,2.259,22,4.147,23,0.643,24,2.31,25,0.896,26,0.031,27,1.053,28,0.408,29,0.827,30,4.354,31,2.31,32,2.036,33,1.935,34,0.816,35,0.816,36,2.31,37,2.903,38,1.892,39,2.824,40,2.903,41,2.714,42,2.31,43,2.903,44,2.036,45,2.533,46,2.903,47,1.852,48,2.222,49,0.392,50,1.052,51,0.877,52,1.766,53,1.235,54,3.483,55,1.557,56,1.762,57,0.551,58,1.913,59,1.235,60,1.688,61,2.259,62,1.13,63,1.935,64,1.324,65,1.235,66,0.896,67,0.816,68,1.434,69,1.357,70,1.935,71,1.287,72,1.935,73,1.935,74,2.222,75,2.903,76,1.935,77,1.935,78,2.903,79,1.935,80,1.935,81,1.935,82,1.935,83,1.935,84,1.357,85,1.688,86,1.504,87,3.241,88,0.262,89,0.646,90,2.036,91,1.935,92,1.616,93,1.357,94,1.688,95,1.935,96,1.357,97,2.036,98,1.694,99,1.235,100,3.87,101,1.504,102,1.13,103,1.038,104,1.13,105,0.699,106,2.256,107,1.504,108,1.935,109,1.935,110,1.935,111,1.935,112,1.935,113,1.935,114,0.701,115,1.935,116,1.935,117,1.935,118,1.557,119,1.434,120,1.688,121,1.935,122,1.504,123,1.357,124,1.935,125,1.935,126,1.935,127,1.935,128,2.256,129,1.935,130,1.935,131,1.357,132,1.235,133,1.935,134,0.956,135,1.935,136,1.688,137,1.357,138,1.935,139,2.903,140,1.935,141,1.935,142,1.935,143,1.935,144,1.935,145,1.935,146,1.935,147,1.935,148,2.903,149,1.935,150,2.903,151,1.935,152,2.903,153,1.935,154,3.483,155,1.038,156,1.935,157,0.816,158,1.434,159,1.235,160,0.883,161,1.357,162,1.935,163,1.935,164,1.504,165,0.699,166,1.935,167,0.016,168,0.016]],["title/components/AppComponent.html",[169,1.75,170,1.75]],["body/components/AppComponent.html",[0,0.136,3,0.461,4,0.461,5,0.409,8,0.515,12,0.312,13,0.794,23,0.63,26,0.031,27,0.953,28,0.36,34,1.439,35,1.439,41,2.393,51,0.63,57,1.341,88,0.461,93,3.014,167,0.023,168,0.023,169,3.248,170,3.151,171,3.014,172,2.977,173,3.412,174,2.977,175,3.412,176,3.412,177,3.341,178,4.31,179,3.75,180,3.412,181,4.94,182,4.94,183,4.298,184,5.617,185,4.298,186,5.13,187,5.092,188,4.298,189,4.298,190,4.298,191,4.073,192,1.992,193,3.412,194,3.341,195,2.742,196,2.977,197,4.94,198,3.412,199,3.412,200,2.177,201,2.177,202,3.412,203,3.412]],["title/modules/AppModule.html",[204,2.744,205,2.133]],["body/modules/AppModule.html",[0,0.145,3,0.49,4,0.49,5,0.435,26,0.031,51,0.932,57,1.034,88,0.49,167,0.024,168,0.024,170,3.527,179,3.896,192,2.118,200,3.367,205,4.231,206,3.166,207,3.471,208,3.628,209,3.628,210,3.628,211,4.466,212,3.628,213,2.82,214,4.33,215,5.33,216,5.33,217,5.33,218,3.628,219,3.166,220,4.33,221,3.166,222,4.33,223,4.33,224,4.33]],["title/classes/CameraHolder.html",[0,0.11,225,2.133]],["body/classes/CameraHolder.html",[0,0.115,2,1.12,3,0.388,4,0.388,5,0.345,6,0.488,8,0.654,12,0.262,13,0.854,14,1.427,16,0.852,18,1.337,23,0.8,25,1.186,26,0.031,27,0.852,28,0.457,29,1.095,32,2.695,49,0.582,50,0.928,51,0.854,56,2.073,57,0.818,71,1.234,88,0.388,89,1.283,99,2.451,103,2.061,105,1.037,114,1.046,119,1.899,167,0.021,168,0.021,225,2.987,226,2.872,227,2.695,228,3.843,229,3.61,230,3.353,231,2.528,232,2.814,233,2.243,234,1.832,235,4.035,236,2.717,237,4.586,238,2.11,239,3.243,240,3.005,241,3.843,242,4.586,243,2.243,244,5.52,245,2.987,246,3.427,247,3.843,248,4.586,249,3.843,250,4.586,251,2.505,252,2.232,253,2.505,254,2.505,255,3.427,256,3.427,257,2.872,258,3.427,259,2.872,260,3.427,261,3.427,262,2.872,263,3.427,264,3.427,265,3.427,266,2.872,267,3.427]],["title/classes/ControlsHolder.html",[0,0.11,268,2.133]],["body/classes/ControlsHolder.html",[0,0.119,2,1.159,3,0.401,4,0.401,5,0.356,6,0.514,8,0.593,12,0.271,13,0.726,14,1.505,16,0.871,18,1.359,23,0.866,25,0.917,26,0.031,27,0.658,28,0.414,29,0.846,49,0.797,50,1.064,51,0.866,57,0.846,64,2.009,65,1.895,66,1.359,67,1.253,71,1.12,88,0.401,89,1.312,92,1.628,105,1.072,114,0.718,134,1.468,165,1.692,167,0.021,168,0.021,194,3.055,195,2.507,201,2.507,227,2.756,229,3.746,230,3.429,232,2.982,238,1.793,254,2.592,268,3.055,269,2.971,270,5.109,271,2.686,272,3.546,273,3.971,274,3.843,275,4.691,276,4.691,277,5.009,278,3.546,279,2.756,280,3.546,281,4.691,282,3.546,283,3.546,284,3.546,285,3.546,286,2.971]],["title/classes/DebugGUI.html",[0,0.11,58,1.356]],["body/classes/DebugGUI.html",[0,0.121,2,1.186,3,0.411,4,0.411,5,0.365,6,0.518,8,0.459,12,0.278,13,0.737,14,1.556,16,0.884,18,1.516,23,0.873,26,0.031,28,0.32,34,1.282,35,1.282,49,0.616,50,0.964,51,0.737,58,1.971,61,3.167,62,2.999,66,1.375,67,1.282,88,0.411,89,1.332,92,1.579,96,3.535,97,2.798,98,2.329,102,2.329,103,2.14,114,0.734,137,3.316,165,1.707,167,0.022,168,0.022,232,2.761,287,3.039,288,2.761,289,5.316,290,6.132,291,4.762,292,4.762,293,4.762,294,3.101,295,3.99,296,4.762,297,3.99,298,3.627,299,3.627,300,3.481,301,4.762,302,4.762,303,3.627]],["title/classes/Engine.html",[0,0.11,304,1.602]],["body/classes/Engine.html",[0,0.065,2,0.631,3,0.219,4,0.219,5,0.194,6,0.516,8,0.532,9,1.477,11,1.177,12,0.148,13,0.467,14,1.635,16,0.561,18,0.962,23,0.894,25,1.18,26,0.031,27,0.691,28,0.427,29,0.888,32,1.774,34,1.314,35,1.613,38,1.154,44,1.774,47,3.046,49,0.632,50,0.98,51,0.868,55,1.357,56,1.911,57,0.461,58,2.004,59,1.032,61,1.477,62,1.477,64,1.745,65,1.032,66,1.18,67,0.682,68,1.741,69,1.134,71,1.004,74,1.614,88,0.219,89,0.845,92,1.809,98,1.477,114,1.17,118,2.175,119,2.004,131,1.134,132,1.032,137,1.774,157,1.486,158,1.741,159,1.614,160,1.154,161,1.774,165,1.272,167,0.014,168,0.014,171,1.774,195,1.614,201,2.248,225,2.739,227,2.844,229,2.471,231,2.232,232,1.477,233,1.477,235,3.538,236,2.273,238,2.001,240,2.367,243,1.477,245,1.966,251,1.411,252,1.257,268,2.739,271,1.89,273,3.152,274,2.718,277,3.524,279,1.774,297,2.53,300,2.207,304,1.477,305,1.617,306,3.524,307,2.53,308,2.207,309,2.53,310,3.075,311,3.116,312,2.739,313,3.116,314,3.116,315,2.248,316,3.019,317,3.019,318,2.53,319,3.019,320,2.471,321,1.93,322,1.93,323,3.019,324,1.93,325,4.36,326,3.538,327,3.019,328,3.019,329,2.53,330,2.53,331,1.93,332,2.53,333,1.93,334,2.53,335,1.966,336,2.53,337,1.93,338,1.93,339,2.53,340,1.774,341,3.019,342,3.719,343,1.93,344,3.019,345,1.25,346,1.89,347,1.477,348,1.93,349,2.53,350,3.019,351,1.93,352,2.207,353,3.019,354,3.524,355,1.614,356,1.93,357,2.207,358,1.93,359,1.93,360,1.93,361,1.93,362,3.019,363,1.93,364,4.206,365,1.93,366,1.93,367,3.719,368,1.93,369,1.93,370,1.93,371,1.93,372,1.93,373,1.93,374,1.93,375,1.93,376,1.93,377,1.411,378,1.93,379,1.93,380,1.93,381,1.93,382,1.93,383,3.019,384,1.411,385,1.93,386,1.93]],["title/classes/Environment.html",[0,0.11,387,1.471]],["body/classes/Environment.html",[0,0.071,2,0.689,3,0.239,4,0.239,5,0.212,6,0.488,8,0.497,12,0.161,13,0.808,14,1.505,16,0.6,18,1.017,23,0.834,25,0.836,26,0.031,27,0.6,28,0.42,29,0.772,38,1.236,49,0.807,50,1.016,51,0.736,52,2.06,53,1.127,55,1.453,56,2.075,57,0.503,58,2.231,59,1.127,61,2.156,62,1.031,66,1.017,67,0.745,71,1.053,88,0.239,89,0.904,92,1.72,96,1.899,97,1.899,98,1.581,101,2.561,102,1.581,103,1.453,105,0.638,106,2.105,107,2.105,114,0.427,118,1.981,119,1.825,122,2.105,123,2.59,128,1.373,131,1.239,132,2.541,134,1.825,155,0.947,157,0.745,164,2.105,165,1.333,167,0.015,168,0.015,234,1.127,238,1.236,288,1.581,345,1.338,346,1.453,347,1.581,377,1.541,387,2.794,388,1.541,389,1.825,390,2.709,391,3.51,392,3.295,393,3.295,394,3.694,395,3.694,396,2.874,397,3.233,398,3.233,399,2.108,400,2.561,401,3.184,402,2.363,403,3.694,404,3.694,405,3.295,406,2.108,407,3.694,408,4.204,409,2.108,410,2.709,411,2.108,412,2.363,413,2.709,414,2.108,415,2.709,416,3.916,417,2.108,418,2.709,419,2.871,420,2.709,421,4.376,422,2.363,423,2.709,424,2.709,425,2.709,426,2.31,427,2.709,428,2.709,429,2.709,430,2.363,431,2.105,432,2.254,433,0.427,434,1.031,435,1.373,436,1.766,437,1.766,438,1.766,439,2.709,440,1.766,441,1.766,442,1.766,443,2.363,444,1.766,445,1.766,446,1.766,447,1.766,448,1.766,449,1.766,450,2.709,451,1.766,452,1.766,453,1.766,454,1.766,455,1.239,456,1.766,457,1.766,458,1.766,459,1.766,460,1.766,461,1.766,462,1.766,463,1.766,464,1.766,465,1.766,466,1.766,467,2.709,468,1.766,469,3.984,470,3.295,471,1.766,472,1.766,473,3.295,474,3.295,475,3.295,476,1.766,477,1.766,478,1.766,479,1.766,480,1.766,481,2.709,482,2.709,483,1.766,484,1.766,485,1.766,486,1.766,487,1.766,488,1.766]],["title/interfaces/EnvironmentMapHolder.html",[400,2.133,433,0.663]],["body/interfaces/EnvironmentMapHolder.html",[0,0.083,3,0.28,4,0.28,5,0.249,6,0.322,8,0.313,12,0.189,13,0.825,14,1.378,16,0.677,18,0.64,23,0.383,26,0.031,28,0.322,38,0.946,49,0.619,50,0.967,51,0.788,52,1.826,53,1.322,55,1.638,56,2.036,57,0.591,58,1.978,59,1.322,61,2.118,62,1.21,66,0.943,67,0.874,71,1.141,88,0.28,89,0.692,92,1.643,96,1.453,97,1.453,98,1.21,101,1.611,102,1.21,103,1.112,105,0.748,106,2.374,107,2.374,114,0.501,118,1.638,119,1.51,122,1.611,123,2.142,128,1.611,131,1.453,132,2.723,134,1.793,155,1.638,157,1.288,164,1.611,165,0.748,167,0.017,168,0.017,238,0.946,288,1.21,345,1.024,346,1.112,347,1.21,377,1.808,387,2.799,388,1.808,389,1.51,390,2.073,391,3.112,392,2.073,393,2.073,394,2.073,395,2.073,396,1.808,400,2.82,401,3.139,402,1.808,403,3.055,404,3.055,405,3.055,407,3.055,408,3.628,410,2.073,412,1.808,413,2.073,415,2.073,416,3.878,418,2.073,419,2.374,420,2.073,421,4.92,422,1.808,423,2.073,424,2.073,425,2.073,426,2.544,427,3.055,428,3.055,429,3.055,430,2.665,431,2.374,432,2.707,433,0.501,434,2.118,435,2.374,436,3.055,437,3.055,438,3.055,439,4.268,440,2.073,441,2.073,442,2.073,443,2.665,444,2.073,445,2.073,446,2.073,447,2.073,448,2.073,449,2.073,450,3.055,451,2.073,452,2.073,453,2.073,454,2.073,455,1.453,456,2.073,457,2.073,458,2.073,459,2.073,460,2.073,461,2.073,462,2.073,463,2.073,464,2.073,465,2.073,466,2.073,467,3.055,468,2.073,469,4.268,470,3.628,471,2.073,472,2.073,473,3.628,474,3.628,475,3.628,476,2.073,477,2.073,478,2.073,479,2.073,480,2.073,481,3.055,482,3.055,483,2.073,484,2.073,485,2.073,486,2.073,487,2.073,488,2.073,489,0.946,490,2.474]],["title/classes/Floor.html",[0,0.11,491,1.924]],["body/classes/Floor.html",[0,0.085,2,0.834,3,0.289,4,0.289,5,0.256,6,0.514,8,0.472,12,0.195,13,0.577,14,1.55,16,0.692,18,1.14,23,0.883,25,0.66,26,0.031,27,0.474,28,0.476,29,0.609,33,2.137,34,1.713,35,1.713,38,1.853,49,0.748,50,0.981,51,0.75,52,2.181,53,1.363,55,2.657,56,2.001,57,0.609,66,1.14,67,0.901,71,0.89,86,2.428,88,0.289,89,1.043,92,1.761,104,1.824,105,0.771,114,1.091,120,2.726,134,1.056,165,1.466,167,0.017,168,0.017,234,1.363,238,2.181,253,1.865,345,1.544,357,2.726,401,2.592,412,2.726,416,3.624,426,2.849,430,3.771,431,2.428,432,2.5,491,3.749,492,2.137,493,2.726,494,4.662,495,4.382,496,4.849,497,4.849,498,3.729,499,4.407,500,3.729,501,3.729,502,2.551,503,3.729,504,3.729,505,3.729,506,2.551,507,1.824,508,3.729,509,3.729,510,4.322,511,3.729,512,3.693,513,3.729,514,2.551,515,2.726,516,2.551,517,3.729,518,3.729,519,3.729,520,3.729,521,3.729,522,2.551,523,3.729,524,3.124,525,3.729,526,2.551,527,2.726,528,5.158,529,2.551,530,2.551,531,2.551,532,2.551,533,3.729,534,2.551,535,2.551,536,2.551,537,2.551,538,2.551,539,2.551,540,2.551,541,2.551,542,2.551,543,2.551,544,2.551,545,2.551,546,2.551]],["title/classes/Fox.html",[0,0.11,87,1.75]],["body/classes/Fox.html",[0,0.105,1,3.362,2,0.667,3,0.231,4,0.231,5,0.471,6,0.494,7,1.492,8,0.487,9,1.885,10,3.641,11,1.444,12,0.156,13,0.488,14,1.571,15,3.229,16,0.586,17,1.71,18,1.121,20,2.642,21,1.542,22,3.229,23,0.847,25,0.815,26,0.031,27,0.92,28,0.437,29,0.753,30,3.926,32,1.199,37,1.71,38,1.974,39,2.948,40,1.71,41,1.853,43,1.71,44,1.199,45,1.492,46,1.71,47,1.091,48,2.06,49,0.736,50,1.108,51,0.847,52,2.038,53,1.091,54,3.926,55,1.417,56,1.913,57,0.487,58,2.208,59,1.091,60,1.492,61,2.422,62,0.998,63,1.71,64,1.473,65,1.091,66,0.996,67,0.721,68,1.795,69,1.199,70,1.71,71,1.233,72,1.71,73,1.71,74,2.06,75,2.642,76,1.71,77,1.71,78,2.642,79,1.71,80,1.71,81,1.71,82,1.71,83,1.71,84,1.199,85,1.492,86,2.054,87,3.412,88,0.231,89,0.882,90,2.547,91,2.642,92,1.711,93,1.853,94,2.305,95,3.229,96,1.853,97,2.547,98,2.12,99,1.686,100,4.468,101,2.509,102,1.542,103,1.417,104,1.542,105,0.617,106,2.054,107,1.329,108,1.71,109,1.71,110,1.71,111,1.71,112,1.71,113,1.71,114,0.638,115,1.71,116,1.71,117,1.71,118,1.948,119,1.795,120,2.305,121,2.642,122,2.054,123,1.853,124,2.642,125,2.642,126,3.632,127,1.71,128,2.054,129,1.71,130,1.71,131,1.199,132,1.091,133,1.71,134,0.845,135,2.642,136,2.305,137,1.853,138,3.632,139,2.642,140,1.71,141,1.71,142,1.71,143,1.71,144,1.71,145,1.71,146,1.71,147,1.71,148,2.642,149,1.71,150,2.642,151,1.71,152,2.642,153,1.71,154,3.229,155,1.417,156,2.642,157,1.114,158,1.795,159,1.686,160,1.205,161,1.853,162,1.71,163,1.71,164,2.054,165,1.311,166,1.71,167,0.014,168,0.014,234,1.091,271,1.417,547,3.154,548,2.041,549,2.041,550,2.041,551,2.041,552,2.041,553,2.041,554,2.041]],["title/interfaces/IDestroyable.html",[66,0.847,433,0.663]],["body/interfaces/IDestroyable.html",[3,0.531,4,0.531,5,0.471,6,0.494,8,0.593,12,0.359,16,1.038,23,0.725,26,0.03,49,0.796,50,1.132,66,1.446,88,0.531,165,1.872,167,0.026,168,0.026,279,3.285,326,3.426,330,4.684,346,2.106,347,2.734,433,0.949,489,1.791,555,3.926,556,2.753,557,4.686,558,2.753,559,3.926,560,3.926,561,4.686,562,5.591,563,5.591]],["title/interfaces/IExperienceTime.html",[68,1.356,433,0.663]],["body/interfaces/IExperienceTime.html",[3,0.439,4,0.439,5,0.389,6,0.342,8,0.49,11,1.084,12,0.297,13,0.769,21,3.085,26,0.031,28,0.511,68,2.057,88,0.439,136,3.632,158,2.057,160,2.516,167,0.023,168,0.023,178,3.632,308,3.632,320,3.743,433,0.784,434,3.18,489,1.48,507,2.995,564,3.245,565,5.285,566,5.381,567,5.381,568,5.788,569,4.969,570,4.163,571,4.163,572,4.969,573,4.969]],["title/interfaces/IListenable.html",[433,0.663,574,1.924]],["body/interfaces/IListenable.html",[3,0.501,4,0.501,5,0.445,6,0.477,8,0.559,12,0.339,16,1.003,23,0.684,26,0.03,49,0.99,51,0.684,88,0.501,167,0.025,168,0.025,346,2.426,389,2.513,433,0.895,489,1.691,556,3.173,574,3.173,575,3.706,576,6.07,577,4.524,578,4.686,579,4.524,580,4.123,581,5.4,582,5.4,583,5.4,584,4.424,585,4.524,586,5.4,587,2.881]],["title/interfaces/IResizable.html",[231,1.602,433,0.663]],["body/interfaces/IResizable.html",[3,0.471,4,0.471,5,0.418,6,0.459,8,0.657,11,1.453,12,0.318,16,0.965,23,0.643,25,1.074,26,0.03,27,0.772,28,0.367,29,0.992,49,0.706,50,1.052,51,0.643,71,0.992,88,0.471,114,1.262,167,0.024,168,0.024,174,3.798,231,2.541,233,3.05,236,2.668,239,3.052,240,3.05,243,2.904,245,3.383,252,2.706,334,4.353,335,3.383,352,3.798,355,3.174,389,2.459,433,0.841,489,1.588,556,3.052,588,3.481,589,4.353,590,2.541,591,2.777,592,4.155,593,4.353,594,3.798,595,3.798]],["title/interfaces/ISize.html",[236,1.471,433,0.663]],["body/interfaces/ISize.html",[3,0.506,4,0.506,5,0.45,6,0.395,8,0.566,11,1.747,12,0.342,13,0.841,26,0.031,28,0.517,88,0.506,167,0.025,168,0.025,236,2.442,240,2.187,243,2.658,355,2.905,433,0.905,434,3.194,489,1.709,594,4.641,595,4.641,596,3.747,597,5.105,598,3.54]],["title/interfaces/ISource.html",[433,0.663,599,1.924]],["body/interfaces/ISource.html",[3,0.445,4,0.659,5,0.556,6,0.347,8,0.497,11,1.1,12,0.301,13,0.776,26,0.031,27,1.142,28,0.572,29,1.39,38,1.503,39,2.702,41,3.753,48,2.102,88,0.568,104,2.941,167,0.023,168,0.023,288,1.923,432,2.615,433,0.796,489,1.503,507,2.847,599,2.948,600,2.875,601,3.933,602,4.625,603,4.255,604,5.018,605,5.821,606,5.018,607,4.204,608,3.668,609,3.599,610,4.255,611,3.933,612,3.295,613,3.295]],["title/interfaces/IUpdatable.html",[64,1.252,433,0.663]],["body/interfaces/IUpdatable.html",[0,0.177,3,0.486,4,0.486,5,0.432,6,0.468,8,0.671,9,2.593,11,1.483,12,0.329,16,0.985,23,0.664,25,1.11,26,0.03,27,0.797,28,0.379,29,1.025,49,0.729,50,1.073,51,0.664,64,2.027,68,2.487,69,2.523,71,1.025,88,0.486,155,2.699,157,1.874,158,2.603,159,2.834,160,2.027,161,3.115,167,0.024,168,0.024,271,2.383,389,2.195,433,0.869,489,1.641,556,3.115,589,4.443,591,2.834,614,3.598,615,5.303,616,4.443,617,4.294,618,5.303,619,5.303]],["title/classes/RendererHolder.html",[0,0.11,312,2.133]],["body/classes/RendererHolder.html",[0,0.094,2,0.918,3,0.318,4,0.318,5,0.282,6,0.492,8,0.589,11,1.118,12,0.215,13,0.618,14,1.44,16,0.742,18,1.203,23,0.829,25,1.034,26,0.031,27,0.742,28,0.411,29,0.954,32,2.348,49,0.79,50,1.084,51,0.906,56,2.063,57,0.671,64,1.779,65,1.501,66,1.203,67,0.992,71,1.279,88,0.318,89,1.118,92,1.558,105,0.849,114,1.16,118,2.278,119,1.655,134,1.927,158,1.655,165,1.533,167,0.018,168,0.018,194,2.603,195,2.136,201,2.136,227,2.348,229,3.55,231,2.276,232,2.62,233,1.955,234,1.501,235,3.706,236,2.574,238,2.128,239,3.271,240,2.864,243,1.955,245,2.603,251,2.053,252,1.829,253,2.053,254,2.053,257,2.353,266,2.353,271,2.278,273,3.813,274,3.402,279,2.348,286,2.353,310,4.281,312,2.603,345,1.655,352,2.922,355,2.136,431,2.603,443,2.053,507,1.955,620,2.353,621,4.248,622,3.997,623,5.07,624,5.07,625,2.809,626,2.809,627,2.809,628,3.997,629,3.349,630,2.809,631,3.997,632,3.997,633,2.809,634,2.809,635,2.809,636,2.809,637,2.809,638,2.809,639,2.809,640,2.809,641,2.809,642,2.809,643,2.809,644,2.809,645,2.809,646,2.809,647,2.809]],["title/classes/ResourceLoader.html",[0,0.11,52,1.252]],["body/classes/ResourceLoader.html",[0,0.056,2,0.55,3,0.191,4,0.623,5,0.543,6,0.507,8,0.54,12,0.129,13,0.419,14,1.539,16,0.503,18,0.879,23,0.877,25,1.007,26,0.031,27,0.723,28,0.44,29,0.93,34,1.694,35,1.611,38,2.306,39,2.088,41,3.104,47,1.448,49,0.874,50,1.093,51,0.742,52,1.035,55,1.217,56,0.55,57,0.402,60,1.23,66,0.879,67,0.595,71,1.145,74,0.9,88,0.307,89,0.758,90,3.024,92,1.767,94,1.23,104,2.439,105,0.509,114,1.174,132,0.9,157,0.595,165,1.178,167,0.012,168,0.012,192,0.823,238,1.035,249,2.269,279,1.591,288,0.823,295,4.683,335,2.536,346,0.756,347,1.905,387,1.217,389,1.407,401,2.665,419,1.764,422,2.484,432,1.918,434,2.772,435,1.764,455,0.989,495,2.847,574,1.997,578,3.121,580,2.536,587,1.096,590,1.325,591,1.448,599,2.93,602,1.98,603,1.23,609,2.213,610,1.23,648,1.23,649,5.113,650,2.709,651,3.263,652,3.895,653,3.821,654,3.895,655,5.147,656,4.561,657,3.895,658,2.709,659,3.895,660,2.709,661,2.709,662,3.895,663,1.683,664,2.709,665,2.213,666,3.334,667,2.709,668,1.683,669,2.709,670,3.895,671,2.709,672,1.683,673,1.683,674,2.709,675,5.147,676,5.147,677,2.709,678,2.709,679,1.683,680,4.178,681,2.709,682,1.683,683,1.683,684,1.683,685,2.269,686,2.709,687,2.269,688,3.895,689,2.709,690,1.683,691,2.97,692,3.821,693,3.576,694,2.709,695,5.023,696,2.709,697,3.121,698,1.683,699,2.709,700,2.709,701,2.709,702,1.683,703,2.709,704,2.709,705,1.683,706,2.709,707,1.683,708,2.709,709,2.709,710,2.269,711,1.683,712,1.683,713,1.683,714,1.683,715,1.683,716,2.848,717,1.41,718,3.895,719,3.263,720,3.399,721,3.399,722,3.399,723,1.683,724,3.399,725,3.399,726,1.41,727,1.683,728,1.41,729,2.709,730,1.683,731,1.683,732,1.683,733,1.683,734,1.683,735,1.683,736,1.683,737,1.683,738,1.683,739,1.683,740,1.683,741,1.683,742,1.683,743,1.683,744,1.683,745,1.683,746,1.683]],["title/injectables/ScreenSizeService.html",[747,1.924,748,1.924]],["body/injectables/ScreenSizeService.html",[0,0.089,3,0.303,4,0.303,5,0.269,6,0.51,8,0.488,9,1.887,11,1.079,12,0.205,13,0.597,14,0.691,16,0.717,18,1.171,21,2.678,23,0.873,25,0.998,26,0.031,27,0.717,28,0.4,29,0.921,34,0.945,35,0.945,49,1.048,50,1.003,51,0.597,71,0.638,84,2.267,88,0.303,92,1.267,93,1.571,99,2.062,105,0.809,114,1.003,118,1.734,167,0.018,168,0.018,177,3.228,192,1.307,213,2.513,233,2.827,236,2.537,239,3.396,240,2.88,243,2.424,294,2.513,304,2.424,329,3.233,355,2.649,384,2.821,426,2.267,434,2.678,455,2.912,507,1.887,558,2.912,580,2.513,585,3.233,590,1.887,591,2.062,594,3.309,595,3.309,597,2.24,598,2.513,691,2.513,747,2.267,748,2.267,749,1.954,750,4.842,751,2.24,752,2.821,753,3.858,754,4.003,755,3.793,756,4.957,757,4.957,758,4.957,759,4.957,760,3.233,761,2.24,762,4.37,763,2.674,764,4.153,765,4.304,766,3.858,767,3.858,768,2.674,769,2.674,770,4.404,771,3.858,772,3.858,773,2.674,774,2.674,775,3.233,776,2.674,777,3.233,778,2.821,779,3.233,780,2.821,781,2.821,782,3.233,783,2.674,784,3.233,785,2.821,786,3.233,787,2.24,788,2.24,789,2.674,790,2.674,791,2.674,792,2.674,793,2.674,794,2.674,795,2.674,796,2.674,797,2.674,798,2.24]],["title/components/ThreeViewerComponent.html",[169,1.75,200,1.75]],["body/components/ThreeViewerComponent.html",[0,0.09,3,0.304,4,0.304,5,0.27,6,0.485,8,0.49,10,2.522,12,0.206,13,0.599,14,1.001,16,0.719,18,1.174,23,0.849,25,0.695,26,0.031,27,0.843,28,0.401,29,0.642,48,2.07,49,0.658,50,0.919,51,0.769,56,1.266,57,1.382,71,0.925,88,0.304,89,1.083,92,1.473,102,2.576,105,0.813,114,0.784,119,1.603,134,1.603,160,1.48,167,0.018,168,0.018,169,2.815,170,1.436,171,2.275,172,1.965,173,2.252,174,1.965,175,2.252,179,1.965,180,2.252,181,4.163,182,4.163,183,3.245,185,3.245,192,1.314,193,2.252,194,2.522,195,2.07,196,1.965,197,4.163,198,2.252,199,2.252,200,2.656,201,2.815,202,2.252,203,2.252,221,4.011,233,1.894,238,1.899,273,3.682,304,3.129,320,3.56,340,1.579,345,2.478,396,3.632,402,2.831,590,2.43,598,2.522,621,3.804,693,2.252,719,2.252,748,3.4,752,3.632,799,2.252,800,3.873,801,3.804,802,3.873,803,3.245,804,4.541,805,4.541,806,4.541,807,3.873,808,4.541,809,4.163,810,5.486,811,2.687,812,3.322,813,3.873,814,3.319,815,2.687,816,3.873,817,3.873,818,2.687,819,3.873,820,4.541,821,2.687,822,3.873,823,2.687,824,3.873,825,3.245,826,3.873,827,3.245,828,2.687,829,2.687,830,2.687,831,2.687,832,2.687,833,2.687,834,2.687,835,2.687,836,2.687,837,2.687,838,2.687,839,2.687,840,2.687,841,2.687,842,2.687,843,2.687,844,2.687,845,2.687,846,2.687]],["title/injectables/TimeService.html",[747,1.924,812,1.924]],["body/injectables/TimeService.html",[0,0.089,3,0.301,4,0.301,5,0.267,6,0.498,8,0.486,9,2.417,11,1.383,12,0.203,13,0.594,14,1.278,16,0.713,18,1.166,21,1.878,23,0.845,25,0.993,26,0.031,27,0.713,28,0.436,29,0.917,34,1.357,35,1.357,49,0.766,50,1.106,51,0.594,68,2.333,71,0.634,74,1.42,88,0.301,92,1.576,93,1.561,99,2.641,105,0.803,114,0.777,118,1.726,155,1.726,157,1.357,158,1.59,159,2.921,160,2.376,167,0.018,168,0.018,177,2.501,192,1.299,213,2.501,271,1.726,294,2.501,304,2.417,320,3.507,335,2.501,340,3.21,345,1.59,384,2.807,389,1.59,455,1.561,493,2.807,507,1.878,558,2.903,565,4.141,566,4.141,567,4.141,590,2.417,591,2.053,666,2.807,691,2.501,697,2.807,747,2.256,749,1.942,752,2.807,754,3.995,755,3.779,760,3.218,761,2.225,762,4.467,764,3.218,765,4.119,775,3.218,777,3.218,778,2.807,779,4.141,780,3.613,781,3.613,782,3.218,784,3.218,785,3.613,786,3.218,787,2.225,788,2.225,798,2.225,812,2.256,814,2.807,847,2.225,848,3.84,849,4.942,850,2.656,851,2.656,852,3.84,853,2.656,854,2.656,855,3.84,856,3.84,857,3.218,858,3.218,859,2.656,860,4.511,861,5.464,862,2.656,863,4.511,864,2.656,865,4.511,866,2.656,867,2.656,868,2.656,869,2.656,870,2.656,871,2.656]],["title/classes/World.html",[0,0.11,315,1.75]],["body/classes/World.html",[0,0.082,2,0.801,3,0.277,4,0.277,5,0.433,6,0.509,8,0.545,9,1.771,11,1.013,12,0.188,13,0.56,14,1.459,16,0.672,18,1.113,23,0.873,25,0.936,26,0.031,27,0.672,28,0.469,29,0.864,34,0.866,35,0.866,44,2.127,47,1.31,49,0.615,50,0.963,51,0.919,52,1.818,53,1.31,56,1.883,57,0.585,58,2.426,59,1.31,64,1.646,65,1.31,66,1.113,67,0.866,68,1.969,69,1.44,71,1.028,86,2.358,87,3.078,88,0.277,89,1.013,90,2.794,92,1.783,98,1.771,102,2.598,103,1.627,104,2.326,105,0.741,114,1.027,137,2.127,155,1.627,157,1.279,158,1.499,159,1.935,160,1.384,161,2.127,165,1.438,167,0.017,168,0.017,195,1.935,232,2.326,234,1.31,271,1.627,300,2.647,315,3.276,318,3.033,320,2.794,325,2.647,339,3.033,340,2.127,345,2.49,347,1.771,387,2.67,389,1.969,391,2.358,401,1.935,491,3.384,527,2.647,558,2.127,559,3.033,560,3.033,587,1.596,590,1.771,591,2.542,608,2.647,665,1.596,872,2.053,873,3.62,874,5.641,875,3.62,876,3.033,877,2.45,878,4.756,879,2.45,880,3.62,881,2.45,882,3.033,883,3.62,884,2.45,885,3.62,886,3.62,887,3.62,888,2.45,889,2.45,890,2.45,891,2.45,892,2.45,893,2.45,894,2.45,895,2.053,896,2.45,897,2.45,898,4.306,899,3.62,900,2.45,901,2.45,902,2.45,903,2.45,904,2.45,905,2.45,906,2.45,907,2.45,908,2.45]],["title/coverage.html",[909,3.727]],["body/coverage.html",[0,0.213,1,2.297,5,0.355,6,0.587,7,3.417,26,0.031,28,0.312,52,1.348,58,1.46,64,1.348,66,0.912,68,1.46,87,1.885,114,0.714,167,0.021,168,0.021,169,2.499,170,1.885,176,2.955,200,1.885,221,2.579,225,2.297,226,2.955,231,1.725,236,1.585,259,5.598,268,2.297,269,2.955,287,2.955,304,1.725,305,2.955,312,2.297,315,1.885,387,2.356,388,3.417,400,2.297,433,1.252,491,2.072,492,2.955,555,2.955,564,2.955,574,2.072,575,2.955,588,2.955,596,2.955,599,2.072,600,2.579,614,2.955,620,2.955,648,2.579,665,2.297,747,2.747,748,2.072,750,2.955,751,2.955,799,2.955,812,2.072,847,2.955,872,2.955,909,2.955,910,2.955,911,3.527,912,3.527,913,5.809,914,3.527,915,5.583,916,5.583,917,4.675,918,3.527,919,2.955,920,2.579,921,5.244,922,5.244,923,3.527,924,3.527,925,5.244,926,3.527,927,2.955,928,2.955,929,3.527,930,3.527]],["title/dependencies.html",[207,2.561,931,2.3]],["body/dependencies.html",[26,0.031,57,1.126,61,2.308,62,2.308,167,0.026,168,0.026,192,2.308,207,3.073,218,4.704,219,4.104,587,3.073,932,4.718,933,6.546,934,4.718,935,4.718,936,4.718,937,4.718,938,4.718,939,4.718,940,4.718,941,4.718,942,4.718,943,4.718,944,4.718,945,4.718]],["title/miscellaneous/enumerations.html",[946,1.467,947,3.295]],["body/miscellaneous/enumerations.html",[6,0.438,12,0.38,26,0.029,28,0.438,35,2.162,39,2.424,48,2.65,104,2.424,167,0.026,168,0.026,432,2.597,600,3.624,609,3.228,610,4.225,612,4.154,613,4.154,946,2.65,947,4.154,948,4.958]],["title/index.html",[12,0.21,949,2.3,950,2.3]],["body/index.html",[0,0.171,10,1.631,11,0.701,21,1.225,26,0.028,27,0.465,28,0.221,34,0.885,38,0.957,39,2.35,49,0.425,51,0.675,52,0.957,55,1.959,56,1.425,57,1.222,64,0.957,66,0.648,74,2.861,84,2.824,87,1.966,89,1.345,90,3.008,99,1.338,103,1.959,114,1.172,119,1.037,123,2.161,155,1.125,157,1.3,158,1.523,160,0.957,165,0.757,167,0.017,168,0.017,169,1.966,171,1.471,172,3.188,177,3.13,178,1.83,188,2.098,189,2.098,190,2.098,201,1.966,227,3.145,228,2.098,229,2.562,230,2.689,231,1.225,232,1.799,233,1.799,238,2.046,239,1.471,240,1.799,241,2.098,243,1.799,247,2.098,270,2.098,271,1.125,288,2.35,304,2.706,306,2.098,307,2.098,308,2.689,309,2.098,310,2.689,311,2.098,313,2.098,314,2.098,315,1.338,325,1.83,326,2.689,332,2.098,336,2.098,340,1.471,345,1.037,346,2.3,349,2.098,354,2.098,355,1.966,357,1.83,387,1.653,391,1.631,401,2.331,416,3.334,419,1.631,432,1.653,435,2.396,489,0.957,491,2.161,493,1.83,494,3.082,495,3.188,507,1.225,510,3.653,512,2.098,515,1.83,524,2.098,527,1.83,556,2.824,558,1.471,570,2.098,574,1.471,578,1.83,579,2.098,580,1.631,590,1.225,593,2.098,598,2.396,608,1.83,616,3.082,629,2.098,649,2.098,651,2.098,653,2.098,680,2.098,685,2.098,691,2.84,692,3.082,697,1.83,710,2.098,748,2.161,754,1.83,762,2.689,765,2.689,778,2.689,780,1.83,781,1.83,785,1.83,803,2.098,809,2.098,812,1.471,814,3.913,857,3.082,858,2.098,882,2.098,895,2.098,910,2.098,920,1.83,951,2.504,952,2.504,953,3.679,954,2.504,955,2.504,956,3.679,957,2.504,958,2.504,959,2.504,960,2.504,961,2.504,962,2.098,963,2.504,964,3.679,965,2.504,966,2.504,967,2.504,968,3.679,969,2.504,970,2.504,971,2.504,972,2.504,973,2.504,974,2.504,975,3.679,976,2.504,977,3.082,978,3.653,979,2.504,980,2.504,981,2.504,982,2.504,983,4.361,984,2.504,985,2.504,986,2.504,987,2.504,988,2.504,989,2.504,990,2.504,991,2.504,992,4.361,993,2.504,994,2.504,995,2.504,996,2.504,997,2.098,998,2.504,999,2.504,1000,2.504,1001,2.504,1002,3.679,1003,3.679,1004,2.504,1005,2.504,1006,4.361,1007,2.504,1008,2.504,1009,2.504,1010,2.504,1011,2.504,1012,2.504,1013,2.504,1014,2.504,1015,3.082,1016,2.504,1017,2.504,1018,2.504,1019,4.361,1020,4.361,1021,3.679,1022,2.504,1023,2.504,1024,2.098,1025,2.504,1026,2.504,1027,2.504,1028,2.504,1029,2.504,1030,2.504,1031,3.679,1032,3.679,1033,4.806,1034,2.504,1035,3.679,1036,3.679,1037,2.504,1038,2.504,1039,2.504,1040,2.504,1041,2.504,1042,2.504,1043,2.504,1044,2.504,1045,2.504,1046,2.504,1047,2.504,1048,2.504,1049,2.504,1050,2.504,1051,2.504,1052,2.504,1053,2.504,1054,2.504,1055,2.504,1056,2.504,1057,2.504,1058,2.504,1059,2.504,1060,3.679,1061,2.098,1062,2.504,1063,2.504,1064,3.679,1065,2.504,1066,2.504,1067,2.504,1068,3.679,1069,2.504,1070,2.504,1071,2.504,1072,2.504,1073,2.504,1074,2.504,1075,2.504,1076,3.679,1077,2.504,1078,2.504]],["title/license.html",[949,2.3,950,2.3,1079,2.3]],["body/license.html",[11,1.071,21,1.53,23,0.313,26,0.014,44,1.187,45,3.152,48,1.08,157,1.524,160,1.196,167,0.014,168,0.014,187,1.693,196,2.288,294,1.316,315,1.673,426,1.839,434,1.53,515,1.477,571,1.693,577,1.693,607,1.693,687,2.622,716,2.622,801,1.693,825,1.693,827,3.209,876,1.693,962,1.693,977,1.693,978,4.31,997,1.693,1015,1.693,1024,1.693,1061,1.693,1079,4.133,1080,5.145,1081,5.316,1082,4.664,1083,5.145,1084,2.021,1085,2.021,1086,2.021,1087,5.316,1088,2.021,1089,3.13,1090,4.664,1091,2.021,1092,2.021,1093,2.021,1094,2.021,1095,2.021,1096,3.83,1097,3.83,1098,2.021,1099,4.664,1100,4.312,1101,2.021,1102,3.83,1103,2.021,1104,2.021,1105,2.021,1106,2.021,1107,5.316,1108,2.021,1109,2.021,1110,3.13,1111,2.021,1112,2.021,1113,3.13,1114,5.676,1115,5.676,1116,6.241,1117,3.13,1118,3.13,1119,2.021,1120,2.021,1121,2.021,1122,3.13,1123,3.13,1124,6.338,1125,2.021,1126,3.83,1127,3.13,1128,2.021,1129,3.13,1130,3.13,1131,2.021,1132,3.83,1133,2.021,1134,3.13,1135,3.13,1136,4.312,1137,2.021,1138,5.145,1139,2.021,1140,2.021,1141,4.312,1142,3.13,1143,2.021,1144,2.021,1145,2.021,1146,3.13,1147,2.021,1148,2.021,1149,2.021,1150,2.021,1151,3.83,1152,4.664,1153,5.457,1154,4.664,1155,3.83,1156,2.021,1157,2.021,1158,2.021,1159,3.13,1160,2.021,1161,3.13,1162,1.693,1163,2.021,1164,2.021,1165,2.021,1166,2.021,1167,2.021,1168,2.021,1169,2.021,1170,2.021,1171,2.021,1172,2.021,1173,3.13,1174,2.021,1175,5.676,1176,4.664,1177,2.021,1178,2.021,1179,2.021,1180,3.13,1181,5.145,1182,2.021,1183,2.021,1184,2.021,1185,2.021,1186,2.021,1187,2.021,1188,2.021,1189,2.021,1190,2.021,1191,2.021,1192,2.021,1193,2.021,1194,2.021,1195,2.021,1196,4.312,1197,2.021,1198,2.021,1199,2.021,1200,2.021,1201,3.83,1202,2.021,1203,2.021,1204,2.021,1205,3.13,1206,2.021,1207,2.021,1208,2.021,1209,3.83,1210,3.13,1211,2.021,1212,2.021,1213,2.021,1214,2.021,1215,3.13,1216,3.13,1217,2.021,1218,2.021,1219,2.021,1220,2.021,1221,2.021,1222,2.021,1223,2.021,1224,4.664,1225,2.021,1226,2.021,1227,2.021,1228,2.021,1229,2.021,1230,1.693,1231,2.021,1232,2.021,1233,2.021,1234,2.021,1235,3.13,1236,2.021,1237,3.83,1238,2.021,1239,2.021,1240,1.693,1241,2.021,1242,2.021,1243,2.021,1244,5.145,1245,3.83,1246,2.021,1247,5.145,1248,3.13,1249,3.13,1250,2.021,1251,3.83,1252,2.021,1253,2.021,1254,2.021,1255,2.021,1256,2.021,1257,2.021,1258,4.933,1259,3.13,1260,3.83,1261,3.13,1262,2.021,1263,2.021,1264,2.021,1265,2.021,1266,2.021,1267,4.664,1268,3.13,1269,3.13,1270,3.83,1271,3.13,1272,3.13,1273,3.13,1274,3.13,1275,3.13,1276,3.13,1277,2.021,1278,2.021,1279,2.021,1280,2.021,1281,2.021,1282,2.021,1283,2.021,1284,4.312,1285,2.021,1286,2.021,1287,2.021,1288,2.021,1289,2.021,1290,2.021,1291,2.021,1292,2.021,1293,2.021,1294,4.312,1295,3.83,1296,2.021,1297,3.13,1298,3.83,1299,3.13,1300,3.13,1301,3.13,1302,2.021,1303,2.021,1304,2.021,1305,2.021,1306,2.021,1307,3.13,1308,2.021,1309,4.312,1310,2.021,1311,2.021,1312,2.021,1313,2.021,1314,3.13,1315,2.021,1316,2.021,1317,2.021,1318,2.021,1319,2.021,1320,2.021,1321,2.021,1322,2.021,1323,2.021,1324,2.021,1325,2.021,1326,3.13,1327,2.021,1328,2.021,1329,2.021,1330,2.021,1331,2.021,1332,2.021,1333,2.021,1334,2.021,1335,2.021,1336,3.13,1337,2.021,1338,2.021,1339,2.021,1340,2.021,1341,2.021,1342,2.021,1343,2.021,1344,2.021,1345,2.021,1346,2.021,1347,3.13,1348,2.021,1349,2.021,1350,2.021,1351,2.021,1352,2.021,1353,2.021,1354,2.021,1355,3.13,1356,2.021,1357,2.021,1358,2.021,1359,2.021,1360,2.021,1361,2.021,1362,2.021,1363,2.021,1364,2.021,1365,2.021,1366,2.021,1367,2.021]],["title/modules.html",[206,3.251]],["body/modules.html",[26,0.027,167,0.027,168,0.027,205,3.367,206,3.779,219,3.779,1368,5.17,1369,5.17,1370,5.17]],["title/overview.html",[1371,3.727]],["body/overview.html",[2,1.557,26,0.029,84,2.798,167,0.026,168,0.026,170,3.478,171,2.798,200,3.216,204,3.99,205,4.237,207,3.676,208,3.99,209,3.99,210,3.99,211,4.73,212,3.99,213,3.101,262,3.99,489,1.82,749,3.481,770,4.73,1230,3.99,1371,3.99]],["title/properties.html",[13,0.608,931,2.3]],["body/properties.html",[13,0.804,26,0.028,167,0.027,168,0.027,1240,4.353,1372,5.196]],["title/miscellaneous/typealiases.html",[946,1.467,1373,3.933]],["body/miscellaneous/typealiases.html",[6,0.443,12,0.384,26,0.029,28,0.514,38,1.918,39,2.454,167,0.027,168,0.027,288,2.454,346,2.255,432,2.255,609,3.268,648,3.668,695,4.877,946,2.682,1374,5.018,1375,5.018]],["title/miscellaneous/variables.html",[946,1.467,1376,3.295]],["body/miscellaneous/variables.html",[6,0.368,12,0.319,26,0.031,27,1.104,28,0.559,34,2.005,35,2.005,47,2.225,85,3.044,134,1.724,167,0.024,168,0.024,347,2.036,387,2.803,389,2.154,599,2.446,602,4.147,603,3.044,665,3.388,666,3.044,717,3.488,726,4.358,728,3.488,919,3.488,920,3.803,927,3.488,928,3.488,946,2.225,1162,5.125,1376,4.753,1377,4.164,1378,4.164,1379,4.164,1380,4.164,1381,4.164,1382,4.164,1383,4.164,1384,4.164,1385,4.164,1386,4.164,1387,4.164,1388,4.164,1389,4.164,1390,4.164,1391,4.164,1392,4.164,1393,4.164]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":861,"title":{},"body":{"injectables/TimeService.html":{}}}],["0.001",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.1.0",{"_index":1372,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["0.141.0",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["0.16.1",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":446,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.5",{"_index":541,"title":{},"body":{"classes/Floor.html":{}}}],["0xff0000",{"_index":1064,"title":{},"body":{"index.html":{}}}],["1",{"_index":84,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1084,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":533,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1230,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14",{"_index":972,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["14/14",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["1996",{"_index":1232,"title":{},"body":{"license.html":{}}}],["2",{"_index":770,"title":{},"body":{"injectables/ScreenSizeService.html":{},"overview.html":{}}}],["2.25",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.3.0",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":913,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":443,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{}}}],["35",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1218,"title":{},"body":{"license.html":{}}}],["4/4",{"_index":916,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":915,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":501,"title":{},"body":{"classes/Floor.html":{}}}],["7.5.0",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{},"overview.html":{}}}],["8/8",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1226,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1333,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1256,"title":{},"body":{"license.html":{}}}],["above",{"_index":771,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["absence",{"_index":1347,"title":{},"body":{"license.html":{}}}],["account",{"_index":1304,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1350,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1364,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":518,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1193,"title":{},"body":{"license.html":{}}}],["add",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":357,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{},"index.html":{}}}],["addition",{"_index":1305,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1170,"title":{},"body":{"license.html":{}}}],["adds",{"_index":706,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["advertising",{"_index":1275,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1307,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1175,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1258,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1323,"title":{},"body":{"license.html":{}}}],["against",{"_index":1211,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1374,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1238,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1126,"title":{},"body":{"license.html":{}}}],["angular",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["angular's",{"_index":993,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":986,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["antialias",{"_index":634,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":170,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1244,"title":{},"body":{"license.html":{}}}],["application",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["applied",{"_index":515,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":410,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":426,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["appmodule",{"_index":205,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":988,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1225,"title":{},"body":{"license.html":{}}}],["aspect",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{}}}],["assert",{"_index":1325,"title":{},"body":{"license.html":{}}}],["assets",{"_index":979,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1259,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1174,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1092,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":425,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1199,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1125,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1111,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":558,"title":{},"body":{"interfaces/IDestroyable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["axiom_3d",{"_index":1078,"title":{},"body":{"index.html":{}}}],["b",{"_index":1337,"title":{},"body":{"license.html":{}}}],["based",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["basis",{"_index":1095,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1066,"title":{},"body":{"index.html":{}}}],["behaviour",{"_index":778,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["below",{"_index":1117,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1277,"title":{},"body":{"license.html":{}}}],["between",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{}}}],["bind",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":323,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":976,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":423,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":819,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":987,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1067,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1069,"title":{},"body":{"index.html":{}}}],["break",{"_index":725,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["browse",{"_index":1370,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":958,"title":{},"body":{"index.html":{}}}],["build",{"_index":1143,"title":{},"body":{"license.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["c",{"_index":1354,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":568,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["calculations",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":692,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["callback",{"_index":691,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["called",{"_index":1042,"title":{},"body":{"index.html":{}}}],["camera",{"_index":229,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["cameraholder",{"_index":225,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":363,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":696,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cancellation",{"_index":1287,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":808,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":519,"title":{},"body":{"classes/Floor.html":{}}}],["care",{"_index":1036,"title":{},"body":{"index.html":{}}}],["case",{"_index":716,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["casting",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1260,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1083,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1128,"title":{},"body":{"license.html":{}}}],["change",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["changedetection",{"_index":766,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["changes",{"_index":248,"title":{},"body":{"classes/CameraHolder.html":{}}}],["check",{"_index":422,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["checks",{"_index":418,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":378,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":380,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":453,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":998,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"index.html":{}}}],["circlegeometry",{"_index":499,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":500,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1141,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":563,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":816,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1356,"title":{},"body":{"license.html":{}}}],["client",{"_index":1093,"title":{},"body":{"license.html":{}}}],["cluster_appmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":977,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":887,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":510,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1155,"title":{},"body":{"license.html":{}}}],["common",{"_index":1022,"title":{},"body":{"index.html":{}}}],["commons",{"_index":1081,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":997,"title":{},"body":{"index.html":{},"license.html":{}}}],["compensation",{"_index":1172,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1213,"title":{},"body":{"license.html":{}}}],["complete",{"_index":741,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["completed",{"_index":688,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["component",{"_index":169,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"index.html":{},"overview.html":{}}}],["composing",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1052,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1341,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1112,"title":{},"body":{"license.html":{}}}],["configure",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":394,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":496,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":523,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":395,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":497,"title":{},"body":{"classes/Floor.html":{}}}],["consents",{"_index":1360,"title":{},"body":{"license.html":{}}}],["consider",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceLoader.html":{}}}],["consideration",{"_index":1171,"title":{},"body":{"license.html":{}}}],["considered",{"_index":629,"title":{},"body":{"classes/RendererHolder.html":{},"index.html":{}}}],["console.log('loading",{"_index":740,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log('play",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log('resize",{"_index":790,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["console.log('resources",{"_index":894,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":746,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(`loading",{"_index":743,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(newaction",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["console.log(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["const",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(camera",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":316,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(ngzone",{"_index":761,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["constructor(private",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":663,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["constructor(timeservice",{"_index":811,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["consumer",{"_index":765,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["contained",{"_index":353,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":344,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":800,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":493,"title":{},"body":{"classes/Floor.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["contemplated",{"_index":1293,"title":{},"body":{"license.html":{}}}],["content",{"_index":1025,"title":{},"body":{"index.html":{}}}],["contract",{"_index":556,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"index.html":{}}}],["contracts",{"_index":1028,"title":{},"body":{"index.html":{}}}],["contrary",{"_index":1327,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1250,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1156,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1133,"title":{},"body":{"license.html":{}}}],["control",{"_index":1004,"title":{},"body":{"index.html":{}}}],["controls",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":268,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":368,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1274,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1114,"title":{},"body":{"license.html":{}}}],["core",{"_index":306,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["corporation",{"_index":1086,"title":{},"body":{"license.html":{}}}],["correct",{"_index":419,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["correctly",{"_index":517,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1229,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":909,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1091,"title":{},"body":{"license.html":{}}}],["creative",{"_index":1080,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1119,"title":{},"body":{"license.html":{}}}],["cube",{"_index":435,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["cube_texture",{"_index":613,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":609,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":652,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":667,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cultural",{"_index":1134,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1160,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{},"license.html":{}}}],["currenttime",{"_index":863,"title":{},"body":{"injectables/TimeService.html":{}}}],["d",{"_index":1362,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1104,"title":{},"body":{"license.html":{}}}],["damping",{"_index":1005,"title":{},"body":{"index.html":{}}}],["data",{"_index":1222,"title":{},"body":{"license.html":{}}}],["database",{"_index":1127,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1234,"title":{},"body":{"license.html":{}}}],["date",{"_index":1317,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":860,"title":{},"body":{"injectables/TimeService.html":{}}}],["debug",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debug/debuggui",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":58,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debugobject",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":821,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1315,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1349,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":565,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["dependencies",{"_index":207,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":710,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["depicted",{"_index":1208,"title":{},"body":{"license.html":{}}}],["described",{"_index":883,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["destroy",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["destroyable",{"_index":349,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyable.destroy",{"_index":386,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":311,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["destroyed",{"_index":885,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":817,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detection",{"_index":781,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["determine",{"_index":777,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["detriment",{"_index":1280,"title":{},"body":{"license.html":{}}}],["development",{"_index":1380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["different",{"_index":1027,"title":{},"body":{"index.html":{}}}],["directional",{"_index":407,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":405,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1328,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1102,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1352,"title":{},"body":{"license.html":{}}}],["display",{"_index":801,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":878,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":824,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":527,"title":{},"body":{"classes/Floor.html":{},"classes/World.html":{},"index.html":{}}}],["disposed",{"_index":557,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":327,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{}}}],["disrupt",{"_index":1290,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1221,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1180,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1089,"title":{},"body":{"license.html":{}}}],["document",{"_index":1090,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":910,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1056,"title":{},"body":{"index.html":{}}}],["done",{"_index":670,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["draco",{"_index":1051,"title":{},"body":{"index.html":{}}}],["due",{"_index":697,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["duration",{"_index":1271,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1366,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":937,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["easily",{"_index":1001,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":309,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["effect",{"_index":1186,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1316,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1166,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":566,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["elects",{"_index":1178,"title":{},"body":{"license.html":{}}}],["element",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":820,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":325,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{},"index.html":{}}}],["emit",{"_index":576,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":669,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitter",{"_index":700,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitting",{"_index":855,"title":{},"body":{"injectables/TimeService.html":{}}}],["enabled",{"_index":1006,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":524,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["end",{"_index":328,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":304,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":329,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":837,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":829,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/size/screen",{"_index":831,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/time/time.service",{"_index":830,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engineconsumer",{"_index":755,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["enjoyment",{"_index":1292,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":826,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enum",{"_index":611,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":947,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":387,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":902,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":448,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":392,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":400,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":436,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1289,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1243,"title":{},"body":{"license.html":{}}}],["error",{"_index":693,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":720,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["error('canvas",{"_index":835,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":731,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["errors",{"_index":1351,"title":{},"body":{"license.html":{}}}],["european",{"_index":1227,"title":{},"body":{"license.html":{}}}],["event",{"_index":335,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["eventemitter",{"_index":653,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["events",{"_index":585,"title":{},"body":{"interfaces/IListenable.html":{},"injectables/ScreenSizeService.html":{}}}],["exclusive",{"_index":1113,"title":{},"body":{"license.html":{}}}],["execute",{"_index":764,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executed",{"_index":779,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executes",{"_index":992,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":1314,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1265,"title":{},"body":{"license.html":{}}}],["exists",{"_index":732,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["expectation",{"_index":1169,"title":{},"body":{"license.html":{}}}],["experience",{"_index":320,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["experiencetime",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["export",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["exposes",{"_index":615,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["express",{"_index":1294,"title":{},"body":{"license.html":{}}}],["extensible",{"_index":1023,"title":{},"body":{"index.html":{}}}],["extensions",{"_index":1272,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1176,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1220,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1296,"title":{},"body":{"license.html":{}}}],["false",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":984,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1139,"title":{},"body":{"license.html":{}}}],["features",{"_index":975,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":745,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["fires",{"_index":699,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["firm",{"_index":1088,"title":{},"body":{"license.html":{}}}],["first",{"_index":842,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["fit",{"_index":971,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1345,"title":{},"body":{"license.html":{}}}],["floor",{"_index":491,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":897,"title":{},"body":{"classes/World.html":{}}}],["folders",{"_index":990,"title":{},"body":{"index.html":{}}}],["follow",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["following",{"_index":1191,"title":{},"body":{"license.html":{}}}],["form",{"_index":1150,"title":{},"body":{"license.html":{}}}],["forward",{"_index":856,"title":{},"body":{"injectables/TimeService.html":{}}}],["fox",{"_index":87,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":900,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["framerate",{"_index":573,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["free",{"_index":1159,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1148,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1074,"title":{},"body":{"index.html":{}}}],["fully",{"_index":687,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["function",{"_index":384,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["further",{"_index":1161,"title":{},"body":{"license.html":{}}}],["future",{"_index":1267,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1163,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":886,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":402,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["geometries",{"_index":1034,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":494,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getexperiencetime",{"_index":849,"title":{},"body":{"injectables/TimeService.html":{}}}],["getheight",{"_index":756,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getpixelratio",{"_index":757,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gets",{"_index":852,"title":{},"body":{"injectables/TimeService.html":{}}}],["getsize",{"_index":758,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getting",{"_index":949,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwidth",{"_index":759,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":654,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfloader(this.loadingmanager",{"_index":671,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfmodel",{"_index":612,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1306,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1165,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1248,"title":{},"body":{"license.html":{}}}],["group",{"_index":54,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{}}}],["handle",{"_index":1020,"title":{},"body":{"index.html":{}}}],["handled",{"_index":1014,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1039,"title":{},"body":{"index.html":{}}}],["handlers",{"_index":996,"title":{},"body":{"index.html":{}}}],["handles",{"_index":590,"title":{},"body":{"interfaces/IResizable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["handling",{"_index":1054,"title":{},"body":{"index.html":{}}}],["heart",{"_index":994,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":780,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["height",{"_index":595,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["heirs",{"_index":1281,"title":{},"body":{"license.html":{}}}],["held",{"_index":1331,"title":{},"body":{"license.html":{}}}],["here",{"_index":605,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1251,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1101,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1106,"title":{},"body":{"license.html":{}}}],["highly",{"_index":964,"title":{},"body":{"index.html":{}}}],["holder",{"_index":227,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["holder/cameraholder",{"_index":360,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":359,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":358,"title":{},"body":{"classes/Engine.html":{}}}],["holders",{"_index":999,"title":{},"body":{"index.html":{}}}],["holds",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["html",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["huge",{"_index":957,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1158,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":66,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["iexperiencetime",{"_index":68,"title":{"interfaces/IExperienceTime.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["ii",{"_index":1196,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1201,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":574,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"index.html":{}}}],["image",{"_index":1206,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1236,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1246,"title":{},"body":{"license.html":{}}}],["implements",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["implied",{"_index":1342,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["impulsion",{"_index":843,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["include",{"_index":1189,"title":{},"body":{"license.html":{}}}],["including",{"_index":1153,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1044,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1145,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1301,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1320,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["infringement",{"_index":1142,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{}}}],["initialsize",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{}}}],["injectable",{"_index":747,"title":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["injectables",{"_index":749,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["inspiration",{"_index":960,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":965,"title":{},"body":{"index.html":{}}}],["instance",{"_index":232,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"index.html":{}}}],["instanceof",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["instantiated",{"_index":873,"title":{},"body":{"classes/World.html":{}}}],["instantiation",{"_index":308,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["integration",{"_index":1046,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1185,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1283,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":421,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":433,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":711,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["interface/iresizable",{"_index":251,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":489,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":1300,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1321,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1319,"title":{},"body":{"license.html":{}}}],["iresizable",{"_index":231,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{},"index.html":{}}}],["irrevocable",{"_index":1312,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1253,"title":{},"body":{"license.html":{}}}],["isenvmappable",{"_index":397,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":415,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":236,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["isource",{"_index":599,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issues",{"_index":858,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["it's",{"_index":1071,"title":{},"body":{"index.html":{}}}],["item",{"_index":695,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":739,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["item.scene.traverse((object",{"_index":736,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["items",{"_index":655,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemsloaded",{"_index":675,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemstotal",{"_index":676,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["iupdatable",{"_index":64,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["iv",{"_index":1209,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1045,"title":{},"body":{"index.html":{}}}],["journey",{"_index":966,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1298,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1109,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1050,"title":{},"body":{"index.html":{}}}],["keep",{"_index":785,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["key",{"_index":379,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1340,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":963,"title":{},"body":{"index.html":{}}}],["kit",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1183,"title":{},"body":{"license.html":{}}}],["known",{"_index":1263,"title":{},"body":{"license.html":{}}}],["large",{"_index":1279,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1348,"title":{},"body":{"license.html":{}}}],["later",{"_index":1140,"title":{},"body":{"license.html":{}}}],["law",{"_index":1087,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1108,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":560,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":350,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1082,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1299,"title":{},"body":{"license.html":{}}}],["legend",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":961,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1103,"title":{},"body":{"license.html":{}}}],["license",{"_index":1079,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1335,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":330,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["lifting",{"_index":1016,"title":{},"body":{"index.html":{}}}],["light",{"_index":408,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":391,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{},"index.html":{}}}],["likeness",{"_index":1207,"title":{},"body":{"license.html":{}}}],["lil",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{}}}],["limitation",{"_index":1154,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1216,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1190,"title":{},"body":{"license.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":920,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":580,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["listenable",{"_index":1037,"title":{},"body":{"index.html":{}}}],["listening",{"_index":995,"title":{},"body":{"index.html":{}}}],["listens",{"_index":753,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":666,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["loaders",{"_index":982,"title":{},"body":{"index.html":{}}}],["loading",{"_index":649,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["loadingmanager",{"_index":656,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loads",{"_index":882,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["loop",{"_index":814,"title":{},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["made",{"_index":825,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["main",{"_index":848,"title":{},"body":{"injectables/TimeService.html":{}}}],["makes",{"_index":1096,"title":{},"body":{"license.html":{}}}],["management",{"_index":1017,"title":{},"body":{"index.html":{}}}],["manager",{"_index":680,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["mandatory",{"_index":601,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":989,"title":{},"body":{"index.html":{}}}],["map",{"_index":401,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["mapping",{"_index":1012,"title":{},"body":{"index.html":{}}}],["maps",{"_index":438,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1231,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1033,"title":{},"body":{"index.html":{}}}],["mass",{"_index":1030,"title":{},"body":{"index.html":{}}}],["matching",{"_index":168,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":416,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":404,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":794,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["math.pi",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1270,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1184,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1273,"title":{},"body":{"license.html":{}}}],["member",{"_index":1278,"title":{},"body":{"license.html":{}}}],["memory",{"_index":559,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1344,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1070,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":508,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1068,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":427,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":428,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":429,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":616,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["min",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":946,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":721,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["modelgroup",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":651,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["modify",{"_index":1144,"title":{},"body":{"license.html":{}}}],["module",{"_index":204,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":206,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1197,"title":{},"body":{"license.html":{}}}],["more",{"_index":1073,"title":{},"body":{"index.html":{}}}],["mostly",{"_index":1038,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1168,"title":{},"body":{"license.html":{}}}],["multiple",{"_index":606,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":472,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1057,"title":{},"body":{"index.html":{}}}],["national",{"_index":1235,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1359,"title":{},"body":{"license.html":{}}}],["need",{"_index":326,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needs",{"_index":591,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1188,"title":{},"body":{"license.html":{}}}],["new",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":618,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":809,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["ngoninit",{"_index":810,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngzone",{"_index":762,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["non",{"_index":1309,"title":{},"body":{"license.html":{}}}],["normal",{"_index":512,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":504,"title":{},"body":{"classes/Floor.html":{}}}],["note",{"_index":1055,"title":{},"body":{"index.html":{}}}],["notified",{"_index":581,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":685,"title":{},"body":{"classes/ResourceLoader.html":{},"index.html":{}}}],["notify",{"_index":1040,"title":{},"body":{"index.html":{}}}],["now",{"_index":1262,"title":{},"body":{"license.html":{}}}],["null",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["number",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["object",{"_index":389,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":737,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["object.material.dispose",{"_index":738,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["objects",{"_index":346,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1367,"title":{},"body":{"license.html":{}}}],["observable",{"_index":578,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["obtaining",{"_index":1358,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":974,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":583,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":694,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["offers",{"_index":1338,"title":{},"body":{"license.html":{}}}],["old",{"_index":569,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["oldaction",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":805,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["one",{"_index":570,"title":{},"body":{"interfaces/IExperienceTime.html":{},"index.html":{}}}],["onerror",{"_index":658,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onerror(url",{"_index":689,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["oninit",{"_index":804,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":659,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress",{"_index":660,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress(url",{"_index":701,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["opinion",{"_index":1072,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":413,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1053,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":270,"title":{},"body":{"classes/ControlsHolder.html":{},"index.html":{}}}],["orbitcontrols(camera",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":307,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["organized",{"_index":991,"title":{},"body":{"index.html":{}}}],["original",{"_index":1123,"title":{},"body":{"license.html":{}}}],["others",{"_index":1167,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1336,"title":{},"body":{"license.html":{}}}],["out",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["output",{"_index":1008,"title":{},"body":{"index.html":{}}}],["outside",{"_index":754,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["over",{"_index":1049,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":772,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["overtly",{"_index":1252,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1371,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1122,"title":{},"body":{"license.html":{}}}],["owner(s",{"_index":1121,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1129,"title":{},"body":{"license.html":{}}}],["package",{"_index":931,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["panel",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["paragraph",{"_index":1217,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parent",{"_index":319,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1228,"title":{},"body":{"license.html":{}}}],["part",{"_index":827,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["partial",{"_index":1318,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1346,"title":{},"body":{"license.html":{}}}],["party",{"_index":1365,"title":{},"body":{"license.html":{}}}],["patent",{"_index":1330,"title":{},"body":{"license.html":{}}}],["path",{"_index":602,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":603,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pcf",{"_index":1013,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":631,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1194,"title":{},"body":{"license.html":{}}}],["performance",{"_index":857,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["performer(s",{"_index":1200,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1130,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1353,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1361,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1249,"title":{},"body":{"license.html":{}}}],["person",{"_index":1173,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1205,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1357,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["perspectivecamera",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1204,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1007,"title":{},"body":{"index.html":{}}}],["pixel",{"_index":355,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["pixelratio",{"_index":597,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["position",{"_index":412,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":424,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1149,"title":{},"body":{"license.html":{}}}],["present",{"_index":876,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1302,"title":{},"body":{"license.html":{}}}],["preserves",{"_index":1018,"title":{},"body":{"index.html":{}}}],["privacy",{"_index":1203,"title":{},"body":{"license.html":{}}}],["private",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["process",{"_index":1029,"title":{},"body":{"index.html":{}}}],["processes",{"_index":782,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["product",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1162,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":288,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":650,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["promote",{"_index":1157,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1276,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":722,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["protected",{"_index":1187,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1210,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1233,"title":{},"body":{"license.html":{}}}],["provide",{"_index":571,"title":{},"body":{"interfaces/IExperienceTime.html":{},"license.html":{}}}],["provided",{"_index":1100,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":787,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["providers",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":962,"title":{},"body":{"index.html":{},"license.html":{}}}],["providing",{"_index":1021,"title":{},"body":{"index.html":{}}}],["public",{"_index":1136,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1202,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1179,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1107,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1152,"title":{},"body":{"license.html":{}}}],["put",{"_index":1060,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1291,"title":{},"body":{"license.html":{}}}],["r141",{"_index":953,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["reach",{"_index":1077,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["ready",{"_index":895,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1297,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":520,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":967,"title":{},"body":{"index.html":{}}}],["redistribute",{"_index":1147,"title":{},"body":{"license.html":{}}}],["reference",{"_index":318,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1098,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1214,"title":{},"body":{"license.html":{}}}],["reinhard",{"_index":1010,"title":{},"body":{"index.html":{}}}],["reinhardtonemapping",{"_index":632,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1115,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1094,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1137,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1131,"title":{},"body":{"license.html":{}}}],["reload",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{}}}],["remainder",{"_index":1322,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1324,"title":{},"body":{"license.html":{}}}],["removes",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":623,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":310,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"index.html":{}}}],["rendererholder",{"_index":312,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":365,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":628,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":528,"title":{},"body":{"classes/Floor.html":{}}}],["representations",{"_index":1339,"title":{},"body":{"license.html":{}}}],["representing",{"_index":390,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["reproduce",{"_index":1192,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1164,"title":{},"body":{"license.html":{}}}],["requests",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":607,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1286,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":562,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable",{"_index":1041,"title":{},"body":{"index.html":{}}}],["resizable.resize(size",{"_index":374,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":313,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["resize",{"_index":233,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["resize(size",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":334,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":352,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":593,"title":{},"body":{"interfaces/IResizable.html":{},"index.html":{}}}],["resource",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resource/resourceloader",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["resource/sources",{"_index":890,"title":{},"body":{"classes/World.html":{}}}],["resourceloader",{"_index":52,"title":{"classes/ResourceLoader.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["resourceloader(sourcelist",{"_index":880,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":347,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1326,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1355,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1105,"title":{},"body":{"license.html":{}}}],["results",{"_index":167,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1198,"title":{},"body":{"license.html":{}}}],["return",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["reuse",{"_index":1146,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1285,"title":{},"body":{"license.html":{}}}],["reworked",{"_index":969,"title":{},"body":{"index.html":{}}}],["right",{"_index":1061,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1116,"title":{},"body":{"license.html":{}}}],["root",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["root'},{'name",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1308,"title":{},"body":{"license.html":{}}}],["runs",{"_index":802,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":587,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":572,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["scene",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1135,"title":{},"body":{"license.html":{}}}],["screen",{"_index":598,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["screensizeservice",{"_index":748,"title":{"injectables/ScreenSizeService.html":{}},"body":{"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["see",{"_index":983,"title":{},"body":{"index.html":{}}}],["selector",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["service",{"_index":752,"title":{},"body":{"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{}}}],["service/size/isize",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["service/time/iexperiencetime",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["services",{"_index":1015,"title":{},"body":{"index.html":{},"license.html":{}}}],["set",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{},"index.html":{}}}],["setconsumer",{"_index":760,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setconsumer(consumer",{"_index":775,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["sets",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setting",{"_index":420,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":332,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["shadow",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["shadows",{"_index":521,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1284,"title":{},"body":{"license.html":{}}}],["show",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{}}}],["similar",{"_index":1242,"title":{},"body":{"license.html":{}}}],["simon",{"_index":959,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1059,"title":{},"body":{"index.html":{}}}],["single",{"_index":604,"title":{},"body":{"interfaces/ISource.html":{}}}],["size",{"_index":240,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["size.height",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.service",{"_index":832,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["size.service.ts",{"_index":751,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:10",{"_index":763,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":774,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:34",{"_index":768,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:41",{"_index":769,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:48",{"_index":773,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:61",{"_index":776,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:68",{"_index":783,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.width",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{}}}],["slot",{"_index":784,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["source.path",{"_index":718,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.pathlist",{"_index":729,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.type",{"_index":715,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourcelist",{"_index":665,"title":{},"body":{"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":661,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourceloaded(source",{"_index":704,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sources",{"_index":608,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{},"index.html":{}}}],["sourcetype",{"_index":610,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":728,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":717,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":726,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":955,"title":{},"body":{"index.html":{}}}],["specific",{"_index":582,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../environment.prod.ts",{"_index":1377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":948,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourceloader.ts",{"_index":1375,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":191,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgb",{"_index":1009,"title":{},"body":{"index.html":{}}}],["srgbencoding",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":951,"title":{},"body":{"index.html":{}}}],["start",{"_index":567,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["started",{"_index":950,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":662,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["starts",{"_index":708,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startup",{"_index":985,"title":{},"body":{"index.html":{}}}],["state",{"_index":619,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1295,"title":{},"body":{"license.html":{}}}],["statements",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":396,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["status",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{}}}],["statutory",{"_index":1343,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":586,"title":{},"body":{"interfaces/IListenable.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{}}}],["styles",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1215,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1311,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":893,"title":{},"body":{"classes/World.html":{}}}],["subscribers",{"_index":686,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["subscription",{"_index":874,"title":{},"body":{"classes/World.html":{}}}],["subsequent",{"_index":1120,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1239,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1282,"title":{},"body":{"license.html":{}}}],["such",{"_index":1224,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":393,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":403,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":437,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["surrendered",{"_index":1334,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1257,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":714,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["switched",{"_index":1002,"title":{},"body":{"index.html":{}}}],["switching",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":589,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1035,"title":{},"body":{"index.html":{}}}],["taking",{"_index":1303,"title":{},"body":{"license.html":{}}}],["template",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["termination",{"_index":1288,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1182,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1268,"title":{},"body":{"license.html":{}}}],["test",{"_index":980,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1048,"title":{},"body":{"index.html":{}}}],["texture",{"_index":432,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":657,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textureloader(this.loadingmanager",{"_index":681,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textures",{"_index":495,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["thanks",{"_index":956,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1237,"title":{},"body":{"license.html":{}}}],["thing",{"_index":970,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.active",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.animationholder",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(experiencetime.delta",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":647,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":362,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":366,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":834,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":530,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":529,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":730,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.debugfolder",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(debugobject",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder?.add(this.environmentmap",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":342,"title":{},"body":{"classes/Engine.html":{}}}],["this.debuggui.ui",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debuggui.ui.addfolder('environment",{"_index":440,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui.ui.addfolder('fox",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.destroyablelist",{"_index":372,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["this.engine",{"_index":836,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":846,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.resize(size",{"_index":845,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.update(experiencetime",{"_index":840,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engineconsumer",{"_index":798,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.engineconsumer(this.experiencetime",{"_index":868,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.engineconsumer(this.getsize",{"_index":791,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.environment",{"_index":901,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":908,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":445,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":450,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":734,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.eventemitter.emit",{"_index":742,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.experiencetime",{"_index":871,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.current",{"_index":865,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.delta",{"_index":864,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.elapsed",{"_index":866,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.start",{"_index":867,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.floor",{"_index":896,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":906,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":899,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update(experiencetime",{"_index":903,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":907,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["this.getheight",{"_index":796,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.getpixelratio",{"_index":797,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.getwidth",{"_index":795,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.gltf",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":723,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.instance",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.dispose",{"_index":286,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":636,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":635,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":646,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":641,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":643,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":645,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":642,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":644,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":639,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":640,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":637,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":638,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":267,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":735,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.items.set(source.name",{"_index":733,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.material",{"_index":509,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":546,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.ngzone.runoutsideangular",{"_index":788,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.onerror(url",{"_index":678,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onload",{"_index":674,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onprogress(url",{"_index":677,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.rendererholder",{"_index":364,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":373,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourceloader",{"_index":898,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.destroy",{"_index":905,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.items.get('environmentmaptexture",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourceloader.items.get('foxmodel",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourceloader.items.get('grasscolortexture",{"_index":511,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.items.get('grassnormaltexture",{"_index":513,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.listen",{"_index":892,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":377,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.screensizeservice.getsize",{"_index":838,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.screensizeservice.setconsumer((size",{"_index":844,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.sourcelist",{"_index":713,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.sourceloaded(source",{"_index":724,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.startloading",{"_index":712,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.subscription",{"_index":891,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":904,"title":{},"body":{"classes/World.html":{}}}],["this.sunlight",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":456,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":727,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.textures.color",{"_index":503,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":531,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":532,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":534,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":535,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":505,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":536,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":538,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":870,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timeservice.setconsumer((experiencetime",{"_index":839,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.timeservice.tick",{"_index":841,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.ui",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.ui.destroy",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.updatablelist",{"_index":369,"title":{},"body":{"classes/Engine.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":370,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1132,"title":{},"body":{"license.html":{}}}],["three",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1062,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1065,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1063,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":60,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["three/src/animation/animationaction",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":633,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":630,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":238,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":200,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":577,"title":{},"body":{"interfaces/IListenable.html":{},"license.html":{}}}],["throughout",{"_index":1110,"title":{},"body":{"license.html":{}}}],["throw",{"_index":719,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":833,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":340,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["tiling",{"_index":525,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["timehandler",{"_index":1043,"title":{},"body":{"index.html":{}}}],["timeservice",{"_index":812,"title":{"injectables/TimeService.html":{}},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["title",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tone",{"_index":1011,"title":{},"body":{"index.html":{}}}],["tool",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":703,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["track",{"_index":786,"title":{},"body":{"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["trademark",{"_index":1329,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1310,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1195,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1245,"title":{},"body":{"license.html":{}}}],["tree",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":336,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["triggers",{"_index":767,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["true",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["twitter",{"_index":1076,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1373,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":382,"title":{},"body":{"classes/Engine.html":{}}}],["types",{"_index":1003,"title":{},"body":{"index.html":{}}}],["types/three",{"_index":954,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":973,"title":{},"body":{"index.html":{}}}],["ui",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{}}}],["unconditional",{"_index":1313,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1254,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1181,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1363,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1212,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1047,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1085,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1264,"title":{},"body":{"license.html":{}}}],["up",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["updatable",{"_index":354,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["updatable.update(experiencetime",{"_index":376,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":314,"title":{},"body":{"classes/Engine.html":{},"index.html":{}}}],["update",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["update(experiencetime",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["updated",{"_index":339,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":439,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["upon",{"_index":1118,"title":{},"body":{"license.html":{}}}],["url",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceLoader.html":{}}}],["url}.\\nloaded",{"_index":744,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["use",{"_index":978,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":507,"title":{},"body":{"classes/Floor.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISource.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["useful",{"_index":579,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["uses",{"_index":1026,"title":{},"body":{"index.html":{}}}],["using",{"_index":709,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["usual",{"_index":1058,"title":{},"body":{"index.html":{}}}],["util",{"_index":1019,"title":{},"body":{"index.html":{}}}],["v",{"_index":1219,"title":{},"body":{"license.html":{}}}],["v14",{"_index":952,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":383,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1376,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1240,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1223,"title":{},"body":{"license.html":{}}}],["via",{"_index":1031,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":828,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":822,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["viewer.component",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":807,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":806,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":799,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:19",{"_index":823,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:24",{"_index":813,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:38",{"_index":818,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:53",{"_index":815,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":287,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:11",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:30",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":305,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:102",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:110",{"_index":356,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:118",{"_index":348,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:23",{"_index":324,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:29",{"_index":337,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:35",{"_index":321,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:40",{"_index":331,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:45",{"_index":322,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:51",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:57",{"_index":338,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:62",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:67",{"_index":317,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":226,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:13",{"_index":237,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:35",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":269,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":620,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:18",{"_index":622,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:54",{"_index":626,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:62",{"_index":627,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:69",{"_index":625,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":555,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":561,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":575,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":584,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":588,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":592,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":614,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:11",{"_index":617,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/resource/isource.ts",{"_index":600,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/resource/resourceloader.ts",{"_index":648,"title":{},"body":{"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/resource/resourceloader.ts:111",{"_index":705,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:118",{"_index":684,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:125",{"_index":683,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:144",{"_index":698,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:156",{"_index":702,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:165",{"_index":690,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:21",{"_index":673,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:26",{"_index":668,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:31",{"_index":679,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:40",{"_index":672,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:45",{"_index":682,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:50",{"_index":664,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:63",{"_index":707,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/sources",{"_index":919,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/service/size/isize.ts",{"_index":596,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/service/size/screen",{"_index":750,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/iexperiencetime.ts",{"_index":564,"title":{},"body":{"interfaces/IExperienceTime.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts",{"_index":847,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts:17",{"_index":862,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:22",{"_index":850,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:34",{"_index":854,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:51",{"_index":851,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:59",{"_index":853,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:66",{"_index":859,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/world/environment.ts",{"_index":388,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":411,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":409,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":414,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":490,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":399,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":406,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":398,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":417,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":492,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":502,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":514,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":506,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":498,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":522,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":516,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":526,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:102",{"_index":552,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:117",{"_index":551,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:149",{"_index":554,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:156",{"_index":553,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:56",{"_index":549,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:61",{"_index":550,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:66",{"_index":548,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:71",{"_index":547,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":872,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":884,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":881,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":877,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":879,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":875,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:67",{"_index":889,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:76",{"_index":888,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"index.html":{}}}],["vii",{"_index":1241,"title":{},"body":{"license.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1177,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1332,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1247,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1255,"title":{},"body":{"license.html":{}}}],["want",{"_index":1032,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1097,"title":{},"body":{"license.html":{}}}],["way",{"_index":968,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":621,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":624,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1266,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1151,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1261,"title":{},"body":{"license.html":{}}}],["whole",{"_index":803,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":594,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["window.addeventlistener('resize",{"_index":789,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerheight",{"_index":793,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerwidth",{"_index":792,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.location.hash",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":869,"title":{},"body":{"injectables/TimeService.html":{}}}],["wish",{"_index":1024,"title":{},"body":{"index.html":{},"license.html":{}}}],["without",{"_index":1138,"title":{},"body":{"license.html":{}}}],["work",{"_index":1124,"title":{},"body":{"license.html":{}}}],["working",{"_index":981,"title":{},"body":{"index.html":{}}}],["works",{"_index":1099,"title":{},"body":{"license.html":{}}}],["world",{"_index":315,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["world(this.scene",{"_index":341,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":361,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1269,"title":{},"body":{"license.html":{}}}],["wrapping",{"_index":1000,"title":{},"body":{"index.html":{}}}],["writing",{"_index":1075,"title":{},"body":{"index.html":{}}}],["x",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   * @param debugGUI Tool to tweak the fox animations\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n              private readonly debugGUI: DebugGUI) {\n\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugGUI.ui) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder?.add(debugObject, 'playIdle');\n      this.debugFolder?.add(debugObject, 'playWalking');\n      this.debugFolder?.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, initialSize: ISize)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                                \n                                                        initialSize\n                                                  \n                                                        \n                                                                        ISize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initial viewport size to set up the aspect ratio.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:13\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:35\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../service/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   * @param initialSize Initial viewport size to set up the aspect ratio.\n   */\n  constructor(private readonly scene: Scene, initialSize: ISize) {\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                active\n                            \n                            \n                                    Readonly\n                                ui\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Default value : window.location.hash === '#debug'\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                        \n                    \n\n            \n                \n                    Status of the GUI based on the URL of the project (add #debug and reload to show the panel)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        ui\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:11\n                        \n                    \n\n            \n                \n                    lil-gui UI instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:30\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI implements IDestroyable {\n  /**\n   * lil-gui UI instance\n   */\n  readonly ui: GUI | undefined;\n  /**\n   * Status of the GUI based on the URL of the project (add #debug and reload to show the panel)\n   * @private\n   */\n  private readonly active = window.location.hash === '#debug';\n\n  /**\n   * Constructor\n   */\n  constructor() {\n    if (this.active) {\n      this.ui = new GUI();\n    }\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  destroy(): void {\n    if (this.active && this.ui) {\n      this.ui.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement, initialSize: ISize)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                                \n                                                        initialSize\n                                                  \n                                                        \n                                                                        ISize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initial size of the experience\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:35\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:45\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:23\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:67\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:40\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:62\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:29\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:57\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:51\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:118\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list and disposes\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:102\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:110\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './service/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { DebugGUI } from './debug/DebugGUI';\nimport { IExperienceTime } from './service/time/IExperienceTime';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder;\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder;\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder;\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   * @param initialSize Initial size of the experience\n   */\n  constructor(canvas: HTMLCanvasElement, initialSize: ISize\n  ) {\n    this.cameraHolder = new CameraHolder(this.scene, initialSize);\n    this.rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, canvas, initialSize);\n    this.controlsHolder = new ControlsHolder(this.cameraHolder.instance, canvas);\n\n    this.updatableList = [\n      this.rendererHolder,\n      this.controlsHolder,\n      this.world\n    ];\n\n    this.resizableList = [\n      this.cameraHolder,\n      this.rendererHolder,\n    ];\n\n    this.destroyableList = [\n      this.controlsHolder,\n      this.rendererHolder,\n      this.debugGUI\n    ];\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.updatableList.forEach((updatable) => updatable.update(experienceTime));\n  }\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list and disposes\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   * @param debugGUI\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n              private readonly debugGUI: DebugGUI\n  ) {\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugGUI.ui) {\n      this.debugFolder?.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   * @param debugGUI\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n              private readonly debugGUI: DebugGUI\n  ) {\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugGUI.ui) {\n      this.debugFolder?.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource that has loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceLoader Resource that has loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource loader that has loaded the GLTF file of the fox\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tool to tweak the fox animations\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:66\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:71\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:56\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:61\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:117\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:102\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:156\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:149\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    console.log('Play', name);\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n\n    console.log(newAction);\n    console.log(oldAction);\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   * @param debugGUI Tool to tweak the fox animations\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n              private readonly debugGUI: DebugGUI) {\n\n    if (this.debugGUI.ui) {\n      this.debugFolder = this.debugGUI.ui.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugGUI.ui) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder?.add(debugObject, 'playIdle');\n      this.debugFolder?.add(debugObject, 'playWalking');\n      this.debugFolder?.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExperienceTime.html":{"url":"interfaces/IExperienceTime.html","title":"interface - IExperienceTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExperienceTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/IExperienceTime.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the experience time.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            delta\n                                        \n                                \n                                \n                                        \n                                            elapsed\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time used to calculate the elapsed time and the delta time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elapsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elapsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start time of the application (at the instantiation of the experience).\nUsed to calculate the elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IExperienceTime {\n  /**\n   * Start time of the application (at the instantiation of the experience).\n   * Used to calculate the elapsed time from the start of the experience.\n   */\n  start: number;\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   */\n  delta: number;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   */\n  current: number;\n  /**\n   * Elapsed time from the start of the experience.\n   */\n  elapsed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../service/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:11\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n */\nexport interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement, initialSize: ISize)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:18\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                                \n                                                        initialSize\n                                                  \n                                                        \n                                                                        ISize\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Initial size of the viewport\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:18\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:69\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:54\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:62\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../service/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   * @param initialSize Initial size of the viewport\n   */\n  constructor(private readonly scene: Scene, private readonly camera: Camera, private readonly canvas: HTMLCanvasElement, initialSize: ISize) {\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceLoader.html":{"url":"classes/ResourceLoader.html","title":"class - ResourceLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ResourceLoader.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceLoader implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeight\n                            \n                            \n                                getPixelRatio\n                            \n                            \n                                getSize\n                            \n                            \n                                getWidth\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\nListen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:34\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \ngetPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSize\n                        \n                    \n                \n            \n            \n                \ngetSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:48\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWidth\n                        \n                    \n                \n            \n            \n                \ngetWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:27\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: (size: ISize) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:61\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\npixel ratio\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:68\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on resize\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { ISize } from './ISize';\n\n/**\n * Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenSizeService {\n  /**\n   * Constructor\n   * Listen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('resize', () => {\n        console.log('resize');\n        this.engineConsumer(this.getSize());\n      });\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  getSize(): ISize {\n    return {\n      width: this.getWidth(),\n      height: this.getHeight(),\n      pixelRatio: this.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\n   * pixel ratio\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: (size: ISize) => void) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on resize\n   */\n  private engineConsumer: (size: ISize) => void = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeService: TimeService, screenSizeService: ScreenSizeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/three-viewer.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the animation loop and the time of the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the screen resize for the 3D experience engine\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:53\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:38\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:19\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:24\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\nimport { TimeService } from './engine/service/time/time.service';\nimport { ScreenSizeService } from './engine/service/size/screen-size.service';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Constructor\n   * @param timeService Service that handles the animation loop and the time of the 3D experience engine\n   * @param screenSizeService Service that handles the screen resize for the 3D experience engine\n   */\n  constructor(private readonly timeService: TimeService,\n              private readonly screenSizeService: ScreenSizeService) {}\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement, this.screenSizeService.getSize());\n\n    this.timeService.setConsumer((experienceTime) => this.engine?.update(experienceTime));\n    this.timeService.tick(); //First impulsion of the tick loop\n\n    this.screenSizeService.setConsumer((size) => this.engine?.resize(size));\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/time.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the time of the 3D experience and the main loop outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                    Readonly\n                                experienceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExperienceTime\n                            \n                            \n                                setConsumer\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:22\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExperienceTime\n                        \n                    \n                \n            \n            \n                \ngetExperienceTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:51\n                \n            \n\n\n            \n                \n                    Gets the time object of the experience that contains the information like delta time, elapsed time from the start\nof the experience.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: (experienceTime: IExperienceTime) => void)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:59\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n            \n                \ntick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:34\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\nExecuted outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:66\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on tick\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        experienceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IExperienceTime\n\n                    \n                \n                \n                    \n                        Default value : {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:17\n                        \n                    \n\n            \n                \n                    Bundle to keep information about the time of the experience.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { IExperienceTime } from './IExperienceTime';\n\n\n/**\n * Service that handles the time of the 3D experience and the main loop outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  /**\n   * Bundle to keep information about the time of the experience.\n   * @private\n   */\n  private readonly experienceTime: IExperienceTime = {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(private readonly ngZone: NgZone) {\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   * Executed outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n   */\n  tick() {\n    this.ngZone.runOutsideAngular(() => {\n      const currentTime = Date.now();\n      this.experienceTime.delta = currentTime - this.experienceTime.current;\n      this.experienceTime.current = currentTime;\n\n      this.experienceTime.elapsed = this.experienceTime.current - this.experienceTime.start;\n\n      this.engineConsumer(this.experienceTime);\n      window.requestAnimationFrame(() => this.tick());\n    });\n  }\n\n  /**\n   * Gets the time object of the experience that contains the information like delta time, elapsed time from the start\n   * of the experience.\n   */\n  getExperienceTime() {\n    return { ...this.experienceTime };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: (experienceTime: IExperienceTime) => void): void {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on tick\n   */\n  private engineConsumer: (experienceTime: IExperienceTime) => void = () => {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceLoader(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource loader that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:76\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:67\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { Floor } from './Floor';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource loader that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceLoader = new ResourceLoader(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceLoader.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceLoader);\n                              this.fox = new Fox(scene,\n                                this.resourceLoader,\n                                debugGUI);\n                              this.environment = new Environment(scene, this.resourceLoader, debugGUI);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    if (this.fox) {\n      this.fox.update(experienceTime);\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceLoader.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (14/14)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ResourceLoader.ts\n            \n            class\n            ResourceLoader\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/IExperienceTime.ts\n            \n            interface\n            IExperienceTime\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            lil-gui : ^0.16.1\n        \n            rxjs : ~7.5.0\n        \n            three : ^0.141.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng-three-starter-kit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStack\n\nAngular v14\nThreejs (r141)\n@types/three (r141)\n\nSpecial Thanks\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\nExecutes the animation loop and the resize outside the NgZone to avoid performance issues due to Angular's Change\ndetection\n\nDocumentation\nEngine\nHeart of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene, renderer, ...).\nIt is listening to some handlers to communicate the behaviour to follow to its \"children\".\nHolders\nA holder is a class wrapping a ThreeJS instance. It contains the instantiation of the ThreeJS component with the\nsettings considered for.\nCamera Holder\nHolder of the perspective camera chosen for the template. Can be easily switched to other camera types.\nControl Holder\nHolder for the OrbitControls chosen for the template. Can be switched to other types. Damping is enabled.\nRenderer Holder\n\nPhysically correct lights enabled\nOutput encoding to sRGB\nReinhard tone mapping ON\nShadow map (PCF Shadow Map) enabled\nThe screen resize and the pixel ratio is handled\n\nServices\nThese services do the heavy lifting of the NgZone management that preserves the performance of the Angular application.\nScreenSizeService\nUtil to handle the screen size.\nUpdates on viewport resizing.\nIt executes the consumer callback of the engine while providing it the new size and pixel ratio\nTimeService\nUtil to handle the common tick loop.\nIt executes the consumer callback of the engine while providing it the time information of the current new frame.\nLoader\nResourceLoader\nUtil to handle GLTF models, textures, and cube textures.\n(It is extensible as you wish)\nLoads all the content of the sources-list.ts.\nIt uses a Loading manager (different from the default one).\nInterfaces\nUseful contracts to process your objects in mass (via a for loop for instance),\ndepending on the behaviour you want for them.\nIDestroyable\nContract that marks the class that implements it as destroyable (need to dispose of elements (geometries,\nmaterial...)). Add your objects in your Engine \"destroyableList\" and a loop will take care to call each destroy()\nmethod when the ngOnDestroy() is triggered by the viewer component.\nIListenable\nContract that marks the class that implements it as listenable.\nThe listen method returns an Observable.\nMostly used for the handler to notify other objects via their EventEmitter.\nIResizable\nContract that marks the class that implements it as resizable.\nAdd your objects in your Engine \"resizableList\", this will be added to the callback that is called by the\nScreenSizeService\nIUpdatable\nContract that marks the class that implements it as updatable.\nAdd your objects in your Engine \"updatableList\" and a loop will take care to call each update()\nwhen the TimeHandler loop notifies the Engine of a new frame.\nWorld\nHandles the floor, the fox, the environment.\nIncoming Features\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\n\nNote\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter\nYou can reach me on Twitter: @axiom_3d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Item   (src/.../ResourceLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ResourceLoader.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
