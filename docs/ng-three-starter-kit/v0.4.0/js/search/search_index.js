var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AnimationHolder.html",[0,0.167,1,2.186]],["body/classes/AnimationHolder.html",[0,0.177,1,3.308,2,0.794,3,0.244,4,0.244,5,0.391,6,0.382,7,1.726,8,0.491,9,2.105,10,4.054,11,1.471,12,0.166,13,0.499,14,1.594,15,4.608,16,0.649,17,3.949,18,1.183,19,2.347,20,3.949,21,2.549,22,4.231,23,0.656,24,2.347,25,0.887,26,0.03,27,1.039,28,0.382,29,0.823,30,4.443,31,2.347,32,2.96,33,1.973,34,0.794,35,0.856,36,2.347,37,2.96,38,1.978,39,2.925,40,2.96,41,2.793,42,2.347,43,2.96,44,2.094,45,2.591,46,2.96,47,1.911,48,2.293,49,0.397,50,1.056,51,0.817,52,1.992,53,1.273,54,3.553,55,1.616,56,1.856,57,0.591,58,0.995,59,1.273,60,1.726,61,2.155,62,1.077,63,1.973,64,1.494,65,1.273,66,1.108,67,0.922,68,1.494,69,1.395,70,1.973,71,1.235,72,1.973,73,1.846,74,2.96,75,1.973,76,1.973,77,2.96,78,1.973,79,1.973,80,1.973,81,1.395,82,1.542,83,1.542,84,3.315,85,0.244,86,0.738,87,1.911,88,1.973,89,1.565,90,1.273,91,1.726,92,1.973,93,1.273,94,1.395,95,1.077,96,1.168,97,3.553,98,1.542,99,1.168,100,1.077,101,1.168,102,0.686,103,2.315,104,1.542,105,2.315,106,1.973,107,1.973,108,1.973,109,1.973,110,1.973,111,1.973,112,0.761,113,1.973,114,1.973,115,1.973,116,1.494,117,1.616,118,1.726,119,1.973,120,1.542,121,1.542,122,1.973,123,1.973,124,1.973,125,1.973,126,2.315,127,1.973,128,1.973,129,1.395,130,1.273,131,1.973,132,0.922,133,1.973,134,1.726,135,1.273,136,1.973,137,2.96,138,1.973,139,1.973,140,1.973,141,1.973,142,1.973,143,1.973,144,1.973,145,1.973,146,2.96,147,1.973,148,2.96,149,1.973,150,2.96,151,1.973,152,3.553,153,1.168,154,1.973,155,0.922,156,1.616,157,1.273,158,0.995,159,1.395,160,1.973,161,1.973,162,1.542,163,0.794,164,1.973,165,0.015,166,0.015]],["title/components/AppComponent.html",[167,1.978,168,1.805]],["body/components/AppComponent.html",[0,0.207,3,0.429,4,0.429,5,0.381,8,0.478,12,0.291,13,0.737,23,0.639,26,0.029,27,0.958,28,0.335,34,1.395,35,1.502,41,2.45,51,0.583,57,1.436,85,0.429,90,2.822,165,0.022,166,0.022,167,3.671,168,3.248,169,3.419,170,3.031,171,3.464,172,3.031,173,3.464,174,3.464,175,3.093,176,3.935,177,3.827,178,3.464,179,5.033,180,5.033,181,4.373,182,5.7,183,4.373,184,5.201,185,5.19,186,4.373,187,4.373,188,4.373,189,4.12,190,1.891,191,3.464,192,3.419,193,2.822,194,3.031,195,5.033,196,3.464,197,3.464,198,2.235,199,2.45,200,3.464,201,3.464]],["title/modules/AppModule.html",[202,2.796,203,2.186]],["body/modules/AppModule.html",[0,0.22,3,0.457,4,0.457,5,0.406,26,0.029,51,0.867,57,1.105,85,0.457,165,0.023,166,0.023,168,3.642,177,3.979,190,2.013,198,3.474,203,4.342,204,3.227,205,3.555,206,3.687,207,3.687,208,3.687,209,4.546,210,3.687,211,2.608,212,4.386,213,5.408,214,5.408,215,5.408,216,3.687,217,3.227,218,4.386,219,3.227,220,4.386,221,4.386,222,4.386]],["title/classes/CameraHolder.html",[0,0.167,223,2.186]],["body/classes/CameraHolder.html",[0,0.177,2,1.197,3,0.368,4,0.368,5,0.327,6,0.46,8,0.615,12,0.25,13,0.8,14,1.533,16,0.867,18,1.334,23,0.822,25,1.186,26,0.029,27,0.867,28,0.431,29,1.1,49,0.599,50,0.941,51,0.833,56,2.189,57,0.89,71,1.1,73,1.389,85,0.368,86,1.481,96,2.345,100,2.161,102,1.033,112,1.145,165,0.02,166,0.02,223,3.095,224,2.971,225,3.095,226,4.709,227,4.122,228,3.958,229,2.873,230,3.191,231,2.345,232,1.918,233,4.709,234,2.219,235,5.647,236,3.095,237,2.591,238,3.535,239,4.709,240,3.095,241,3.282,242,4.709,243,3.958,244,4.709,245,2.6,246,2.323,247,2.6,248,1.918,249,2.971,250,2.6,251,2.971,252,2.971,253,2.323,254,3.535,255,3.535,256,2.971,257,3.535,258,2.971,259,3.535,260,3.535,261,3.535,262,3.535,263,3.535,264,3.535,265,2.971,266,3.535]],["title/classes/ControlsHolder.html",[0,0.167,267,2.186]],["body/classes/ControlsHolder.html",[0,0.18,2,1.211,3,0.373,4,0.373,5,0.331,6,0.481,8,0.551,12,0.253,13,0.672,14,1.603,16,0.875,18,1.342,23,0.881,25,0.901,26,0.029,27,0.659,28,0.387,29,0.836,49,0.804,50,1.065,51,0.804,57,0.901,64,2.26,65,1.941,66,1.676,67,1.406,71,1.109,85,0.373,86,1.493,89,1.603,102,1.046,112,0.774,132,1.406,163,1.921,165,0.02,166,0.02,192,3.12,193,2.576,199,2.823,225,3.12,227,4.259,228,3.991,230,3.36,234,1.865,253,2.352,267,3.12,268,3.008,269,6.193,270,3.022,271,3.578,272,4.07,273,3.919,274,4.747,275,4.747,276,5.102,277,3.578,278,2.823,279,3.578,280,4.747,281,3.578,282,3.578,283,3.578,284,3.578,285,3.008]],["title/classes/DebugGUI.html",[0,0.167,58,1.411]],["body/classes/DebugGUI.html",[0,0.171,2,1.151,3,0.354,4,0.354,5,0.315,6,0.473,8,0.395,12,0.24,13,0.65,16,0.845,23,0.863,26,0.029,28,0.277,34,1.553,49,1.035,50,0.917,51,0.481,58,2.537,61,3.02,62,2.891,82,3.015,85,0.354,89,1.409,93,3.245,94,2.728,95,2.105,99,2.89,112,0.735,132,1.802,135,2.489,163,1.882,165,0.019,166,0.019,176,3.015,230,3.418,253,3.015,286,2.857,287,2.284,288,3.512,289,5.559,290,5.559,291,3.399,292,5.028,293,4.673,294,3.399,295,3.375,296,3.399,297,4.587,298,4.587,299,4.587,300,4.587,301,3.399,302,4.587,303,3.856,304,3.856,305,3.375,306,3.375,307,4.587,308,4.587,309,2.817,310,5.192,311,3.399]],["title/classes/Engine.html",[0,0.167,312,1.526]],["body/classes/Engine.html",[0,0.092,2,0.623,3,0.192,4,0.192,5,0.17,6,0.483,8,0.523,9,1.453,11,1.207,12,0.13,13,0.413,14,1.732,16,0.538,18,0.914,23,0.91,25,1.207,26,0.029,27,0.761,28,0.409,29,0.964,34,1.228,35,1.641,38,1.147,44,1.736,47,3.096,49,0.699,50,1.041,51,0.808,55,1.339,56,1.986,57,0.464,58,2.032,59,0.999,61,1.339,62,1.339,64,1.91,65,0.999,66,1.416,67,0.723,68,1.751,69,1.094,71,0.964,73,1.147,85,0.192,86,1.299,89,1.775,95,1.339,100,0.845,112,1.252,116,2.032,117,2.198,129,1.094,130,0.999,135,1.584,155,1.622,156,1.895,157,1.584,158,1.238,159,1.736,163,1.398,165,0.012,166,0.012,169,1.919,193,1.584,199,2.455,223,2.714,225,3.149,227,2.959,229,2.443,230,1.584,231,1.453,234,2.047,236,1.919,237,1.895,241,2.24,245,1.354,246,1.21,267,2.714,270,2.056,272,3.149,273,2.669,276,3.471,278,1.736,295,2.147,312,1.339,313,1.547,314,4.129,315,2.919,316,2.454,317,2.919,318,3.471,319,2.959,320,3.628,321,2.714,322,3.628,323,3.628,324,2.455,325,2.454,326,2.919,327,2.919,328,2.454,329,2.919,330,1.84,331,1.84,332,2.919,333,1.84,334,5.037,335,3.525,336,2.919,337,2.919,338,2.454,339,2.454,340,1.84,341,2.919,342,1.736,343,1.84,344,2.454,345,2.599,346,2.919,347,1.84,348,1.84,349,2.454,350,1.919,351,2.919,352,2.919,353,1.84,354,2.919,355,1.238,356,2.304,357,2.919,358,1.453,359,1.84,360,2.919,361,2.919,362,2.919,363,3.785,364,1.84,365,2.454,366,3.312,367,2.919,368,2.919,369,2.919,370,0.494,371,2.919,372,1.84,373,2.147,374,2.919,375,4.129,376,1.736,377,1.736,378,1.84,379,2.454,380,1.84,381,1.84,382,1.84,383,1.84,384,1.84,385,2.919,386,1.84,387,4.129,388,1.84,389,1.84,390,3.628,391,1.84,392,1.84,393,1.84,394,1.84,395,1.84,396,1.84,397,1.84,398,1.84,399,1.84,400,1.84,401,1.547,402,1.84,403,1.354,404,1.84,405,1.84,406,1.84,407,1.84,408,1.84,409,2.919,410,1.547,411,1.84,412,1.84,413,1.84]],["title/classes/Environment.html",[0,0.167,414,1.526]],["body/classes/Environment.html",[0,0.107,2,0.721,3,0.222,4,0.222,5,0.197,6,0.457,8,0.462,12,0.15,13,0.751,14,1.582,16,0.602,18,1.003,23,0.849,25,0.824,26,0.029,27,0.602,28,0.393,29,0.764,38,1.285,49,0.817,50,1.017,51,0.683,52,2.32,53,1.155,55,1.501,56,2.185,57,0.536,58,0.903,59,1.155,61,2.05,62,0.977,66,1.252,67,0.836,71,0.93,73,0.836,85,0.222,86,1.029,89,1.685,93,1.774,94,1.945,95,1.501,98,2.617,99,1.628,100,1.501,102,0.622,103,2.149,104,1.399,105,2.617,112,0.46,116,1.895,117,2.05,120,2.149,121,2.937,126,1.399,129,1.266,130,2.616,132,1.756,153,1.06,155,0.836,162,2.149,163,1.513,165,0.014,166,0.014,232,1.155,234,1.285,287,1.628,288,2.16,306,2.406,309,1.155,355,1.387,356,1.501,358,1.628,370,0.361,403,1.566,414,2.9,415,1.566,416,1.895,417,2.749,418,4.024,419,3.347,420,3.347,421,3.756,422,3.756,423,3.27,424,3.27,425,2.129,426,2.617,427,3.284,428,2.406,429,3.756,430,3.756,431,3.347,432,2.129,433,3.756,434,4.279,435,2.129,436,2.749,437,2.129,438,2.406,439,2.749,440,2.129,441,2.749,442,4.016,443,2.129,444,2.749,445,3.287,446,2.749,447,4.456,448,2.406,449,2.749,450,2.749,451,2.368,452,2.749,453,2.749,454,2.749,455,2.406,456,2.149,457,2.336,458,1.06,459,1.399,460,1.789,461,1.789,462,1.789,463,2.749,464,1.789,465,1.789,466,1.789,467,2.149,468,1.789,469,1.789,470,1.789,471,1.789,472,1.789,473,1.789,474,2.749,475,1.789,476,1.789,477,1.789,478,1.789,479,1.789,480,1.789,481,1.789,482,1.789,483,1.789,484,1.789,485,1.789,486,1.789,487,1.789,488,1.789,489,1.789,490,2.749,491,1.789,492,4.053,493,3.347,494,1.789,495,1.789,496,3.347,497,3.347,498,3.347,499,1.789,500,1.789,501,1.789,502,1.789,503,1.789,504,2.749,505,2.749,506,1.789,507,1.789,508,1.789,509,1.789,510,1.789,511,1.789]],["title/interfaces/EnvironmentMapHolder.html",[370,0.563,426,2.186]],["body/interfaces/EnvironmentMapHolder.html",[0,0.125,3,0.26,4,0.26,5,0.231,6,0.3,8,0.29,12,0.176,13,0.765,14,1.402,16,0.679,18,0.628,23,0.387,26,0.029,28,0.3,38,0.98,49,0.624,50,0.967,51,0.731,52,2.053,53,1.353,55,1.69,56,2.143,57,0.628,58,1.057,59,1.353,61,2.01,62,1.144,66,1.159,67,0.98,71,1.023,73,0.98,85,0.26,86,0.784,89,1.591,93,1.353,94,1.483,95,1.144,98,1.639,99,1.241,100,1.144,102,0.729,103,2.421,104,1.639,105,2.88,112,0.539,116,1.563,117,1.69,120,1.639,121,2.421,126,1.639,129,1.483,130,2.801,132,1.722,153,1.834,155,1.447,162,1.639,163,0.844,165,0.016,166,0.016,234,0.98,287,1.241,288,1.353,306,1.834,309,1.353,355,1.057,356,1.144,358,1.241,370,0.422,403,1.834,414,2.904,415,1.834,416,1.563,417,2.096,418,3.56,419,2.096,420,2.096,421,2.096,422,2.096,426,2.88,427,3.235,428,1.834,429,3.097,430,3.097,431,3.097,433,3.097,434,3.683,436,2.096,438,1.834,439,2.096,441,2.096,442,3.974,444,2.096,445,2.71,446,2.096,447,5.012,448,1.834,449,2.096,450,2.096,451,2.605,452,3.097,453,3.097,454,3.097,455,2.71,456,2.421,457,2.808,458,2.181,459,2.421,460,3.097,461,3.097,462,3.097,463,4.341,464,2.096,465,2.096,466,2.096,467,2.421,468,2.096,469,2.096,470,2.096,471,2.096,472,2.096,473,2.096,474,3.097,475,2.096,476,2.096,477,2.096,478,2.096,479,2.096,480,2.096,481,2.096,482,2.096,483,2.096,484,2.096,485,2.096,486,2.096,487,2.096,488,2.096,489,2.096,490,3.097,491,2.096,492,4.341,493,3.683,494,2.096,495,2.096,496,3.683,497,3.683,498,3.683,499,2.096,500,2.096,501,2.096,502,2.096,503,2.096,504,3.097,505,3.097,506,2.096,507,2.096,508,2.096,509,2.096,510,2.096,511,2.096,512,0.98,513,2.493]],["title/classes/Floor.html",[0,0.167,514,1.978]],["body/classes/Floor.html",[0,0.129,2,0.867,3,0.267,4,0.267,5,0.237,6,0.481,8,0.436,12,0.181,13,0.532,14,1.651,16,0.692,18,1.121,23,0.898,25,0.645,26,0.029,27,0.472,28,0.444,29,0.598,33,2.154,34,1.66,35,1.788,38,1.927,49,0.754,50,0.98,51,0.694,52,2.454,53,1.39,55,2.753,56,2.104,57,0.645,66,1.4,67,1.007,71,0.878,83,2.47,85,0.267,86,1.182,89,1.735,101,1.871,102,0.749,112,1.18,118,2.765,132,1.007,163,1.66,165,0.016,166,0.016,232,1.39,234,2.273,247,1.885,355,1.594,379,3.16,427,2.66,438,2.765,442,3.707,451,2.916,455,3.841,456,2.47,457,2.588,514,3.856,515,2.154,516,3.16,517,4.741,518,4.475,519,4.904,520,4.904,521,3.758,522,4.451,523,3.758,524,3.758,525,2.562,526,3.758,527,3.758,528,3.758,529,2.562,530,1.871,531,3.758,532,3.758,533,4.39,534,3.758,535,3.742,536,3.758,537,2.562,538,2.765,539,2.562,540,3.758,541,3.758,542,3.758,543,3.758,544,3.758,545,2.562,546,3.758,547,3.758,548,3.758,549,2.562,550,3.16,551,5.222,552,2.562,553,2.562,554,2.562,555,2.562,556,3.758,557,2.562,558,2.562,559,2.562,560,2.562,561,2.562,562,2.562,563,2.562,564,2.562,565,2.562,566,2.562,567,2.562,568,2.562,569,2.562]],["title/classes/Fox.html",[0,0.167,84,1.805]],["body/classes/Fox.html",[0,0.162,1,3.458,2,0.706,3,0.217,4,0.217,5,0.442,6,0.464,7,1.534,8,0.456,9,1.957,10,3.743,11,1.538,12,0.147,13,0.456,14,1.666,15,3.304,16,0.593,17,1.753,18,1.114,20,2.706,21,1.746,22,3.304,23,0.865,25,0.811,26,0.029,27,0.88,28,0.411,29,0.752,30,4.015,32,1.753,37,1.753,38,2.067,39,3.056,40,1.753,41,1.914,43,1.753,44,1.24,45,1.534,46,1.753,47,1.131,48,2.133,49,0.749,50,1.114,51,0.79,52,2.305,53,1.131,54,4.015,55,1.477,56,2.018,57,0.525,58,0.884,59,1.131,60,1.534,61,2.316,62,0.957,63,1.753,64,1.667,65,1.131,66,1.236,67,0.819,68,1.875,69,1.24,70,1.753,71,1.179,72,1.753,73,1.737,74,2.706,75,1.753,76,1.753,77,2.706,78,1.753,79,1.753,80,1.753,81,1.24,82,1.37,83,2.115,84,3.505,85,0.217,86,1.012,87,2.398,88,2.706,89,1.679,90,1.746,91,2.368,92,3.304,93,1.746,94,1.914,95,1.477,96,1.603,97,4.243,98,2.584,99,1.603,100,1.477,101,1.603,102,0.609,103,2.115,104,1.37,105,2.115,106,1.753,107,1.753,108,1.753,109,1.753,110,1.753,111,1.753,112,0.696,113,1.753,114,1.753,115,1.753,116,1.875,117,2.028,118,2.368,119,2.706,120,2.115,121,2.115,122,2.706,123,2.706,124,3.716,125,1.753,126,2.115,127,1.753,128,1.753,129,1.24,130,1.131,131,1.753,132,0.819,133,2.706,134,2.368,135,1.746,136,3.716,137,2.706,138,1.753,139,1.753,140,1.753,141,1.753,142,1.753,143,1.753,144,1.753,145,1.753,146,2.706,147,1.753,148,2.706,149,1.753,150,2.706,151,1.753,152,3.304,153,1.603,154,2.706,155,1.265,156,2.028,157,1.746,158,1.365,159,1.914,160,1.753,161,1.753,162,2.115,163,1.496,164,1.753,165,0.014,166,0.014,232,1.131,270,1.603,570,3.219,571,2.085,572,2.085,573,2.085,574,2.085,575,2.085,576,2.085,577,2.085]],["title/interfaces/IDestroyable.html",[66,1.046,370,0.563]],["body/interfaces/IDestroyable.html",[3,0.495,4,0.495,5,0.44,6,0.462,8,0.552,12,0.336,16,1.046,23,0.738,26,0.028,49,0.805,50,1.135,66,1.786,85,0.495,163,2.13,165,0.024,166,0.024,278,3.377,335,3.498,339,4.774,356,2.182,358,2.828,370,0.805,512,1.868,578,3.997,579,2.827,580,4.754,581,2.579,582,3.997,583,3.997,584,4.754,585,5.68,586,5.68]],["title/interfaces/IExperienceTime.html",[68,1.411,370,0.563]],["body/interfaces/IExperienceTime.html",[3,0.408,4,0.408,5,0.362,6,0.319,8,0.455,11,1.144,12,0.277,13,0.713,21,3.478,26,0.029,28,0.478,68,2.135,85,0.408,134,3.704,156,2.31,158,2.839,165,0.021,166,0.021,176,3.309,316,4.232,342,3.851,370,0.663,458,3.291,512,1.538,530,3.097,587,3.291,588,5.388,589,5.488,590,4.803,591,5.875,592,5.034,593,5.034,594,4.232,595,5.034,596,5.034]],["title/interfaces/IListenable.html",[370,0.563,597,2.186]],["body/interfaces/IListenable.html",[3,0.467,4,0.467,5,0.415,6,0.446,8,0.521,12,0.317,16,1.01,23,0.696,26,0.029,49,1.003,51,0.635,85,0.467,165,0.023,166,0.023,356,2.515,370,0.759,416,2.616,512,1.761,579,3.259,597,3.603,598,3.768,599,6.168,600,4.032,601,5.479,602,4.608,603,4.736,604,5.481,605,5.481,606,5.481,607,4.483,608,3.603,609,5.481,610,2.946]],["title/interfaces/IPointerSensible.html",[319,2.186,370,0.563]],["body/interfaces/IPointerSensible.html",[3,0.483,4,0.483,5,0.429,6,0.377,8,0.538,12,0.328,13,0.792,26,0.029,28,0.377,51,0.656,85,0.483,86,1.759,165,0.024,166,0.024,319,3.677,325,5.245,345,3.385,356,2.567,365,4.702,366,4.115,370,0.785,401,4.702,512,1.821,579,3.326,611,3.897,612,4.702,613,4.115,614,3.71,615,5.594,616,4.635]],["title/interfaces/IResizable.html",[229,1.805,370,0.563]],["body/interfaces/IResizable.html",[3,0.438,4,0.438,5,0.389,6,0.429,8,0.612,11,1.54,12,0.297,16,0.971,23,0.653,25,1.059,26,0.029,27,0.775,28,0.342,29,0.982,49,0.712,50,1.053,51,0.595,71,0.982,85,0.438,112,1.37,165,0.022,166,0.022,172,3.876,229,2.858,231,3.155,236,3.463,237,2.767,240,3.463,241,3.438,246,2.764,344,4.429,345,2.858,370,0.712,373,3.876,376,3.587,377,3.587,416,2.558,512,1.652,579,3.133,617,3.535,618,4.429,619,2.623,620,2.623,621,4.205,622,5.269,623,3.876,624,3.876]],["title/interfaces/ISize.html",[237,1.526,370,0.563]],["body/interfaces/ISize.html",[3,0.472,4,0.472,5,0.42,6,0.369,8,0.526,11,1.855,12,0.32,13,0.781,26,0.029,28,0.484,85,0.472,165,0.023,166,0.023,237,2.532,241,2.459,370,0.768,376,3.281,377,3.281,458,3.307,512,1.781,623,4.748,624,4.748,625,3.81,626,5.205,627,4.06]],["title/interfaces/ISource.html",[370,0.563,628,1.978]],["body/interfaces/ISource.html",[3,0.414,4,0.615,5,0.519,6,0.324,8,0.462,11,1.162,12,0.281,13,0.72,26,0.029,27,1.151,28,0.536,29,1.38,38,1.562,39,2.791,41,3.862,48,2.157,85,0.529,101,3.041,165,0.022,166,0.022,287,1.979,370,0.673,457,2.711,512,1.562,530,2.942,628,3.024,629,2.925,630,3.976,631,4.73,632,4.347,633,4.274,634,5.909,635,5.085,636,4.274,637,4.274,638,3.685,639,4.347,640,3.976,641,3.342,642,3.342]],["title/interfaces/IUpdatable.html",[64,1.411,370,0.563]],["body/interfaces/IUpdatable.html",[0,0.27,3,0.453,4,0.453,5,0.403,6,0.438,8,0.625,9,2.679,11,1.572,12,0.307,16,0.991,23,0.675,25,1.096,26,0.029,27,0.801,28,0.354,29,1.016,49,0.736,50,1.075,51,0.616,64,2.282,68,2.589,69,2.586,71,1.016,85,0.453,153,3.039,155,2.114,156,2.932,157,2.919,158,2.282,159,3.199,165,0.023,166,0.023,270,2.679,303,4.522,370,0.736,416,2.282,512,1.709,579,3.199,618,4.522,620,2.679,643,3.656,644,5.38,645,4.522,646,4.349,647,5.38]],["title/injectables/PointerService.html",[648,1.656,649,1.978]],["body/injectables/PointerService.html",[0,0.167,3,0.346,4,0.346,5,0.308,6,0.449,8,0.525,12,0.235,13,0.64,14,0.903,16,0.833,18,1.294,23,0.797,25,1.139,26,0.029,27,0.833,28,0.418,29,1.056,34,1.126,35,1.213,49,0.563,50,0.665,51,0.64,71,0.777,85,0.346,89,1.394,90,1.805,96,2.743,102,0.972,116,1.918,165,0.019,166,0.019,175,3.276,190,1.527,211,2.688,312,2.839,345,3.224,363,2.797,530,2.251,581,2.453,613,4.551,614,3.861,619,2.251,620,2.251,648,2.251,649,2.688,650,2.187,651,2.797,652,2.688,653,3.906,654,4.632,655,3.534,656,3.778,657,3.326,658,2.448,659,4.168,660,3.327,661,3.801,662,3.801,663,4.521,664,3.621,665,4.521,666,3.326,667,3.327,668,3.326,669,3.326,670,2.971,671,3.326,672,3.326,673,3.326,674,3.327,675,3.326,676,2.971,677,3.326,678,3.326,679,2.448,680,2.448,681,2.448,682,3.327,683,3.327,684,2.448]],["title/classes/RendererHolder.html",[0,0.167,321,2.186]],["body/classes/RendererHolder.html",[0,0.143,2,0.963,3,0.296,4,0.296,5,0.263,6,0.461,8,0.548,11,1.185,12,0.201,13,0.574,14,1.536,16,0.747,18,1.19,23,0.844,25,1.021,26,0.029,27,0.747,28,0.385,29,0.947,49,0.8,50,1.087,51,0.858,56,2.173,57,0.717,64,2.003,65,1.543,66,1.486,67,1.118,71,1.202,73,1.118,85,0.296,86,1.275,89,1.536,102,0.831,112,1.259,116,2.184,117,1.86,132,1.856,156,1.86,163,1.743,165,0.017,166,0.017,192,2.664,193,2.199,199,2.411,225,2.664,227,4.038,229,2.562,230,2.952,231,2.018,232,1.543,234,2.223,236,2.664,237,2.362,240,3.384,241,3.069,245,2.092,246,1.869,247,2.092,248,1.543,249,2.391,250,2.092,251,2.391,252,2.391,253,1.869,256,2.391,265,2.391,270,2.563,272,3.912,273,3.475,278,2.411,285,2.391,318,5.003,321,2.664,355,1.719,373,2.982,376,2.411,377,2.411,456,2.664,467,1.869,530,2.018,685,2.391,686,4.328,687,4.054,688,5.148,689,5.148,690,2.844,691,2.844,692,2.844,693,4.054,694,4.054,695,2.844,696,4.054,697,4.054,698,2.844,699,2.844,700,2.844,701,2.844,702,2.844,703,2.844,704,2.844,705,2.844,706,2.844,707,2.844,708,2.844,709,2.844,710,2.844,711,2.844,712,2.844]],["title/classes/ResourceLoader.html",[0,0.167,52,1.411]],["body/classes/ResourceLoader.html",[0,0.085,2,0.57,3,0.175,4,0.58,5,0.506,6,0.474,8,0.5,12,0.119,13,0.385,14,1.639,16,0.501,18,0.861,23,0.891,25,0.989,26,0.029,27,0.723,28,0.411,29,0.917,34,1.64,35,1.679,38,2.406,39,2.144,41,3.18,47,1.475,49,0.882,50,1.092,51,0.686,52,1.153,55,1.247,56,0.57,57,0.424,60,1.239,66,1.075,67,0.662,71,1.132,73,0.662,85,0.283,86,0.855,87,2.825,89,1.741,91,1.239,101,2.511,102,0.492,112,1.272,130,0.914,155,0.662,163,1.329,165,0.012,166,0.012,190,0.773,234,1.068,243,2.285,278,1.617,287,0.838,305,4.166,309,0.914,345,2.129,356,0.773,358,1.954,414,1.247,416,1.45,427,2.736,445,2,448,2.515,457,1.976,458,2.86,459,1.787,518,2.887,597,2.247,601,3.62,603,2.887,610,1.107,619,1.354,620,1.354,628,2.999,631,2,632,1.239,638,2.247,639,1.239,655,2.739,713,1.239,714,6.194,715,2.719,716,3.924,717,3.924,718,4.605,719,3.924,720,5.207,721,4.605,722,3.924,723,2.719,724,3.924,725,2.719,726,2.719,727,3.924,728,1.684,729,2.719,730,2.247,731,3.388,732,2.719,733,1.684,734,2.719,735,3.924,736,2.719,737,1.684,738,1.684,739,2.719,740,5.207,741,5.207,742,2.719,743,2.719,744,1.684,745,5.043,746,2.719,747,1.684,748,1.684,749,1.684,750,2.719,751,2.719,752,2.285,753,3.924,754,2.719,755,1.684,756,4.605,757,3.62,758,2.719,759,5.113,760,2.719,761,3.168,762,1.684,763,2.719,764,2.719,765,2.719,766,1.684,767,2.719,768,2.719,769,1.684,770,2.719,771,1.684,772,2.719,773,2.719,774,2.719,775,1.684,776,1.684,777,1.684,778,1.684,779,1.684,780,2.874,781,1.416,782,3.924,783,3.299,784,3.419,785,3.419,786,3.419,787,1.684,788,3.419,789,3.419,790,1.416,791,1.684,792,1.416,793,2.719,794,1.684,795,1.684,796,1.684,797,1.684,798,1.684,799,1.684,800,1.684,801,1.684,802,1.684,803,1.684,804,1.684,805,1.684,806,1.684,807,1.684,808,1.684,809,1.684,810,1.684]],["title/injectables/ScreenSizeService.html",[248,1.805,648,1.656]],["body/injectables/ScreenSizeService.html",[0,0.134,3,0.277,4,0.277,5,0.246,6,0.476,8,0.449,9,1.925,11,1.13,12,0.188,13,0.547,14,0.723,16,0.712,18,1.146,21,3.001,23,0.886,25,0.974,26,0.029,27,0.712,28,0.371,29,0.903,34,0.901,35,0.971,49,1.06,50,0.532,51,0.644,71,0.622,81,2.299,85,0.277,89,1.235,90,1.444,96,1.925,102,0.778,112,1.08,116,1.64,165,0.016,166,0.016,175,2.97,190,1.222,211,2.299,231,2.911,237,2.291,240,3.843,241,3.001,248,2.097,288,3.364,309,2.709,312,2.291,338,3.249,376,2.97,377,2.97,451,2.299,458,2.754,530,1.925,581,2.709,603,2.844,608,2.541,614,3.778,619,1.925,620,1.925,623,3.348,624,3.348,626,2.238,627,2.844,648,1.925,650,1.75,652,2.299,653,3.636,655,2.299,656,3.348,657,2.844,658,1.959,659,3.979,661,3.249,664,2.541,666,2.844,668,2.844,669,2.844,670,2.541,671,2.844,672,2.844,673,2.844,675,2.844,676,2.541,677,2.844,678,3.674,679,1.959,680,1.959,681,1.959,684,1.959,811,4.915,812,2.238,813,4.994,814,4.994,815,4.994,816,4.994,817,2.662,818,3.865,819,3.865,820,2.662,821,2.662,822,4.458,823,3.865,824,3.865,825,2.662,826,2.662,827,2.662,828,2.662,829,2.662,830,2.662,831,2.662,832,2.662,833,2.662,834,2.662,835,2.662,836,2.662]],["title/components/ThreeViewerComponent.html",[167,1.978,198,1.805]],["body/components/ThreeViewerComponent.html",[0,0.131,3,0.272,4,0.272,5,0.242,6,0.447,8,0.443,10,2.505,12,0.185,13,0.54,14,1.222,16,0.702,18,1.134,23,0.853,25,0.658,26,0.029,27,0.829,28,0.366,29,0.61,48,2.068,49,0.645,50,0.899,51,0.745,56,1.29,57,1.465,71,1.051,85,0.272,86,1.199,89,1.491,99,2.62,102,0.763,112,0.824,117,1.749,132,1.498,158,1.617,165,0.016,166,0.016,167,3.129,168,1.417,169,2.505,170,1.921,171,2.195,172,1.921,173,2.195,177,1.921,178,2.195,179,4.16,180,4.16,181,3.204,183,3.204,190,1.198,191,2.195,192,2.505,193,2.068,194,1.921,195,4.16,196,2.195,197,2.195,198,2.685,199,3.129,200,2.195,201,2.195,219,4.042,231,1.898,234,1.944,248,3.155,250,1.921,272,3.729,288,2.685,312,2.97,342,3.632,350,1.716,355,2.556,366,2.804,428,2.804,608,2.505,619,2.736,627,2.804,649,3.458,652,3.267,686,3.783,757,2.195,783,2.195,837,2.195,838,3.811,839,3.783,840,3.811,841,3.204,842,4.501,843,4.501,844,4.501,845,3.811,846,4.501,847,4.948,848,5.495,849,2.611,850,3.729,851,3.811,852,3.311,853,2.611,854,3.811,855,3.811,856,2.611,857,3.811,858,4.501,859,2.611,860,3.811,861,2.611,862,3.811,863,3.204,864,3.811,865,3.204,866,2.611,867,2.611,868,2.611,869,2.611,870,2.611,871,2.611,872,2.611,873,2.611,874,2.611,875,2.611,876,2.611,877,2.611,878,2.611,879,2.611,880,2.611,881,2.611,882,2.611,883,2.611,884,2.611,885,2.611]],["title/injectables/TimeService.html",[648,1.656,850,2.186]],["body/injectables/TimeService.html",[0,0.135,3,0.279,4,0.279,5,0.248,6,0.466,8,0.451,9,2.496,11,1.465,12,0.19,13,0.55,14,1.36,16,0.716,18,1.152,21,2.109,23,0.861,25,0.979,26,0.029,27,0.716,28,0.408,29,0.908,34,1.316,35,1.417,49,0.774,50,0.913,51,0.647,68,2.126,71,0.627,73,1.054,85,0.279,89,1.553,90,1.456,96,2.496,102,0.784,112,0.841,116,1.649,153,1.936,155,1.528,156,1.784,157,2.48,158,2.68,165,0.017,166,0.017,175,2.312,190,1.231,211,2.312,270,1.936,309,1.456,312,2.3,342,3.606,345,2.109,350,3.646,355,1.649,416,1.649,516,3.268,530,1.936,581,2.719,588,4.213,589,4.213,590,3.687,614,3.727,619,2.496,620,1.936,648,1.936,650,1.764,652,2.312,653,3.646,655,2.312,656,3.363,657,2.86,658,1.974,659,4.081,664,3.294,666,2.86,668,2.86,669,2.86,670,2.555,671,3.687,672,3.687,673,2.86,675,2.86,676,3.294,677,2.86,678,2.86,679,1.974,680,1.974,681,1.974,684,1.974,731,2.86,761,2.86,850,2.555,852,2.86,886,2.256,887,3.887,888,5.012,889,2.683,890,2.683,891,3.887,892,2.683,893,2.683,894,3.887,895,3.887,896,3.268,897,3.268,898,2.683,899,4.571,900,5.547,901,2.683,902,4.571,903,2.683,904,4.571,905,2.683,906,2.683,907,2.683,908,2.683,909,2.683,910,2.683]],["title/classes/World.html",[0,0.167,324,1.978]],["body/classes/World.html",[0,0.124,2,0.835,3,0.257,4,0.257,5,0.403,6,0.476,8,0.506,9,1.819,11,1.068,12,0.174,13,0.517,14,1.553,16,0.673,18,1.097,23,0.888,25,0.921,26,0.029,27,0.673,28,0.438,29,0.853,34,0.835,35,0.899,44,2.173,47,1.338,49,0.619,50,0.962,51,0.854,52,2.042,53,1.338,56,1.979,57,0.621,58,2.427,59,1.338,64,1.846,65,1.338,66,1.369,67,0.969,68,2.042,69,1.466,71,1.017,83,2.402,84,3.171,85,0.257,86,1.149,87,2.612,89,1.758,95,1.677,99,2.68,100,1.677,101,2.397,102,0.721,112,1.111,135,1.983,153,1.819,155,1.436,156,1.677,157,1.983,158,1.55,159,2.173,163,1.63,165,0.016,166,0.016,193,1.983,230,2.612,232,1.338,270,1.819,295,2.688,324,3.702,328,3.072,334,3.072,342,2.863,349,3.072,350,2.402,355,2.59,358,1.819,414,2.768,416,2.042,418,2.688,427,1.983,514,3.475,550,3.072,581,1.983,582,3.072,583,3.072,610,1.621,619,1.819,620,2.397,637,3.072,730,1.621,911,2.073,912,3.654,913,5.722,914,3.654,915,3.072,916,2.466,917,4.814,918,2.466,919,3.654,920,2.466,921,3.654,922,3.654,923,2.466,924,3.654,925,3.654,926,3.654,927,2.466,928,2.466,929,2.466,930,2.466,931,2.466,932,2.466,933,2.466,934,2.073,935,2.466,936,2.466,937,4.353,938,3.654,939,2.466,940,2.466,941,2.466,942,2.466,943,2.466,944,2.466,945,2.466,946,2.466,947,2.466]],["title/coverage.html",[948,3.8]],["body/coverage.html",[0,0.324,1,2.284,5,0.322,6,0.552,7,3.425,26,0.029,28,0.283,52,1.474,58,1.474,64,1.474,66,1.093,68,1.474,84,1.885,112,0.751,165,0.02,166,0.02,167,2.768,168,1.885,174,2.921,198,1.885,219,2.556,223,2.284,224,2.921,229,1.885,237,1.594,248,1.885,258,5.718,267,2.284,268,2.921,286,2.921,312,1.594,313,2.921,319,2.284,321,2.284,324,2.066,370,1.072,414,2.409,415,3.425,426,2.284,514,2.066,515,2.921,578,2.921,587,2.921,597,2.284,598,2.921,611,2.921,617,2.921,625,2.921,628,2.066,629,2.556,643,2.921,648,2.614,649,2.066,651,2.921,685,2.921,713,2.556,730,2.284,811,2.921,812,2.921,837,2.921,850,2.284,886,2.921,911,2.921,948,2.921,949,2.921,950,3.474,951,3.474,952,6.019,953,4.655,954,5.608,955,5.848,956,4.655,957,2.921,958,2.921,959,5.25,960,5.25,961,3.474,962,3.474,963,5.25,964,3.474,965,2.921,966,2.921,967,3.474,968,3.474]],["title/dependencies.html",[205,2.626,969,2.343]],["body/dependencies.html",[26,0.029,57,1.184,61,2.156,62,2.156,87,3.06,165,0.024,166,0.024,190,2.156,205,3.089,216,4.741,217,4.149,610,3.089,970,4.699,971,6.637,972,4.699,973,4.699,974,4.699,975,4.699,976,4.699,977,4.699,978,4.699,979,4.699,980,4.699,981,4.699,982,4.699,983,4.699,984,4.699,985,4.699,986,4.699,987,4.699]],["title/miscellaneous/enumerations.html",[988,1.512,989,3.358]],["body/miscellaneous/enumerations.html",[6,0.41,12,0.356,26,0.028,28,0.41,35,2.268,39,2.507,48,2.732,101,2.507,165,0.025,166,0.025,457,2.696,629,3.705,638,3.31,639,4.323,641,4.234,642,4.234,988,2.732,989,4.234,990,5.036]],["title/index.html",[12,0.197,991,2.343,992,2.343]],["body/index.html",[10,1.899,11,0.844,18,0.728,26,0.028,27,0.755,28,0.235,34,1.387,38,1.135,39,2.372,51,0.675,55,2.186,56,1.755,57,1.379,61,1.881,62,1.325,73,2.234,81,3.083,84,1.567,87,2.813,93,2.813,95,1.881,96,1.438,100,1.325,112,1.292,117,1.325,135,1.567,165,0.017,166,0.017,170,4.027,175,3.255,176,2.694,186,4.004,187,2.428,188,2.428,231,1.438,234,2.151,287,2.726,288,2.224,292,2.428,293,2.428,304,2.428,305,2.125,312,1.325,335,2.125,355,1.738,414,1.325,427,1.567,442,3.407,457,1.881,459,1.899,514,1.718,517,3.445,518,2.125,533,4.004,535,2.428,538,2.125,581,1.567,590,2.125,600,2.125,602,2.428,608,1.899,613,3.015,645,2.428,649,1.718,652,1.718,653,2.694,654,3.445,655,1.718,659,2.694,662,2.428,664,1.899,676,1.899,761,3.015,841,2.428,852,2.125,896,2.428,897,2.428,934,2.428,949,2.428,993,4.098,994,2.889,995,2.889,996,2.889,997,4.098,998,2.889,999,2.889,1000,4.602,1001,4.098,1002,2.889,1003,2.889,1004,4.763,1005,2.889,1006,2.889,1007,2.889,1008,2.428,1009,2.428,1010,2.428,1011,2.889,1012,4.098,1013,2.889,1014,2.889,1015,2.889,1016,4.098,1017,2.889,1018,2.889,1019,4.098,1020,2.889,1021,5.686,1022,2.428,1023,2.889,1024,2.889,1025,2.889,1026,2.889,1027,2.889,1028,2.889,1029,2.889,1030,2.889,1031,2.889,1032,2.889,1033,2.889,1034,2.889,1035,2.889,1036,4.098,1037,2.889,1038,2.889,1039,2.889,1040,2.889,1041,2.889,1042,3.445,1043,2.889,1044,4.098,1045,2.889,1046,2.889,1047,2.889,1048,4.098,1049,2.889,1050,2.889,1051,2.889,1052,2.889,1053,2.889,1054,4.098,1055,2.889,1056,3.445,1057,2.889,1058,2.889,1059,2.889,1060,2.889,1061,2.889,1062,2.889,1063,2.889,1064,2.889,1065,2.889,1066,2.889,1067,2.889,1068,2.889,1069,2.889,1070,2.428,1071,2.889,1072,4.098,1073,2.889,1074,2.889,1075,2.889,1076,2.889,1077,2.428,1078,2.889,1079,2.428,1080,2.889,1081,2.889,1082,2.889,1083,2.889,1084,2.889,1085,2.889,1086,2.889,1087,2.889,1088,2.889,1089,2.889,1090,2.889,1091,2.889,1092,2.889,1093,2.889,1094,2.889,1095,2.889,1096,2.889,1097,2.889,1098,4.098,1099,2.889,1100,2.428,1101,2.889,1102,2.889,1103,4.098,1104,2.889,1105,2.889,1106,2.889,1107,4.098,1108,2.889,1109,2.889,1110,2.889,1111,2.889,1112,2.889,1113,2.889,1114,2.889,1115,4.098,1116,2.889]],["title/license.html",[991,2.343,992,2.343,1117,2.343]],["body/license.html",[11,1.128,21,1.707,23,0.314,26,0.013,44,1.204,45,3.201,48,1.099,155,1.71,158,1.335,165,0.013,166,0.013,185,1.702,194,2.315,324,1.871,451,1.871,458,1.567,538,1.49,594,1.702,600,1.49,612,3.244,636,1.702,670,1.331,752,2.645,780,2.645,839,1.702,863,1.702,865,3.244,915,1.702,1000,4.376,1008,1.702,1009,1.702,1010,2.645,1022,1.702,1042,1.702,1056,1.702,1070,1.702,1077,4.376,1100,1.702,1117,4.193,1118,5.206,1119,5.382,1120,4.712,1121,5.206,1122,2.025,1123,2.025,1124,2.025,1125,5.382,1126,2.025,1127,2.025,1128,3.147,1129,4.712,1130,2.025,1131,2.025,1132,2.025,1133,2.025,1134,3.859,1135,2.025,1136,4.712,1137,4.351,1138,2.025,1139,3.859,1140,2.025,1141,2.025,1142,2.025,1143,2.025,1144,5.382,1145,2.025,1146,2.025,1147,3.147,1148,2.025,1149,2.025,1150,3.147,1151,5.754,1152,5.754,1153,6.337,1154,3.147,1155,3.147,1156,2.025,1157,2.025,1158,2.025,1159,3.147,1160,6.437,1161,2.025,1162,3.859,1163,3.147,1164,2.025,1165,3.147,1166,2.025,1167,3.147,1168,2.025,1169,3.859,1170,2.025,1171,3.147,1172,3.147,1173,4.351,1174,2.025,1175,2.025,1176,2.025,1177,4.351,1178,3.147,1179,2.025,1180,2.025,1181,3.147,1182,2.025,1183,2.025,1184,2.025,1185,2.025,1186,3.859,1187,4.712,1188,5.527,1189,4.712,1190,3.859,1191,2.025,1192,2.025,1193,2.025,1194,3.147,1195,2.025,1196,3.147,1197,1.702,1198,2.025,1199,2.025,1200,2.025,1201,2.025,1202,2.025,1203,2.025,1204,2.025,1205,2.025,1206,2.025,1207,2.025,1208,3.147,1209,2.025,1210,5.754,1211,4.712,1212,2.025,1213,2.025,1214,2.025,1215,3.147,1216,5.206,1217,2.025,1218,2.025,1219,2.025,1220,2.025,1221,2.025,1222,2.025,1223,2.025,1224,2.025,1225,2.025,1226,2.025,1227,2.025,1228,2.025,1229,2.025,1230,2.025,1231,2.025,1232,4.351,1233,2.025,1234,2.025,1235,2.025,1236,2.025,1237,3.859,1238,2.025,1239,2.025,1240,2.025,1241,3.147,1242,2.025,1243,2.025,1244,2.025,1245,3.859,1246,3.147,1247,2.025,1248,2.025,1249,2.025,1250,2.025,1251,3.147,1252,3.147,1253,2.025,1254,2.025,1255,2.025,1256,2.025,1257,2.025,1258,2.025,1259,2.025,1260,4.712,1261,2.025,1262,2.025,1263,2.025,1264,2.025,1265,2.025,1266,1.702,1267,2.025,1268,2.025,1269,2.025,1270,2.025,1271,3.147,1272,2.025,1273,3.859,1274,2.025,1275,2.025,1276,1.702,1277,2.025,1278,2.025,1279,5.206,1280,3.859,1281,2.025,1282,5.206,1283,3.147,1284,3.147,1285,2.025,1286,3.859,1287,2.025,1288,2.025,1289,2.025,1290,2.025,1291,2.025,1292,2.025,1293,4.988,1294,3.147,1295,3.859,1296,3.147,1297,2.025,1298,2.025,1299,2.025,1300,2.025,1301,4.712,1302,3.147,1303,3.147,1304,3.859,1305,3.147,1306,3.147,1307,3.147,1308,3.147,1309,3.147,1310,3.147,1311,2.025,1312,2.025,1313,2.025,1314,2.025,1315,2.025,1316,2.025,1317,2.025,1318,4.351,1319,2.025,1320,2.025,1321,2.025,1322,2.025,1323,2.025,1324,2.025,1325,2.025,1326,2.025,1327,2.025,1328,4.351,1329,3.859,1330,2.025,1331,3.147,1332,3.859,1333,3.147,1334,3.147,1335,3.147,1336,2.025,1337,2.025,1338,2.025,1339,2.025,1340,2.025,1341,3.147,1342,2.025,1343,4.351,1344,2.025,1345,2.025,1346,2.025,1347,2.025,1348,3.147,1349,2.025,1350,2.025,1351,2.025,1352,2.025,1353,2.025,1354,2.025,1355,2.025,1356,2.025,1357,2.025,1358,2.025,1359,2.025,1360,3.147,1361,2.025,1362,2.025,1363,2.025,1364,2.025,1365,2.025,1366,2.025,1367,2.025,1368,2.025,1369,2.025,1370,3.147,1371,2.025,1372,2.025,1373,2.025,1374,2.025,1375,2.025,1376,2.025,1377,2.025,1378,2.025,1379,2.025,1380,2.025,1381,3.147,1382,2.025,1383,2.025,1384,2.025,1385,2.025,1386,2.025,1387,2.025,1388,2.025,1389,3.147,1390,2.025,1391,2.025,1392,2.025,1393,2.025,1394,2.025,1395,2.025,1396,2.025,1397,2.025,1398,2.025,1399,2.025,1400,2.025,1401,2.025]],["title/modules.html",[204,3.325]],["body/modules.html",[26,0.026,165,0.026,166,0.026,203,3.455,204,3.867,217,3.867,1402,5.257,1403,5.257,1404,5.257]],["title/overview.html",[1405,3.8]],["body/overview.html",[2,1.636,26,0.027,81,2.874,165,0.024,166,0.024,168,3.591,169,3.177,198,3.318,202,4.063,203,4.35,205,3.77,206,4.063,207,4.063,208,4.063,209,4.821,210,4.063,211,2.874,467,3.177,512,1.899,650,3.177,822,4.063,1266,4.063,1405,4.063,1406,4.833]],["title/properties.html",[13,0.566,969,2.343]],["body/properties.html",[13,0.748,26,0.027,165,0.026,166,0.026,1276,4.442,1407,5.284]],["title/miscellaneous/typealiases.html",[988,1.512,1408,3.995]],["body/miscellaneous/typealiases.html",[6,0.472,12,0.348,26,0.027,28,0.472,38,1.936,39,2.453,49,0.834,165,0.025,166,0.025,287,2.453,356,2.261,410,4.141,457,2.261,614,3.449,633,4.141,638,3.238,713,3.624,759,4.876,988,2.673,1079,4.141,1409,4.927,1410,4.927,1411,4.927,1412,4.927,1413,4.927,1414,4.927,1415,4.927,1416,4.927,1417,4.927]],["title/miscellaneous/variables.html",[988,1.512,1418,3.358]],["body/miscellaneous/variables.html",[6,0.343,12,0.298,26,0.029,27,1.112,28,0.524,34,1.95,35,2.099,47,2.286,82,2.77,132,1.656,165,0.022,166,0.022,358,2.098,414,2.909,416,2.238,628,2.506,631,4.237,632,3.1,730,3.467,731,3.1,781,3.542,790,4.435,792,3.542,957,3.542,958,4.435,965,3.542,966,3.542,988,2.286,1197,5.224,1418,4.841,1419,4.214,1420,4.214,1421,4.214,1422,4.214,1423,4.214,1424,4.214,1425,4.214,1426,4.214,1427,4.214,1428,4.214,1429,4.214,1430,4.214,1431,4.214,1432,4.214,1433,4.214,1434,4.214,1435,4.214]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":900,"title":{},"body":{"injectables/TimeService.html":{}}}],["0.001",{"_index":161,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["0.02",{"_index":126,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["0.1",{"_index":257,"title":{},"body":{"classes/CameraHolder.html":{}}}],["0.11.4",{"_index":987,"title":{},"body":{"dependencies.html":{}}}],["0.142.0",{"_index":983,"title":{},"body":{"dependencies.html":{}}}],["0.16.1",{"_index":979,"title":{},"body":{"dependencies.html":{}}}],["0.4",{"_index":470,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["0.4.0",{"_index":1407,"title":{},"body":{"properties.html":{}}}],["0.5",{"_index":564,"title":{},"body":{"classes/Floor.html":{}}}],["0xff0000",{"_index":1103,"title":{},"body":{"index.html":{}}}],["1",{"_index":81,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"injectables/ScreenSizeService.html":{},"index.html":{},"overview.html":{}}}],["1.0",{"_index":1122,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":556,"title":{},"body":{"classes/Floor.html":{}}}],["1/1",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["10/10",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":258,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["1024",{"_index":485,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["11",{"_index":1266,"title":{},"body":{"license.html":{},"overview.html":{}}}],["14",{"_index":993,"title":{},"body":{"index.html":{}}}],["14.0.0",{"_index":971,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":483,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["15/15",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["1996",{"_index":1268,"title":{},"body":{"license.html":{}}}],["2",{"_index":822,"title":{},"body":{"injectables/ScreenSizeService.html":{},"overview.html":{}}}],["2.0.0",{"_index":978,"title":{},"body":{"dependencies.html":{}}}],["2.25",{"_index":480,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["2.3.0",{"_index":985,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":467,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/RendererHolder.html":{},"overview.html":{}}}],["35",{"_index":254,"title":{},"body":{"classes/CameraHolder.html":{}}}],["3d",{"_index":355,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["4",{"_index":260,"title":{},"body":{"classes/CameraHolder.html":{}}}],["4(a",{"_index":1254,"title":{},"body":{"license.html":{}}}],["4.0.2",{"_index":981,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":497,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["5/5",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":524,"title":{},"body":{"classes/Floor.html":{}}}],["7.5.0",{"_index":982,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":261,"title":{},"body":{"classes/CameraHolder.html":{}}}],["8/8",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":1406,"title":{},"body":{"overview.html":{}}}],["9/9",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["96/9/ec",{"_index":1262,"title":{},"body":{"license.html":{}}}],["abandoned",{"_index":1367,"title":{},"body":{"license.html":{}}}],["abandons",{"_index":1291,"title":{},"body":{"license.html":{}}}],["above",{"_index":823,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["absence",{"_index":1381,"title":{},"body":{"license.html":{}}}],["accepts",{"_index":1415,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["access",{"_index":1019,"title":{},"body":{"index.html":{}}}],["accessible",{"_index":304,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["account",{"_index":1338,"title":{},"body":{"license.html":{}}}],["accuracy",{"_index":1384,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":1398,"title":{},"body":{"license.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"license.html":{}}}],["actions",{"_index":15,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["activates",{"_index":541,"title":{},"body":{"classes/Floor.html":{}}}],["active",{"_index":307,"title":{},"body":{"classes/DebugGUI.html":{}}}],["actual_component",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["adapt",{"_index":1228,"title":{},"body":{"license.html":{}}}],["add",{"_index":100,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["added",{"_index":379,"title":{},"body":{"classes/Engine.html":{},"classes/Floor.html":{}}}],["addition",{"_index":1339,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1205,"title":{},"body":{"license.html":{}}}],["adds",{"_index":770,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["advertising",{"_index":1309,"title":{},"body":{"license.html":{}}}],["affected",{"_index":1341,"title":{},"body":{"license.html":{}}}],["affirmer",{"_index":1210,"title":{},"body":{"license.html":{}}}],["affirmer's",{"_index":1293,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":1357,"title":{},"body":{"license.html":{}}}],["against",{"_index":1247,"title":{},"body":{"license.html":{}}}],["aliases",{"_index":1409,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amended",{"_index":1274,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1162,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["angular's",{"_index":1075,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":970,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":972,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":973,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":974,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":976,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":154,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animated",{"_index":1063,"title":{},"body":{"index.html":{}}}],["animation",{"_index":10,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["animationaction",{"_index":22,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationholder",{"_index":1,"title":{"classes/AnimationHolder.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["animationmixer",{"_index":20,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationmixer(this.modelgroup",{"_index":113,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animationname",{"_index":70,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["animations",{"_index":97,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["antialias",{"_index":699,"title":{},"body":{"classes/RendererHolder.html":{}}}],["app",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["app.component",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":168,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["applicable",{"_index":1279,"title":{},"body":{"license.html":{}}}],["application",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"classes/DebugGUI.html":{},"interfaces/IExperienceTime.html":{},"index.html":{}}}],["applied",{"_index":538,"title":{},"body":{"classes/Floor.html":{},"index.html":{},"license.html":{}}}],["applies",{"_index":436,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["apply",{"_index":451,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["appmodule",{"_index":203,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1065,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1079,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{}}}],["arising",{"_index":1261,"title":{},"body":{"license.html":{}}}],["assert",{"_index":1359,"title":{},"body":{"license.html":{}}}],["assets",{"_index":1057,"title":{},"body":{"index.html":{}}}],["assets/models/fox/gltf/fox.gltf",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/color.jpg",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/dirt/normal.jpg",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nx.jpg",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/ny.jpg",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/nz.jpg",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/px.jpg",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/py.jpg",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets/textures/environmentmap/pz.jpg",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["associated",{"_index":1294,"title":{},"body":{"license.html":{}}}],["associating",{"_index":1209,"title":{},"body":{"license.html":{}}}],["attorney",{"_index":1130,"title":{},"body":{"license.html":{}}}],["attributes",{"_index":450,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["author(s",{"_index":1235,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1161,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1148,"title":{},"body":{"license.html":{}}}],["available",{"_index":48,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["avoid",{"_index":581,"title":{},"body":{"interfaces/IDestroyable.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["awesome",{"_index":1003,"title":{},"body":{"index.html":{}}}],["b",{"_index":1371,"title":{},"body":{"license.html":{}}}],["based",{"_index":670,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["basis",{"_index":1133,"title":{},"body":{"license.html":{}}}],["becomes",{"_index":1105,"title":{},"body":{"index.html":{}}}],["behaviour",{"_index":669,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["below",{"_index":1154,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":1311,"title":{},"body":{"license.html":{}}}],["between",{"_index":134,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{}}}],["bind",{"_index":275,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["binds",{"_index":332,"title":{},"body":{"classes/Engine.html":{}}}],["boilerplate",{"_index":1055,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":306,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["bootstrap",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{}}}],["bootstraps",{"_index":857,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["both",{"_index":1064,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry",{"_index":1106,"title":{},"body":{"index.html":{}}}],["boxbuffergeometry(1",{"_index":1108,"title":{},"body":{"index.html":{}}}],["break",{"_index":789,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["browse",{"_index":1404,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["bruno",{"_index":1038,"title":{},"body":{"index.html":{}}}],["build",{"_index":1022,"title":{},"body":{"index.html":{},"license.html":{}}}],["builda",{"_index":1025,"title":{},"body":{"index.html":{}}}],["buildor",{"_index":1024,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":9,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["c",{"_index":1388,"title":{},"body":{"license.html":{}}}],["calculate",{"_index":591,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["calculations",{"_index":244,"title":{},"body":{"classes/CameraHolder.html":{}}}],["call",{"_index":756,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["callback",{"_index":655,"title":{},"body":{"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["camera",{"_index":227,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["cameraholder",{"_index":223,"title":{"classes/CameraHolder.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["cameraholder(this.scene",{"_index":386,"title":{},"body":{"classes/Engine.html":{}}}],["can't",{"_index":760,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cancellation",{"_index":1321,"title":{},"body":{"license.html":{}}}],["canvas",{"_index":272,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["canvasref",{"_index":846,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["capability",{"_index":119,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["capacity",{"_index":542,"title":{},"body":{"classes/Floor.html":{}}}],["case",{"_index":780,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["casting",{"_index":120,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["causes",{"_index":1295,"title":{},"body":{"license.html":{}}}],["cc0",{"_index":1121,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1164,"title":{},"body":{"license.html":{}}}],["change",{"_index":96,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["changedetection",{"_index":818,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["changes",{"_index":242,"title":{},"body":{"classes/CameraHolder.html":{}}}],["check",{"_index":448,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["checks",{"_index":444,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child",{"_index":129,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["child.castshadow",{"_index":131,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["child.geometry.dispose",{"_index":404,"title":{},"body":{"classes/Engine.html":{}}}],["child.material",{"_index":406,"title":{},"body":{"classes/Engine.html":{}}}],["child.material.envmap",{"_index":473,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.envmapintensity",{"_index":475,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material.needsupdate",{"_index":477,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["child.material[key",{"_index":407,"title":{},"body":{"classes/Engine.html":{}}}],["children",{"_index":369,"title":{},"body":{"classes/Engine.html":{}}}],["choose",{"_index":1005,"title":{},"body":{"index.html":{}}}],["chosen",{"_index":228,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{}}}],["circlegeometry",{"_index":522,"title":{},"body":{"classes/Floor.html":{}}}],["circlegeometry(5",{"_index":523,"title":{},"body":{"classes/Floor.html":{}}}],["claims",{"_index":1177,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"overview.html":{}}}],["clean",{"_index":586,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["cleans",{"_index":854,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["clearing",{"_index":1390,"title":{},"body":{"license.html":{}}}],["click",{"_index":1001,"title":{},"body":{"index.html":{}}}],["client",{"_index":1131,"title":{},"body":{"license.html":{}}}],["clone",{"_index":1012,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1056,"title":{},"body":{"index.html":{},"license.html":{}}}],["collected",{"_index":926,"title":{},"body":{"classes/World.html":{}}}],["color",{"_index":533,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["commercial",{"_index":1190,"title":{},"body":{"license.html":{}}}],["commons",{"_index":1119,"title":{},"body":{"license.html":{}}}],["communicate",{"_index":1230,"title":{},"body":{"license.html":{}}}],["compensation",{"_index":1207,"title":{},"body":{"license.html":{}}}],["competition",{"_index":1249,"title":{},"body":{"license.html":{}}}],["complete",{"_index":805,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["completed",{"_index":753,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["component",{"_index":167,"title":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["components",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"overview.html":{}}}],["composing",{"_index":123,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["compression",{"_index":1090,"title":{},"body":{"index.html":{}}}],["concerning",{"_index":1375,"title":{},"body":{"license.html":{}}}],["confer",{"_index":1149,"title":{},"body":{"license.html":{}}}],["configure",{"_index":118,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{}}}],["configureanimation",{"_index":136,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configureenvironmentmap",{"_index":421,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuremesh",{"_index":519,"title":{},"body":{"classes/Floor.html":{}}}],["configuremodel",{"_index":124,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["configures",{"_index":546,"title":{},"body":{"classes/Floor.html":{}}}],["configuresunlight",{"_index":422,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["configuretextures",{"_index":520,"title":{},"body":{"classes/Floor.html":{}}}],["congratulations",{"_index":1011,"title":{},"body":{"index.html":{}}}],["consents",{"_index":1394,"title":{},"body":{"license.html":{}}}],["consider",{"_index":243,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ResourceLoader.html":{}}}],["consideration",{"_index":1206,"title":{},"body":{"license.html":{}}}],["considered",{"_index":694,"title":{},"body":{"classes/RendererHolder.html":{}}}],["console.log('loading",{"_index":804,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log('resources",{"_index":933,"title":{},"body":{"classes/World.html":{}}}],["console.log('there",{"_index":810,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["console.log(`loading",{"_index":807,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["const",{"_index":73,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["constructor(camera",{"_index":271,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["constructor(canvas",{"_index":326,"title":{},"body":{"classes/Engine.html":{}}}],["constructor(mixer",{"_index":19,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["constructor(ngzone",{"_index":658,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["constructor(private",{"_index":102,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["constructor(readonly",{"_index":72,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["constructor(scene",{"_index":232,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["constructor(sourcelist",{"_index":728,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["constructor(timeservice",{"_index":849,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["consumer",{"_index":614,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"miscellaneous/typealiases.html":{}}}],["consumes",{"_index":615,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["contained",{"_index":374,"title":{},"body":{"classes/Engine.html":{}}}],["container",{"_index":354,"title":{},"body":{"classes/Engine.html":{}}}],["containing",{"_index":838,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["contains",{"_index":516,"title":{},"body":{"classes/Floor.html":{},"injectables/TimeService.html":{}}}],["contemplated",{"_index":1327,"title":{},"body":{"license.html":{}}}],["contract",{"_index":579,"title":{},"body":{"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["contrary",{"_index":1361,"title":{},"body":{"license.html":{}}}],["contravention",{"_index":1285,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1191,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1170,"title":{},"body":{"license.html":{}}}],["controls",{"_index":276,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{}}}],["controlsholder",{"_index":267,"title":{"classes/ControlsHolder.html":{}},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"coverage.html":{}}}],["controlsholder(this.cameraholder.instance",{"_index":391,"title":{},"body":{"classes/Engine.html":{}}}],["copies",{"_index":1308,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1151,"title":{},"body":{"license.html":{}}}],["core",{"_index":314,"title":{},"body":{"classes/Engine.html":{}}}],["corporation",{"_index":1124,"title":{},"body":{"license.html":{}}}],["correct",{"_index":445,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{}}}],["correctly",{"_index":540,"title":{},"body":{"classes/Floor.html":{}}}],["corresponding",{"_index":44,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"license.html":{}}}],["council",{"_index":1265,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":948,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1008,"title":{},"body":{"index.html":{},"license.html":{}}}],["creative",{"_index":1118,"title":{},"body":{"license.html":{}}}],["creator",{"_index":1156,"title":{},"body":{"license.html":{}}}],["cube",{"_index":459,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["cube_texture",{"_index":642,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["cubetexture",{"_index":638,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["cubetextureloader",{"_index":717,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cubetextureloader(this.loadingmanager",{"_index":732,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["cultural",{"_index":1171,"title":{},"body":{"license.html":{}}}],["culture",{"_index":1195,"title":{},"body":{"license.html":{}}}],["current",{"_index":21,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"license.html":{}}}],["currenttime",{"_index":902,"title":{},"body":{"injectables/TimeService.html":{}}}],["d",{"_index":1396,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1141,"title":{},"body":{"license.html":{}}}],["dat",{"_index":1071,"title":{},"body":{"index.html":{}}}],["data",{"_index":1258,"title":{},"body":{"license.html":{}}}],["database",{"_index":1163,"title":{},"body":{"license.html":{}}}],["databases",{"_index":1270,"title":{},"body":{"license.html":{}}}],["date",{"_index":1351,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":899,"title":{},"body":{"injectables/TimeService.html":{}}}],["debug",{"_index":93,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"index.html":{}}}],["debug/debuggui",{"_index":59,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["debugfolder",{"_index":98,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui",{"_index":58,"title":{"classes/DebugGUI.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{}}}],["debuggui.destroy",{"_index":413,"title":{},"body":{"classes/Engine.html":{}}}],["debuggui.getui",{"_index":104,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debuggui.instance",{"_index":310,"title":{},"body":{"classes/DebugGUI.html":{}}}],["debugobject",{"_index":145,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["debugui",{"_index":103,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["debugui.addfolder('environment",{"_index":464,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["debugui.addfolder('fox",{"_index":106,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["declarations",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":859,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["deemed",{"_index":1349,"title":{},"body":{"license.html":{}}}],["default",{"_index":34,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defects",{"_index":1383,"title":{},"body":{"license.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["delta",{"_index":588,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["dependencies",{"_index":205,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":774,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["depicted",{"_index":1244,"title":{},"body":{"license.html":{}}}],["described",{"_index":922,"title":{},"body":{"classes/World.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["destroy",{"_index":163,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["destroyable",{"_index":360,"title":{},"body":{"classes/Engine.html":{}}}],["destroyable.destroy",{"_index":412,"title":{},"body":{"classes/Engine.html":{}}}],["destroyablelist",{"_index":320,"title":{},"body":{"classes/Engine.html":{}}}],["destroyed",{"_index":924,"title":{},"body":{"classes/World.html":{}}}],["destroys",{"_index":295,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/World.html":{}}}],["destruction",{"_index":855,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["detection",{"_index":664,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["determine",{"_index":668,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["detriment",{"_index":1314,"title":{},"body":{"license.html":{}}}],["development",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dictionary",{"_index":37,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["directional",{"_index":433,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight",{"_index":431,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directionallight('#ffffff",{"_index":466,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["directive",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"license.html":{}}}],["directives",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["disclaimers",{"_index":1362,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":1139,"title":{},"body":{"license.html":{}}}],["discoverable",{"_index":1386,"title":{},"body":{"license.html":{}}}],["display",{"_index":839,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["displayed",{"_index":917,"title":{},"body":{"classes/World.html":{}}}],["displays",{"_index":862,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["dispose",{"_index":550,"title":{},"body":{"classes/Floor.html":{},"classes/World.html":{}}}],["disposed",{"_index":580,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["disposed/destroyed",{"_index":336,"title":{},"body":{"classes/Engine.html":{}}}],["disposes",{"_index":278,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{}}}],["disrupt",{"_index":1324,"title":{},"body":{"license.html":{}}}],["dissemination",{"_index":1257,"title":{},"body":{"license.html":{}}}],["dist",{"_index":1026,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1215,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1128,"title":{},"body":{"license.html":{}}}],["document",{"_index":1129,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":949,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IResizable.html":{},"components/ThreeViewerComponent.html":{}}}],["don't",{"_index":1094,"title":{},"body":{"index.html":{}}}],["done",{"_index":735,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["down",{"_index":368,"title":{},"body":{"classes/Engine.html":{}}}],["draco",{"_index":1089,"title":{},"body":{"index.html":{}}}],["due",{"_index":761,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["duration",{"_index":1305,"title":{},"body":{"license.html":{}}}],["duty",{"_index":1400,"title":{},"body":{"license.html":{}}}],["dynamic",{"_index":975,"title":{},"body":{"dependencies.html":{}}}],["each",{"_index":155,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["easily",{"_index":1072,"title":{},"body":{"index.html":{}}}],["ecosystem's",{"_index":317,"title":{},"body":{"classes/Engine.html":{}}}],["effect",{"_index":1221,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1350,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":1201,"title":{},"body":{"license.html":{}}}],["elapsed",{"_index":589,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{}}}],["elects",{"_index":1213,"title":{},"body":{"license.html":{}}}],["element",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["elementref",{"_index":858,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["elements",{"_index":334,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["emit",{"_index":599,"title":{},"body":{"interfaces/IListenable.html":{}}}],["emits",{"_index":734,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitter",{"_index":764,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["emitting",{"_index":894,"title":{},"body":{"injectables/TimeService.html":{}}}],["encoding",{"_index":547,"title":{},"body":{"classes/Floor.html":{}}}],["end",{"_index":337,"title":{},"body":{"classes/Engine.html":{}}}],["engine",{"_index":312,"title":{"classes/Engine.html":{}},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{},"index.html":{}}}],["engine's",{"_index":338,"title":{},"body":{"classes/Engine.html":{},"injectables/ScreenSizeService.html":{}}}],["engine(this.canvasref.nativeelement",{"_index":875,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/engine",{"_index":867,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/pointer/pointer.service",{"_index":870,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/size/screen",{"_index":869,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engine/service/time/time.service",{"_index":868,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["engineconsumer",{"_index":656,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["enjoyment",{"_index":1326,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":864,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["enter",{"_index":1002,"title":{},"body":{"index.html":{}}}],["enum",{"_index":640,"title":{},"body":{"interfaces/ISource.html":{}}}],["enumerations",{"_index":989,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":414,"title":{"classes/Environment.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["environment(scene",{"_index":941,"title":{},"body":{"classes/World.html":{}}}],["environment.isenvmappable(child.material",{"_index":472,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmap",{"_index":419,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["environmentmapholder",{"_index":426,"title":{"interfaces/EnvironmentMapHolder.html":{}},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["environmentmaptexture",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envmap",{"_index":460,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["equitable",{"_index":1323,"title":{},"body":{"license.html":{}}}],["equivalent",{"_index":1070,"title":{},"body":{"index.html":{},"license.html":{}}}],["error",{"_index":757,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["error('cannot",{"_index":784,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["error('canvas",{"_index":873,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["error('type",{"_index":795,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["errors",{"_index":1385,"title":{},"body":{"license.html":{}}}],["european",{"_index":1263,"title":{},"body":{"license.html":{}}}],["event",{"_index":345,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{}}}],["eventemitter",{"_index":718,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["events",{"_index":608,"title":{},"body":{"interfaces/IListenable.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["everywhere",{"_index":1080,"title":{},"body":{"index.html":{}}}],["example",{"_index":402,"title":{},"body":{"classes/Engine.html":{}}}],["exclusive",{"_index":1150,"title":{},"body":{"license.html":{}}}],["execute",{"_index":678,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executed",{"_index":671,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["executes",{"_index":654,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["exercise",{"_index":1348,"title":{},"body":{"license.html":{}}}],["exist",{"_index":46,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["existing",{"_index":1299,"title":{},"body":{"license.html":{}}}],["exists",{"_index":796,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["expect",{"_index":1034,"title":{},"body":{"index.html":{}}}],["expectation",{"_index":1204,"title":{},"body":{"license.html":{}}}],["experience",{"_index":342,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["experiences",{"_index":994,"title":{},"body":{"index.html":{}}}],["experiencetime",{"_index":157,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["export",{"_index":85,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["exposes",{"_index":644,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["express",{"_index":1328,"title":{},"body":{"license.html":{}}}],["extensions",{"_index":1306,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1211,"title":{},"body":{"license.html":{}}}],["extraction",{"_index":1256,"title":{},"body":{"license.html":{}}}],["fallback",{"_index":1330,"title":{},"body":{"license.html":{}}}],["false",{"_index":82,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Fox.html":{},"miscellaneous/variables.html":{}}}],["famous",{"_index":1061,"title":{},"body":{"index.html":{}}}],["fear",{"_index":1175,"title":{},"body":{"license.html":{}}}],["features",{"_index":1054,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["files",{"_index":809,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["fires",{"_index":763,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["firm",{"_index":1126,"title":{},"body":{"license.html":{}}}],["first",{"_index":879,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["fit",{"_index":1051,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1379,"title":{},"body":{"license.html":{}}}],["floor",{"_index":514,"title":{"classes/Floor.html":{}},"body":{"classes/Floor.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["floor(scene",{"_index":936,"title":{},"body":{"classes/World.html":{}}}],["folder",{"_index":1027,"title":{},"body":{"index.html":{}}}],["folders",{"_index":1067,"title":{},"body":{"index.html":{}}}],["follow",{"_index":239,"title":{},"body":{"classes/CameraHolder.html":{}}}],["following",{"_index":1226,"title":{},"body":{"license.html":{}}}],["form",{"_index":1185,"title":{},"body":{"license.html":{}}}],["forward",{"_index":895,"title":{},"body":{"injectables/TimeService.html":{}}}],["found",{"_index":299,"title":{},"body":{"classes/DebugGUI.html":{}}}],["fox",{"_index":84,"title":{"classes/Fox.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["fox(scene",{"_index":939,"title":{},"body":{"classes/World.html":{}}}],["foxmodel",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":156,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["framerate",{"_index":596,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["free",{"_index":1194,"title":{},"body":{"license.html":{}}}],["freely",{"_index":1183,"title":{},"body":{"license.html":{}}}],["friendly",{"_index":1113,"title":{},"body":{"index.html":{}}}],["fully",{"_index":752,"title":{},"body":{"classes/ResourceLoader.html":{},"license.html":{}}}],["function",{"_index":410,"title":{},"body":{"classes/Engine.html":{},"miscellaneous/typealiases.html":{}}}],["further",{"_index":1196,"title":{},"body":{"license.html":{}}}],["future",{"_index":1301,"title":{},"body":{"license.html":{}}}],["gain",{"_index":1198,"title":{},"body":{"license.html":{}}}],["garbage",{"_index":925,"title":{},"body":{"classes/World.html":{}}}],["generate",{"_index":428,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["generated",{"_index":1028,"title":{},"body":{"index.html":{}}}],["geometry",{"_index":517,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["getexperiencetime",{"_index":888,"title":{},"body":{"injectables/TimeService.html":{}}}],["getheight",{"_index":813,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getpixelratio",{"_index":814,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["gets",{"_index":891,"title":{},"body":{"injectables/TimeService.html":{}}}],["getsize",{"_index":815,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["getting",{"_index":991,"title":{"index.html":{},"license.html":{}},"body":{}}],["getui",{"_index":289,"title":{},"body":{"classes/DebugGUI.html":{}}}],["getwidth",{"_index":816,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["git",{"_index":1013,"title":{},"body":{"index.html":{}}}],["give",{"_index":1032,"title":{},"body":{"index.html":{}}}],["gives",{"_index":302,"title":{},"body":{"classes/DebugGUI.html":{}}}],["glslify",{"_index":977,"title":{},"body":{"dependencies.html":{}}}],["gltf",{"_index":39,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["gltfloader",{"_index":719,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfloader(this.loadingmanager",{"_index":736,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["gltfmodel",{"_index":641,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/enumerations.html":{}}}],["grants",{"_index":1340,"title":{},"body":{"license.html":{}}}],["grasscolortexture",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grassnormaltexture",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["greater",{"_index":1200,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1283,"title":{},"body":{"license.html":{}}}],["group",{"_index":54,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["gui",{"_index":61,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["handle",{"_index":1081,"title":{},"body":{"index.html":{}}}],["handles",{"_index":619,"title":{},"body":{"interfaces/IResizable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["handling",{"_index":1092,"title":{},"body":{"index.html":{}}}],["heavy",{"_index":672,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["height",{"_index":624,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["heirs",{"_index":1315,"title":{},"body":{"license.html":{}}}],["held",{"_index":1365,"title":{},"body":{"license.html":{}}}],["here",{"_index":634,"title":{},"body":{"interfaces/ISource.html":{}}}],["hereby",{"_index":1286,"title":{},"body":{"license.html":{}}}],["hereunder",{"_index":1138,"title":{},"body":{"license.html":{}}}],["hereunder.statement",{"_index":1143,"title":{},"body":{"license.html":{}}}],["highly",{"_index":1044,"title":{},"body":{"index.html":{}}}],["holder",{"_index":225,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["holder/cameraholder",{"_index":382,"title":{},"body":{"classes/Engine.html":{}}}],["holder/controlsholder",{"_index":381,"title":{},"body":{"classes/Engine.html":{}}}],["holder/rendererholder",{"_index":380,"title":{},"body":{"classes/Engine.html":{}}}],["holds",{"_index":83,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["hosted",{"_index":1030,"title":{},"body":{"index.html":{}}}],["html",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["htmlcanvaselement",{"_index":273,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["http://localhost:4200",{"_index":1020,"title":{},"body":{"index.html":{}}}],["huge",{"_index":1037,"title":{},"body":{"index.html":{}}}],["ideal",{"_index":1193,"title":{},"body":{"license.html":{}}}],["identifier",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["idestroyable",{"_index":66,"title":{"interfaces/IDestroyable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["iexperiencetime",{"_index":68,"title":{"interfaces/IExperienceTime.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{}}}],["ii",{"_index":1232,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1237,"title":{},"body":{"license.html":{}}}],["ilistenable",{"_index":597,"title":{"interfaces/IListenable.html":{}},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"coverage.html":{}}}],["image",{"_index":1242,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":1272,"title":{},"body":{"license.html":{}}}],["implementations",{"_index":1281,"title":{},"body":{"license.html":{}}}],["implements",{"_index":86,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IPointerSensible.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["implied",{"_index":1376,"title":{},"body":{"license.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{}}}],["imports",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["impulsion",{"_index":880,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["include",{"_index":1224,"title":{},"body":{"license.html":{}}}],["including",{"_index":1188,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":1082,"title":{},"body":{"index.html":{}}}],["incorporate",{"_index":1180,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ineffective",{"_index":1335,"title":{},"body":{"license.html":{}}}],["ineffectiveness",{"_index":1354,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["information",{"_index":11,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"license.html":{}}}],["infringement",{"_index":1178,"title":{},"body":{"license.html":{}}}],["initial",{"_index":32,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["initialsize",{"_index":251,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.height",{"_index":256,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["initialsize.width",{"_index":255,"title":{},"body":{"classes/CameraHolder.html":{}}}],["injectable",{"_index":648,"title":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["injectables",{"_index":650,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["input",{"_index":1416,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["inspiration",{"_index":1040,"title":{},"body":{"index.html":{}}}],["inspired",{"_index":1045,"title":{},"body":{"index.html":{}}}],["instance",{"_index":230,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["instanceof",{"_index":130,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["instantiated",{"_index":912,"title":{},"body":{"classes/World.html":{}}}],["instantiates",{"_index":297,"title":{},"body":{"classes/DebugGUI.html":{}}}],["instantiation",{"_index":316,"title":{},"body":{"classes/Engine.html":{},"interfaces/IExperienceTime.html":{}}}],["integrated",{"_index":1069,"title":{},"body":{"index.html":{}}}],["integration",{"_index":1084,"title":{},"body":{"index.html":{}}}],["intended",{"_index":1220,"title":{},"body":{"license.html":{}}}],["intending",{"_index":1317,"title":{},"body":{"license.html":{}}}],["intensity",{"_index":447,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["interface",{"_index":370,"title":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{}},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["interface/idestroyable",{"_index":67,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{}}}],["interface/ilistenable",{"_index":775,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["interface/ipointersensible",{"_index":384,"title":{},"body":{"classes/Engine.html":{}}}],["interface/iresizable",{"_index":245,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["interface/iupdatable",{"_index":65,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/World.html":{}}}],["interfaces",{"_index":512,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"overview.html":{}}}],["invalid",{"_index":1334,"title":{},"body":{"license.html":{}}}],["invalidate",{"_index":1355,"title":{},"body":{"license.html":{}}}],["invalidity",{"_index":1353,"title":{},"body":{"license.html":{}}}],["ipointersensible",{"_index":319,"title":{"interfaces/IPointerSensible.html":{}},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["iresizable",{"_index":229,"title":{"interfaces/IResizable.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["irrevocable",{"_index":1346,"title":{},"body":{"license.html":{}}}],["irrevocably",{"_index":1288,"title":{},"body":{"license.html":{}}}],["isactive",{"_index":290,"title":{},"body":{"classes/DebugGUI.html":{}}}],["isenvmappable",{"_index":423,"title":{},"body":{"classes/Environment.html":{}}}],["isenvmappable(material",{"_index":441,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["isize",{"_index":237,"title":{"interfaces/ISize.html":{}},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["isource",{"_index":628,"title":{"interfaces/ISource.html":{}},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["issues",{"_index":897,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["it's",{"_index":1110,"title":{},"body":{"index.html":{}}}],["item",{"_index":759,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["item.dispose",{"_index":803,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["item.scene.traverse((object",{"_index":800,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["items",{"_index":720,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemsloaded",{"_index":740,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["itemstotal",{"_index":741,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["iupdatable",{"_index":64,"title":{"interfaces/IUpdatable.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"classes/World.html":{},"coverage.html":{}}}],["iv",{"_index":1245,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1083,"title":{},"body":{"index.html":{}}}],["journey",{"_index":1046,"title":{},"body":{"index.html":{}}}],["judged",{"_index":1332,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1146,"title":{},"body":{"license.html":{}}}],["karma/jasmine",{"_index":1088,"title":{},"body":{"index.html":{}}}],["keep",{"_index":676,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["key",{"_index":405,"title":{},"body":{"classes/Engine.html":{}}}],["kind",{"_index":1374,"title":{},"body":{"license.html":{}}}],["kindly",{"_index":1043,"title":{},"body":{"index.html":{}}}],["kit",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["knowledge",{"_index":1218,"title":{},"body":{"license.html":{}}}],["known",{"_index":1297,"title":{},"body":{"license.html":{}}}],["large",{"_index":1313,"title":{},"body":{"license.html":{}}}],["latent",{"_index":1382,"title":{},"body":{"license.html":{}}}],["later",{"_index":1176,"title":{},"body":{"license.html":{}}}],["law",{"_index":1125,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1145,"title":{},"body":{"license.html":{}}}],["leaks",{"_index":583,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["left",{"_index":361,"title":{},"body":{"classes/Engine.html":{}}}],["legal",{"_index":1120,"title":{},"body":{"license.html":{}}}],["legally",{"_index":1333,"title":{},"body":{"license.html":{}}}],["legend",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["lessons",{"_index":1041,"title":{},"body":{"index.html":{}}}],["liability",{"_index":1140,"title":{},"body":{"license.html":{}}}],["library",{"_index":300,"title":{},"body":{"classes/DebugGUI.html":{}}}],["license",{"_index":1117,"title":{"license.html":{}},"body":{"license.html":{}}}],["licensed",{"_index":1369,"title":{},"body":{"license.html":{}}}],["lifecycle",{"_index":339,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{}}}],["light",{"_index":434,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["lights",{"_index":418,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/World.html":{}}}],["likeness",{"_index":1243,"title":{},"body":{"license.html":{}}}],["lil",{"_index":62,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"dependencies.html":{},"index.html":{}}}],["limitation",{"_index":1189,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1252,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1225,"title":{},"body":{"license.html":{}}}],["link",{"_index":400,"title":{},"body":{"classes/Engine.html":{}}}],["list",{"_index":47,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["list.ts",{"_index":958,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["listen",{"_index":603,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{}}}],["listens",{"_index":661,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{}}}],["literal",{"_index":33,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{}}}],["load",{"_index":731,"title":{},"body":{"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"miscellaneous/variables.html":{}}}],["loaded",{"_index":38,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["loader",{"_index":87,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["loaders",{"_index":1060,"title":{},"body":{"index.html":{}}}],["loading",{"_index":714,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loadingmanager",{"_index":721,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["loads",{"_index":921,"title":{},"body":{"classes/World.html":{}}}],["loop",{"_index":852,"title":{},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["made",{"_index":863,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["main",{"_index":887,"title":{},"body":{"injectables/TimeService.html":{}}}],["makes",{"_index":612,"title":{},"body":{"interfaces/IPointerSensible.html":{},"license.html":{}}}],["manager",{"_index":745,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mandatory",{"_index":630,"title":{},"body":{"interfaces/ISource.html":{}}}],["many",{"_index":1066,"title":{},"body":{"index.html":{}}}],["map",{"_index":427,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"index.html":{}}}],["maps",{"_index":462,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["march",{"_index":1267,"title":{},"body":{"license.html":{}}}],["matching",{"_index":166,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":442,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"index.html":{}}}],["materials",{"_index":430,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["math.min(window.devicepixelratio",{"_index":833,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["math.pi",{"_index":563,"title":{},"body":{"classes/Floor.html":{}}}],["max(10",{"_index":491,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(4",{"_index":508,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["max(5",{"_index":498,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["maximum",{"_index":1304,"title":{},"body":{"license.html":{}}}],["meaning",{"_index":1219,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1307,"title":{},"body":{"license.html":{}}}],["member",{"_index":1312,"title":{},"body":{"license.html":{}}}],["memory",{"_index":582,"title":{},"body":{"interfaces/IDestroyable.html":{},"classes/World.html":{}}}],["merchantability",{"_index":1378,"title":{},"body":{"license.html":{}}}],["mesh",{"_index":55,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["mesh(geometry",{"_index":1109,"title":{},"body":{"index.html":{}}}],["mesh(this.geometry",{"_index":531,"title":{},"body":{"classes/Floor.html":{}}}],["meshbasicmaterial",{"_index":1107,"title":{},"body":{"index.html":{}}}],["meshes",{"_index":122,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["meshlambertmaterial",{"_index":452,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphongmaterial",{"_index":453,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshphysicalmaterial",{"_index":454,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["meshstandardmaterial",{"_index":455,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["metadata",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["method",{"_index":645,"title":{},"body":{"interfaces/IUpdatable.html":{},"index.html":{}}}],["methods",{"_index":16,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["min",{"_index":496,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["min(0",{"_index":490,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["miscellaneous",{"_index":988,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":785,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["mixer",{"_index":30,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["model",{"_index":91,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["modelgroup",{"_index":92,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["models",{"_index":716,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["modify",{"_index":1179,"title":{},"body":{"license.html":{}}}],["module",{"_index":202,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":204,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["moral",{"_index":1233,"title":{},"body":{"license.html":{}}}],["more",{"_index":1112,"title":{},"body":{"index.html":{}}}],["motivations",{"_index":1203,"title":{},"body":{"license.html":{}}}],["move",{"_index":371,"title":{},"body":{"classes/Engine.html":{}}}],["multiple",{"_index":635,"title":{},"body":{"interfaces/ISource.html":{}}}],["name",{"_index":27,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name('envmapintensity",{"_index":507,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightintensity",{"_index":489,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightx",{"_index":495,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlighty",{"_index":500,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["name('sunlightz",{"_index":502,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["namespace",{"_index":1095,"title":{},"body":{"index.html":{}}}],["national",{"_index":1271,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":1393,"title":{},"body":{"license.html":{}}}],["need",{"_index":335,"title":{},"body":{"classes/Engine.html":{},"interfaces/IDestroyable.html":{},"index.html":{}}}],["needs",{"_index":620,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["neighboring",{"_index":1223,"title":{},"body":{"license.html":{}}}],["new",{"_index":112,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"index.html":{}}}],["newaction",{"_index":74,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.crossfadefrom(oldaction",{"_index":80,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.play",{"_index":79,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["newaction.reset",{"_index":78,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["next",{"_index":647,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["ng",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":847,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngoninit",{"_index":848,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["ngzone",{"_index":659,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["non",{"_index":1343,"title":{},"body":{"license.html":{}}}],["none",{"_index":298,"title":{},"body":{"classes/DebugGUI.html":{}}}],["normal",{"_index":535,"title":{},"body":{"classes/Floor.html":{},"index.html":{}}}],["normalmap",{"_index":527,"title":{},"body":{"classes/Floor.html":{}}}],["notes",{"_index":1093,"title":{},"body":{"index.html":{}}}],["notified",{"_index":604,"title":{},"body":{"interfaces/IListenable.html":{}}}],["notifies",{"_index":750,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["now",{"_index":1009,"title":{},"body":{"index.html":{},"license.html":{}}}],["npm",{"_index":1016,"title":{},"body":{"index.html":{}}}],["null",{"_index":511,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["number",{"_index":458,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISize.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"license.html":{}}}],["object",{"_index":416,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"classes/ResourceLoader.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["object.geometry.dispose",{"_index":801,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["object.material.dispose",{"_index":802,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["objects",{"_index":356,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"classes/ResourceLoader.html":{},"miscellaneous/typealiases.html":{}}}],["obligation",{"_index":1401,"title":{},"body":{"license.html":{}}}],["observable",{"_index":601,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{}}}],["obtainable",{"_index":1076,"title":{},"body":{"index.html":{}}}],["obtaining",{"_index":1392,"title":{},"body":{"license.html":{}}}],["obviously",{"_index":1053,"title":{},"body":{"index.html":{}}}],["occasions",{"_index":606,"title":{},"body":{"interfaces/IListenable.html":{}}}],["occurs",{"_index":758,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["offers",{"_index":1372,"title":{},"body":{"license.html":{}}}],["old",{"_index":592,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["oldaction",{"_index":76,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["onchange",{"_index":509,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["ondestroy",{"_index":843,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["one",{"_index":593,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["onerror",{"_index":723,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onerror(url",{"_index":754,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["oninit",{"_index":842,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["onload",{"_index":724,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress",{"_index":725,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["onprogress(url",{"_index":765,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["operation",{"_index":1414,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["opinion",{"_index":1111,"title":{},"body":{"index.html":{}}}],["optimization",{"_index":439,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["option",{"_index":1091,"title":{},"body":{"index.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["orbitcontrols",{"_index":269,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orbitcontrols(camera",{"_index":282,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["orchestrates",{"_index":315,"title":{},"body":{"classes/Engine.html":{}}}],["organized",{"_index":1068,"title":{},"body":{"index.html":{}}}],["original",{"_index":1159,"title":{},"body":{"license.html":{}}}],["others",{"_index":1202,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1370,"title":{},"body":{"license.html":{}}}],["out",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"overview.html":{}}}],["outside",{"_index":653,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["over",{"_index":1087,"title":{},"body":{"index.html":{}}}],["overkill",{"_index":824,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["overtly",{"_index":1287,"title":{},"body":{"license.html":{}}}],["overview",{"_index":1405,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1010,"title":{},"body":{"index.html":{},"license.html":{}}}],["owner(s",{"_index":1158,"title":{},"body":{"license.html":{}}}],["owners",{"_index":1165,"title":{},"body":{"license.html":{}}}],["package",{"_index":969,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["painful",{"_index":1078,"title":{},"body":{"index.html":{}}}],["panel",{"_index":135,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["paragraph",{"_index":1253,"title":{},"body":{"license.html":{}}}],["param",{"_index":71,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["parent",{"_index":329,"title":{},"body":{"classes/Engine.html":{}}}],["parliament",{"_index":1264,"title":{},"body":{"license.html":{}}}],["part",{"_index":865,"title":{},"body":{"components/ThreeViewerComponent.html":{},"license.html":{}}}],["partial",{"_index":1352,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1380,"title":{},"body":{"license.html":{}}}],["party",{"_index":1399,"title":{},"body":{"license.html":{}}}],["passing",{"_index":367,"title":{},"body":{"classes/Engine.html":{}}}],["patent",{"_index":1364,"title":{},"body":{"license.html":{}}}],["path",{"_index":631,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pathlist",{"_index":632,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["pattern",{"_index":1073,"title":{},"body":{"index.html":{}}}],["pcfshadowmap",{"_index":696,"title":{},"body":{"classes/RendererHolder.html":{}}}],["perform",{"_index":1229,"title":{},"body":{"license.html":{}}}],["performance",{"_index":896,"title":{},"body":{"injectables/TimeService.html":{},"index.html":{}}}],["performer(s",{"_index":1236,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":1167,"title":{},"body":{"license.html":{}}}],["permissible",{"_index":1387,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1395,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1284,"title":{},"body":{"license.html":{}}}],["person",{"_index":1208,"title":{},"body":{"license.html":{}}}],["person's",{"_index":1241,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1391,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":226,"title":{},"body":{"classes/CameraHolder.html":{}}}],["perspectivecamera",{"_index":235,"title":{},"body":{"classes/CameraHolder.html":{}}}],["pertaining",{"_index":1240,"title":{},"body":{"license.html":{}}}],["pixel",{"_index":376,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["pixelratio",{"_index":626,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["play",{"_index":17,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["play(name",{"_index":40,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playidle",{"_index":146,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playrunning",{"_index":150,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["plays",{"_index":43,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["playwalking",{"_index":148,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["pointer",{"_index":366,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{},"components/ThreeViewerComponent.html":{}}}],["pointerevent",{"_index":363,"title":{},"body":{"classes/Engine.html":{},"injectables/PointerService.html":{}}}],["pointermove",{"_index":613,"title":{},"body":{"interfaces/IPointerSensible.html":{},"injectables/PointerService.html":{},"index.html":{}}}],["pointerservice",{"_index":649,"title":{"injectables/PointerService.html":{}},"body":{"injectables/PointerService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"index.html":{}}}],["position",{"_index":438,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{}}}],["possesses",{"_index":449,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["possible",{"_index":1184,"title":{},"body":{"license.html":{}}}],["present",{"_index":915,"title":{},"body":{"classes/World.html":{},"license.html":{}}}],["preserved",{"_index":1336,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":663,"title":{},"body":{"injectables/PointerService.html":{}}}],["privacy",{"_index":1239,"title":{},"body":{"license.html":{}}}],["private",{"_index":89,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["processes",{"_index":673,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["product",{"_index":88,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["production",{"_index":1197,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":287,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["project's",{"_index":715,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["promote",{"_index":1192,"title":{},"body":{"license.html":{}}}],["promotional",{"_index":1310,"title":{},"body":{"license.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"properties.html":{}}}],["property",{"_index":786,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["protected",{"_index":1222,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1246,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1269,"title":{},"body":{"license.html":{}}}],["provide",{"_index":594,"title":{},"body":{"interfaces/IExperienceTime.html":{},"license.html":{}}}],["provided",{"_index":1137,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":680,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["provides",{"_index":1042,"title":{},"body":{"index.html":{},"license.html":{}}}],["public",{"_index":1173,"title":{},"body":{"license.html":{}}}],["publicity",{"_index":1238,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":1214,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1144,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1187,"title":{},"body":{"license.html":{}}}],["put",{"_index":1098,"title":{},"body":{"index.html":{}}}],["quick",{"_index":999,"title":{},"body":{"index.html":{}}}],["quiet",{"_index":1325,"title":{},"body":{"license.html":{}}}],["r141",{"_index":997,"title":{},"body":{"index.html":{}}}],["ratio",{"_index":377,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["raw",{"_index":980,"title":{},"body":{"dependencies.html":{}}}],["reach",{"_index":1116,"title":{},"body":{"index.html":{}}}],["reacts",{"_index":365,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer",{"_index":325,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["reacttopointer(pointerevent",{"_index":362,"title":{},"body":{"classes/Engine.html":{}}}],["readonly",{"_index":14,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["ready",{"_index":934,"title":{},"body":{"classes/World.html":{},"index.html":{}}}],["reason",{"_index":1331,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":543,"title":{},"body":{"classes/Floor.html":{}}}],["recommend",{"_index":1047,"title":{},"body":{"index.html":{}}}],["redistribute",{"_index":1182,"title":{},"body":{"license.html":{}}}],["reference",{"_index":328,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["regarding",{"_index":1135,"title":{},"body":{"license.html":{}}}],["regards",{"_index":1250,"title":{},"body":{"license.html":{}}}],["reinhardtonemapping",{"_index":697,"title":{},"body":{"classes/RendererHolder.html":{}}}],["related",{"_index":1152,"title":{},"body":{"license.html":{}}}],["relationship",{"_index":1132,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":1174,"title":{},"body":{"license.html":{}}}],["relinquish",{"_index":1168,"title":{},"body":{"license.html":{}}}],["reload",{"_index":1033,"title":{},"body":{"index.html":{}}}],["remainder",{"_index":1356,"title":{},"body":{"license.html":{}}}],["remaining",{"_index":1358,"title":{},"body":{"license.html":{}}}],["removes",{"_index":162,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["render",{"_index":688,"title":{},"body":{"classes/RendererHolder.html":{}}}],["renderer",{"_index":318,"title":{},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{}}}],["rendererholder",{"_index":321,"title":{"classes/RendererHolder.html":{}},"body":{"classes/Engine.html":{},"classes/RendererHolder.html":{},"coverage.html":{}}}],["rendererholder(this.scene",{"_index":388,"title":{},"body":{"classes/Engine.html":{}}}],["renders",{"_index":693,"title":{},"body":{"classes/RendererHolder.html":{}}}],["repeatwrapping",{"_index":551,"title":{},"body":{"classes/Floor.html":{}}}],["repo",{"_index":1007,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1004,"title":{},"body":{"index.html":{}}}],["representations",{"_index":1373,"title":{},"body":{"license.html":{}}}],["representing",{"_index":417,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["represents",{"_index":1413,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["reproduce",{"_index":1227,"title":{},"body":{"license.html":{}}}],["reputation",{"_index":1199,"title":{},"body":{"license.html":{}}}],["requests",{"_index":280,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["required",{"_index":636,"title":{},"body":{"interfaces/ISource.html":{},"license.html":{}}}],["rescission",{"_index":1320,"title":{},"body":{"license.html":{}}}],["reserved",{"_index":585,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["reset",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resizable.resize(size",{"_index":397,"title":{},"body":{"classes/Engine.html":{}}}],["resizablelist",{"_index":322,"title":{},"body":{"classes/Engine.html":{}}}],["resize",{"_index":231,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["resize(size",{"_index":236,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resized",{"_index":344,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{}}}],["resizes",{"_index":373,"title":{},"body":{"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["resizing",{"_index":622,"title":{},"body":{"interfaces/IResizable.html":{}}}],["resource",{"_index":101,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{}}}],["resource/resourceloader",{"_index":53,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/World.html":{}}}],["resource/sources",{"_index":929,"title":{},"body":{"classes/World.html":{}}}],["resourceloader",{"_index":52,"title":{"classes/ResourceLoader.html":{}},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{}}}],["resourceloader(sourcelist",{"_index":919,"title":{},"body":{"classes/World.html":{}}}],["resources",{"_index":358,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"interfaces/IDestroyable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"miscellaneous/variables.html":{}}}],["respect",{"_index":1360,"title":{},"body":{"license.html":{}}}],["responsibility",{"_index":1389,"title":{},"body":{"license.html":{}}}],["result",{"_index":1417,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resulting",{"_index":1142,"title":{},"body":{"license.html":{}}}],["results",{"_index":165,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retained",{"_index":1234,"title":{},"body":{"license.html":{}}}],["return",{"_index":309,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IListenable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/typealiases.html":{}}}],["reuse",{"_index":1181,"title":{},"body":{"license.html":{}}}],["revocation",{"_index":1319,"title":{},"body":{"license.html":{}}}],["reworked",{"_index":1049,"title":{},"body":{"index.html":{}}}],["right",{"_index":1100,"title":{},"body":{"index.html":{},"license.html":{}}}],["rights",{"_index":1153,"title":{},"body":{"license.html":{}}}],["root",{"_index":90,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["root'},{'name",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["royalty",{"_index":1342,"title":{},"body":{"license.html":{}}}],["run",{"_index":1023,"title":{},"body":{"index.html":{}}}],["runs",{"_index":840,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["rxjs",{"_index":610,"title":{},"body":{"interfaces/IListenable.html":{},"classes/ResourceLoader.html":{},"classes/World.html":{},"dependencies.html":{}}}],["same",{"_index":595,"title":{},"body":{"interfaces/IExperienceTime.html":{}}}],["scene",{"_index":56,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"index.html":{}}}],["scientific",{"_index":1172,"title":{},"body":{"license.html":{}}}],["screen",{"_index":627,"title":{},"body":{"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{}}}],["screensizeservice",{"_index":248,"title":{"injectables/ScreenSizeService.html":{}},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["screensizeservice.getheight",{"_index":835,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getpixelratio",{"_index":836,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["screensizeservice.getsize",{"_index":252,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["screensizeservice.getwidth",{"_index":834,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["see",{"_index":1021,"title":{},"body":{"index.html":{}}}],["selector",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["sensible",{"_index":401,"title":{},"body":{"classes/Engine.html":{},"interfaces/IPointerSensible.html":{}}}],["serve",{"_index":1015,"title":{},"body":{"index.html":{}}}],["serveby",{"_index":1018,"title":{},"body":{"index.html":{}}}],["service",{"_index":652,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["service/size/isize",{"_index":246,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{}}}],["service/size/screen",{"_index":249,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["service/time/iexperiencetime",{"_index":69,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["service/type/consumer",{"_index":616,"title":{},"body":{"interfaces/IPointerSensible.html":{}}}],["services",{"_index":1127,"title":{},"body":{"license.html":{}}}],["set",{"_index":662,"title":{},"body":{"injectables/PointerService.html":{},"index.html":{}}}],["setconsumer",{"_index":657,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setconsumer(consumer",{"_index":666,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["sets",{"_index":116,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["setting",{"_index":446,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["settings",{"_index":341,"title":{},"body":{"classes/Engine.html":{}}}],["shadow",{"_index":121,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["shadows",{"_index":544,"title":{},"body":{"classes/Floor.html":{}}}],["shall",{"_index":1318,"title":{},"body":{"license.html":{}}}],["show",{"_index":357,"title":{},"body":{"classes/Engine.html":{}}}],["similar",{"_index":1278,"title":{},"body":{"license.html":{}}}],["simon",{"_index":1039,"title":{},"body":{"index.html":{}}}],["simply",{"_index":1097,"title":{},"body":{"index.html":{}}}],["single",{"_index":633,"title":{},"body":{"interfaces/ISource.html":{},"miscellaneous/typealiases.html":{}}}],["singleton",{"_index":293,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["size",{"_index":241,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Engine.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["size.height",{"_index":265,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{}}}],["size.service",{"_index":250,"title":{},"body":{"classes/CameraHolder.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["size.service.ts",{"_index":812,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["size.service.ts:11",{"_index":817,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:27",{"_index":826,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:34",{"_index":820,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:41",{"_index":821,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:48",{"_index":825,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:61",{"_index":827,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.service.ts:68",{"_index":828,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["size.width",{"_index":264,"title":{},"body":{"classes/CameraHolder.html":{}}}],["slot",{"_index":675,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["source.path",{"_index":782,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.pathlist",{"_index":793,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["source.type",{"_index":779,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourcelist",{"_index":730,"title":{},"body":{"classes/ResourceLoader.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sourceloaded",{"_index":726,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sourceloaded(source",{"_index":768,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["sources",{"_index":637,"title":{},"body":{"interfaces/ISource.html":{},"classes/World.html":{}}}],["sourcetype",{"_index":639,"title":{},"body":{"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{}}}],["sourcetype.cube_texture",{"_index":792,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.gltf",{"_index":781,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["sourcetype.texture",{"_index":790,"title":{},"body":{"classes/ResourceLoader.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":1035,"title":{},"body":{"index.html":{}}}],["specific",{"_index":605,"title":{},"body":{"interfaces/IListenable.html":{}}}],["src/.../consumer.ts",{"_index":1410,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../environment.prod.ts",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../isource.ts",{"_index":990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../resourceloader.ts",{"_index":1411,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sources",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/three",{"_index":6,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IListenable.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["srgbencoding",{"_index":456,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["stack",{"_index":995,"title":{},"body":{"index.html":{}}}],["start",{"_index":590,"title":{},"body":{"interfaces/IExperienceTime.html":{},"injectables/TimeService.html":{},"index.html":{}}}],["started",{"_index":992,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["startloading",{"_index":727,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startor",{"_index":1017,"title":{},"body":{"index.html":{}}}],["starts",{"_index":772,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["startup",{"_index":1062,"title":{},"body":{"index.html":{}}}],["state",{"_index":303,"title":{},"body":{"classes/DebugGUI.html":{},"interfaces/IUpdatable.html":{}}}],["statement",{"_index":1329,"title":{},"body":{"license.html":{}}}],["statements",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":288,"title":{},"body":{"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["statically",{"_index":1029,"title":{},"body":{"index.html":{}}}],["statutory",{"_index":1377,"title":{},"body":{"license.html":{}}}],["step(0.001",{"_index":492,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["stream",{"_index":609,"title":{},"body":{"interfaces/IListenable.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Fox.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{}}}],["styles",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["styleurls",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["subject",{"_index":1251,"title":{},"body":{"license.html":{}}}],["sublicensable",{"_index":1345,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":932,"title":{},"body":{"classes/World.html":{}}}],["subscribers",{"_index":751,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["subscription",{"_index":913,"title":{},"body":{"classes/World.html":{}}}],["subsequent",{"_index":1157,"title":{},"body":{"license.html":{}}}],["successor",{"_index":1275,"title":{},"body":{"license.html":{}}}],["successors",{"_index":1316,"title":{},"body":{"license.html":{}}}],["such",{"_index":1260,"title":{},"body":{"license.html":{}}}],["sunlight",{"_index":420,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["support",{"_index":1402,"title":{},"body":{"modules.html":{}}}],["supported",{"_index":429,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["supports",{"_index":461,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["sure",{"_index":1031,"title":{},"body":{"index.html":{}}}],["surrendered",{"_index":1368,"title":{},"body":{"license.html":{}}}],["surrenders",{"_index":1292,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1403,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":778,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["switching",{"_index":133,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["symbolizes",{"_index":618,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{}}}],["table",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["taking",{"_index":1337,"title":{},"body":{"license.html":{}}}],["template",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["terminal",{"_index":1014,"title":{},"body":{"index.html":{}}}],["termination",{"_index":1322,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1217,"title":{},"body":{"license.html":{}}}],["territories",{"_index":1302,"title":{},"body":{"license.html":{}}}],["test",{"_index":1058,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1086,"title":{},"body":{"index.html":{}}}],["texture",{"_index":457,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"interfaces/ISource.html":{},"classes/ResourceLoader.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["textureloader",{"_index":722,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textureloader(this.loadingmanager",{"_index":746,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["textures",{"_index":518,"title":{},"body":{"classes/Floor.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["thanks",{"_index":1036,"title":{},"body":{"index.html":{}}}],["thereof",{"_index":1273,"title":{},"body":{"license.html":{}}}],["thing",{"_index":1050,"title":{},"body":{"index.html":{}}}],["this.actions['current",{"_index":77,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.actions[name",{"_index":75,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder",{"_index":111,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current",{"_index":143,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['current'].play",{"_index":144,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['idle",{"_index":137,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['running",{"_index":141,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.actions['walking",{"_index":139,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[0",{"_index":138,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[1",{"_index":140,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.clipaction(this.gltf.animations[2",{"_index":142,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.mixer.update(experiencetime.delta",{"_index":160,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('idle",{"_index":147,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('running",{"_index":151,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.animationholder.play('walking",{"_index":149,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.camera",{"_index":712,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.cameraholder",{"_index":385,"title":{},"body":{"classes/Engine.html":{}}}],["this.cameraholder.instance",{"_index":389,"title":{},"body":{"classes/Engine.html":{}}}],["this.canvasref",{"_index":872,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.configureanimation",{"_index":115,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configureenvironmentmap",{"_index":478,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuremesh",{"_index":553,"title":{},"body":{"classes/Floor.html":{}}}],["this.configuremodel",{"_index":114,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.configuresunlight",{"_index":468,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.configuretextures",{"_index":552,"title":{},"body":{"classes/Floor.html":{}}}],["this.controlsholder",{"_index":390,"title":{},"body":{"classes/Engine.html":{}}}],["this.cubetextureloader.load",{"_index":794,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.debugfolder",{"_index":105,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(debugobject",{"_index":152,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.debugfolder.add(this.environmentmap",{"_index":506,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder.add(this.sunlight.position",{"_index":493,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debugfolder?.add(this.sunlight",{"_index":488,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.debuggui",{"_index":352,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist",{"_index":395,"title":{},"body":{"classes/Engine.html":{}}}],["this.destroyablelist.foreach((destroyable",{"_index":411,"title":{},"body":{"classes/Engine.html":{}}}],["this.engine",{"_index":874,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.destroy",{"_index":885,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.reacttopointer(pointerevent",{"_index":884,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.resize(size",{"_index":882,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engine?.update(experiencetime",{"_index":877,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.engineconsumer",{"_index":684,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.engineconsumer(pointerevent",{"_index":683,"title":{},"body":{"injectables/PointerService.html":{}}}],["this.engineconsumer(screensizeservice.getsize",{"_index":830,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["this.engineconsumer(this.experiencetime",{"_index":907,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.environment",{"_index":940,"title":{},"body":{"classes/World.html":{}}}],["this.environment?.destroy",{"_index":947,"title":{},"body":{"classes/World.html":{}}}],["this.environmentmap",{"_index":469,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.intensity",{"_index":476,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture",{"_index":474,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.texture.encoding",{"_index":503,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.environmentmap.updatematerials",{"_index":505,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.eventemitter.asobservable",{"_index":798,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.eventemitter.emit",{"_index":806,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.experiencetime",{"_index":910,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.current",{"_index":904,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.delta",{"_index":903,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.elapsed",{"_index":905,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.experiencetime.start",{"_index":906,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.floor",{"_index":935,"title":{},"body":{"classes/World.html":{}}}],["this.floor?.destroy",{"_index":945,"title":{},"body":{"classes/World.html":{}}}],["this.fox",{"_index":938,"title":{},"body":{"classes/World.html":{}}}],["this.fox.update(experiencetime",{"_index":942,"title":{},"body":{"classes/World.html":{}}}],["this.fox?.destroy",{"_index":946,"title":{},"body":{"classes/World.html":{}}}],["this.geometry.dispose",{"_index":568,"title":{},"body":{"classes/Floor.html":{}}}],["this.gltf",{"_index":107,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltf.scene",{"_index":110,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.gltfloader.load",{"_index":787,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.instance",{"_index":253,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/RendererHolder.html":{}}}],["this.instance.aspect",{"_index":263,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.destroy",{"_index":311,"title":{},"body":{"classes/DebugGUI.html":{}}}],["this.instance.dispose",{"_index":285,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/RendererHolder.html":{}}}],["this.instance.enabledamping",{"_index":283,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.outputencoding",{"_index":701,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.physicallycorrectlights",{"_index":700,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.position.set(6",{"_index":259,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.instance.render(this.scene",{"_index":711,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setclearcolor('#211d20",{"_index":706,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(initialsize.pixelratio",{"_index":708,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setpixelratio(size.pixelratio",{"_index":710,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(initialsize.width",{"_index":707,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.setsize(size.width",{"_index":709,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.enabled",{"_index":704,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.shadowmap.type",{"_index":705,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemapping",{"_index":702,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.tonemappingexposure",{"_index":703,"title":{},"body":{"classes/RendererHolder.html":{}}}],["this.instance.update",{"_index":284,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["this.instance.updateprojectionmatrix",{"_index":266,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.items.foreach((item",{"_index":799,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.items.set(source.name",{"_index":797,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.material",{"_index":532,"title":{},"body":{"classes/Floor.html":{}}}],["this.material.dispose",{"_index":569,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.receiveshadow",{"_index":565,"title":{},"body":{"classes/Floor.html":{}}}],["this.mesh.rotation.x",{"_index":562,"title":{},"body":{"classes/Floor.html":{}}}],["this.modelgroup",{"_index":109,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.scale.set(0.02",{"_index":125,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.modelgroup.traverse((child",{"_index":128,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.ngzone.runoutsideangular",{"_index":681,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["this.onerror(url",{"_index":743,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onload",{"_index":739,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.onprogress(url",{"_index":742,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.pointerservice.setconsumer((pointerevent",{"_index":883,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.rendererholder",{"_index":387,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist",{"_index":394,"title":{},"body":{"classes/Engine.html":{}}}],["this.resizablelist.foreach((resizable",{"_index":396,"title":{},"body":{"classes/Engine.html":{}}}],["this.resourceloader",{"_index":937,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.destroy",{"_index":944,"title":{},"body":{"classes/World.html":{}}}],["this.resourceloader.items.get('environmentmaptexture",{"_index":471,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.resourceloader.items.get('foxmodel",{"_index":108,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.resourceloader.items.get('grasscolortexture",{"_index":534,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.items.get('grassnormaltexture",{"_index":536,"title":{},"body":{"classes/Floor.html":{}}}],["this.resourceloader.listen",{"_index":931,"title":{},"body":{"classes/World.html":{}}}],["this.scene.add(this.instance",{"_index":262,"title":{},"body":{"classes/CameraHolder.html":{}}}],["this.scene.add(this.mesh",{"_index":566,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.add(this.modelgroup",{"_index":127,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.add(this.sunlight",{"_index":487,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.environment",{"_index":504,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.remove(this.mesh",{"_index":567,"title":{},"body":{"classes/Floor.html":{}}}],["this.scene.remove(this.modelgroup",{"_index":164,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["this.scene.remove(this.sunlight",{"_index":510,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.scene.traverse((child",{"_index":403,"title":{},"body":{"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.screensizeservice.setconsumer((size",{"_index":881,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.sourcelist",{"_index":777,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.sourceloaded(source",{"_index":788,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.startloading",{"_index":776,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.subscription",{"_index":930,"title":{},"body":{"classes/World.html":{}}}],["this.subscription.unsubscribe",{"_index":943,"title":{},"body":{"classes/World.html":{}}}],["this.sunlight",{"_index":465,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.castshadow",{"_index":481,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.position.set(0.25",{"_index":479,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.camera.far",{"_index":482,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.mapsize.set(1024",{"_index":484,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.sunlight.shadow.normalbias",{"_index":486,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["this.textureloader.load",{"_index":791,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["this.textures.color",{"_index":526,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.encoding",{"_index":554,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.repeat.set(1.5",{"_index":555,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wraps",{"_index":557,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.color.wrapt",{"_index":558,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal",{"_index":528,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.repeat.set(1.5",{"_index":559,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wraps",{"_index":560,"title":{},"body":{"classes/Floor.html":{}}}],["this.textures.normal.wrapt",{"_index":561,"title":{},"body":{"classes/Floor.html":{}}}],["this.tick",{"_index":909,"title":{},"body":{"injectables/TimeService.html":{}}}],["this.timeservice.setconsumer((experiencetime",{"_index":876,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.timeservice.tick",{"_index":878,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["this.updatablelist",{"_index":392,"title":{},"body":{"classes/Engine.html":{}}}],["this.updatablelist.foreach((updatable",{"_index":398,"title":{},"body":{"classes/Engine.html":{}}}],["this.world",{"_index":393,"title":{},"body":{"classes/Engine.html":{}}}],["those",{"_index":1169,"title":{},"body":{"license.html":{}}}],["three",{"_index":57,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{},"dependencies.html":{},"index.html":{}}}],["three.boxbuffergeometry(1",{"_index":1101,"title":{},"body":{"index.html":{}}}],["three.mesh(geometry",{"_index":1104,"title":{},"body":{"index.html":{}}}],["three.meshbasicmaterial",{"_index":1102,"title":{},"body":{"index.html":{}}}],["three/examples/jsm/controls/orbitcontrols",{"_index":281,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["three/examples/jsm/loaders/gltfloader",{"_index":60,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"classes/ResourceLoader.html":{}}}],["three/src/animation/animationaction",{"_index":63,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{}}}],["three/src/cameras/camera",{"_index":698,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/renderers/webglrenderer",{"_index":695,"title":{},"body":{"classes/RendererHolder.html":{}}}],["three/src/scenes/scene",{"_index":247,"title":{},"body":{"classes/CameraHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{}}}],["threejs",{"_index":234,"title":{},"body":{"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["threeviewercomponent",{"_index":198,"title":{"components/ThreeViewerComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["through",{"_index":600,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{},"license.html":{}}}],["throughout",{"_index":1147,"title":{},"body":{"license.html":{}}}],["throw",{"_index":783,"title":{},"body":{"classes/ResourceLoader.html":{},"components/ThreeViewerComponent.html":{}}}],["throws",{"_index":871,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["tick",{"_index":350,"title":{},"body":{"classes/Engine.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["tiling",{"_index":548,"title":{},"body":{"classes/Floor.html":{}}}],["time",{"_index":158,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IUpdatable.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"license.html":{}}}],["timeservice",{"_index":850,"title":{"injectables/TimeService.html":{}},"body":{"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"coverage.html":{}}}],["title",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"license.html":{}}}],["tool",{"_index":94,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{}}}],["total",{"_index":767,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["track",{"_index":677,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["trademark",{"_index":1363,"title":{},"body":{"license.html":{}}}],["transferable",{"_index":1344,"title":{},"body":{"license.html":{}}}],["translate",{"_index":1231,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":1280,"title":{},"body":{"license.html":{}}}],["tree",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["triggered",{"_index":346,"title":{},"body":{"classes/Engine.html":{}}}],["triggering",{"_index":665,"title":{},"body":{"injectables/PointerService.html":{}}}],["triggers",{"_index":819,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["true",{"_index":132,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":984,"title":{},"body":{"dependencies.html":{}}}],["tweak",{"_index":95,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/World.html":{},"index.html":{}}}],["twitter",{"_index":1115,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IExperienceTime.html":{},"interfaces/IPointerSensible.html":{},"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"interfaces/ISource.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type/consumer",{"_index":679,"title":{},"body":{"injectables/PointerService.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["typealiases",{"_index":1408,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":408,"title":{},"body":{"classes/Engine.html":{}}}],["types/three",{"_index":998,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":1052,"title":{},"body":{"index.html":{}}}],["ui",{"_index":292,"title":{},"body":{"classes/DebugGUI.html":{},"index.html":{}}}],["unconditional",{"_index":1347,"title":{},"body":{"license.html":{}}}],["unconditionally",{"_index":1289,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":99,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/DebugGUI.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"components/ThreeViewerComponent.html":{},"classes/World.html":{}}}],["under",{"_index":1216,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1397,"title":{},"body":{"license.html":{}}}],["unfair",{"_index":1248,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1085,"title":{},"body":{"index.html":{}}}],["universal",{"_index":1123,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":1298,"title":{},"body":{"license.html":{}}}],["up",{"_index":117,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{},"index.html":{}}}],["updatable",{"_index":375,"title":{},"body":{"classes/Engine.html":{}}}],["updatable.update(experiencetime",{"_index":399,"title":{},"body":{"classes/Engine.html":{}}}],["updatablelist",{"_index":323,"title":{},"body":{"classes/Engine.html":{}}}],["update",{"_index":270,"title":{},"body":{"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/RendererHolder.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["update(experiencetime",{"_index":159,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Engine.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"classes/World.html":{}}}],["updated",{"_index":349,"title":{},"body":{"classes/Engine.html":{},"classes/World.html":{}}}],["updatematerials",{"_index":463,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["updates",{"_index":153,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Fox.html":{},"interfaces/IUpdatable.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["upon",{"_index":1155,"title":{},"body":{"license.html":{}}}],["url",{"_index":305,"title":{},"body":{"classes/DebugGUI.html":{},"classes/ResourceLoader.html":{},"index.html":{}}}],["url}.\\nloaded",{"_index":808,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["use",{"_index":1000,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":530,"title":{},"body":{"classes/Floor.html":{},"interfaces/IExperienceTime.html":{},"interfaces/ISource.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{}}}],["useful",{"_index":602,"title":{},"body":{"interfaces/IListenable.html":{},"index.html":{}}}],["using",{"_index":773,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["usual",{"_index":1096,"title":{},"body":{"index.html":{}}}],["util",{"_index":1074,"title":{},"body":{"index.html":{}}}],["v",{"_index":1255,"title":{},"body":{"license.html":{}}}],["v14",{"_index":996,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AnimationHolder.html":{},"components/AppComponent.html":{},"classes/Engine.html":{},"classes/Floor.html":{},"injectables/PointerService.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"injectables/TimeService.html":{},"classes/World.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.dispose",{"_index":409,"title":{},"body":{"classes/Engine.html":{}}}],["var",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/ThreeViewerComponent.html":{}}}],["variable",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1418,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1276,"title":{},"body":{"license.html":{},"properties.html":{}}}],["vi",{"_index":1259,"title":{},"body":{"license.html":{}}}],["viewchild",{"_index":866,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewchild('canvas",{"_index":860,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"classes/ControlsHolder.html":{},"classes/Engine.html":{},"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["viewer.component",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["viewer.component.html",{"_index":845,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.scss",{"_index":844,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts",{"_index":837,"title":{},"body":{"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:20",{"_index":861,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:25",{"_index":851,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:41",{"_index":856,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer.component.ts:58",{"_index":853,"title":{},"body":{"components/ThreeViewerComponent.html":{}}}],["viewer/engine/debug/debuggui.ts",{"_index":286,"title":{},"body":{"classes/DebugGUI.html":{},"coverage.html":{}}}],["viewer/engine/debug/debuggui.ts:10",{"_index":291,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:16",{"_index":296,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:31",{"_index":301,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/debug/debuggui.ts:38",{"_index":294,"title":{},"body":{"classes/DebugGUI.html":{}}}],["viewer/engine/engine.ts",{"_index":313,"title":{},"body":{"classes/Engine.html":{},"coverage.html":{}}}],["viewer/engine/engine.ts:100",{"_index":372,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:108",{"_index":378,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:117",{"_index":364,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:126",{"_index":359,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:24",{"_index":333,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:30",{"_index":347,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:36",{"_index":330,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:41",{"_index":340,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:46",{"_index":331,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:52",{"_index":353,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:58",{"_index":348,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:63",{"_index":343,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/engine.ts:68",{"_index":327,"title":{},"body":{"classes/Engine.html":{}}}],["viewer/engine/holder/cameraholder.ts",{"_index":224,"title":{},"body":{"classes/CameraHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/cameraholder.ts:14",{"_index":233,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/cameraholder.ts:36",{"_index":238,"title":{},"body":{"classes/CameraHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts",{"_index":268,"title":{},"body":{"classes/ControlsHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/controlsholder.ts:14",{"_index":274,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:29",{"_index":279,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/controlsholder.ts:36",{"_index":277,"title":{},"body":{"classes/ControlsHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts",{"_index":685,"title":{},"body":{"classes/RendererHolder.html":{},"coverage.html":{}}}],["viewer/engine/holder/rendererholder.ts:19",{"_index":687,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:57",{"_index":691,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:65",{"_index":692,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/holder/rendererholder.ts:72",{"_index":690,"title":{},"body":{"classes/RendererHolder.html":{}}}],["viewer/engine/interface/idestroyable.ts",{"_index":578,"title":{},"body":{"interfaces/IDestroyable.html":{},"coverage.html":{}}}],["viewer/engine/interface/idestroyable.ts:8",{"_index":584,"title":{},"body":{"interfaces/IDestroyable.html":{}}}],["viewer/engine/interface/ilistenable.ts",{"_index":598,"title":{},"body":{"interfaces/IListenable.html":{},"coverage.html":{}}}],["viewer/engine/interface/ilistenable.ts:11",{"_index":607,"title":{},"body":{"interfaces/IListenable.html":{}}}],["viewer/engine/interface/ipointersensible.ts",{"_index":611,"title":{},"body":{"interfaces/IPointerSensible.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts",{"_index":617,"title":{},"body":{"interfaces/IResizable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iresizable.ts:11",{"_index":621,"title":{},"body":{"interfaces/IResizable.html":{}}}],["viewer/engine/interface/iupdatable.ts",{"_index":643,"title":{},"body":{"interfaces/IUpdatable.html":{},"coverage.html":{}}}],["viewer/engine/interface/iupdatable.ts:11",{"_index":646,"title":{},"body":{"interfaces/IUpdatable.html":{}}}],["viewer/engine/resource/isource.ts",{"_index":629,"title":{},"body":{"interfaces/ISource.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["viewer/engine/resource/resourceloader.ts",{"_index":713,"title":{},"body":{"classes/ResourceLoader.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["viewer/engine/resource/resourceloader.ts:111",{"_index":769,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:118",{"_index":749,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:125",{"_index":748,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:144",{"_index":762,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:156",{"_index":766,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:165",{"_index":755,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:21",{"_index":738,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:26",{"_index":733,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:31",{"_index":744,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:40",{"_index":737,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:45",{"_index":747,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:50",{"_index":729,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/resourceloader.ts:63",{"_index":771,"title":{},"body":{"classes/ResourceLoader.html":{}}}],["viewer/engine/resource/sources",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts",{"_index":651,"title":{},"body":{"injectables/PointerService.html":{},"coverage.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:10",{"_index":660,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:31",{"_index":667,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/pointer/pointer.service.ts:38",{"_index":674,"title":{},"body":{"injectables/PointerService.html":{}}}],["viewer/engine/service/size/isize.ts",{"_index":625,"title":{},"body":{"interfaces/ISize.html":{},"coverage.html":{}}}],["viewer/engine/service/size/screen",{"_index":811,"title":{},"body":{"injectables/ScreenSizeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/iexperiencetime.ts",{"_index":587,"title":{},"body":{"interfaces/IExperienceTime.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts",{"_index":886,"title":{},"body":{"injectables/TimeService.html":{},"coverage.html":{}}}],["viewer/engine/service/time/time.service.ts:18",{"_index":901,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:23",{"_index":889,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:35",{"_index":893,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:52",{"_index":890,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:60",{"_index":892,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/time/time.service.ts:67",{"_index":898,"title":{},"body":{"injectables/TimeService.html":{}}}],["viewer/engine/service/type/consumer.ts",{"_index":1412,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["viewer/engine/world/environment.ts",{"_index":415,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"coverage.html":{}}}],["viewer/engine/world/environment.ts:107",{"_index":437,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:143",{"_index":435,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:163",{"_index":440,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:34",{"_index":513,"title":{},"body":{"interfaces/EnvironmentMapHolder.html":{}}}],["viewer/engine/world/environment.ts:45",{"_index":425,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:50",{"_index":432,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:56",{"_index":424,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/environment.ts:97",{"_index":443,"title":{},"body":{"classes/Environment.html":{}}}],["viewer/engine/world/floor.ts",{"_index":515,"title":{},"body":{"classes/Floor.html":{},"coverage.html":{}}}],["viewer/engine/world/floor.ts:14",{"_index":525,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:19",{"_index":537,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:27",{"_index":529,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:35",{"_index":521,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:51",{"_index":545,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:66",{"_index":539,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/floor.ts:75",{"_index":549,"title":{},"body":{"classes/Floor.html":{}}}],["viewer/engine/world/fox.ts",{"_index":7,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/Fox.html":{},"coverage.html":{}}}],["viewer/engine/world/fox.ts:111",{"_index":574,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:143",{"_index":577,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:150",{"_index":576,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:18",{"_index":36,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:20",{"_index":24,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:34",{"_index":42,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["viewer/engine/world/fox.ts:52",{"_index":572,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:57",{"_index":573,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:62",{"_index":571,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:67",{"_index":570,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/fox.ts:96",{"_index":575,"title":{},"body":{"classes/Fox.html":{}}}],["viewer/engine/world/world.ts",{"_index":911,"title":{},"body":{"classes/World.html":{},"coverage.html":{}}}],["viewer/engine/world/world.ts:22",{"_index":923,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:27",{"_index":920,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:33",{"_index":916,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:38",{"_index":918,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:43",{"_index":914,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:66",{"_index":928,"title":{},"body":{"classes/World.html":{}}}],["viewer/engine/world/world.ts:75",{"_index":927,"title":{},"body":{"classes/World.html":{}}}],["viewer/three",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/ThreeViewerComponent.html":{},"coverage.html":{}}}],["viewport",{"_index":240,"title":{},"body":{"classes/CameraHolder.html":{},"interfaces/IResizable.html":{},"classes/RendererHolder.html":{},"injectables/ScreenSizeService.html":{}}}],["vii",{"_index":1277,"title":{},"body":{"license.html":{}}}],["visibility",{"_index":1006,"title":{},"body":{"index.html":{}}}],["void",{"_index":50,"title":{},"body":{"classes/AnimationHolder.html":{},"classes/CameraHolder.html":{},"classes/ControlsHolder.html":{},"classes/DebugGUI.html":{},"classes/Engine.html":{},"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{},"classes/Floor.html":{},"classes/Fox.html":{},"interfaces/IDestroyable.html":{},"interfaces/IResizable.html":{},"interfaces/IUpdatable.html":{},"injectables/PointerService.html":{},"classes/RendererHolder.html":{},"classes/ResourceLoader.html":{},"injectables/ScreenSizeService.html":{},"components/ThreeViewerComponent.html":{},"injectables/TimeService.html":{},"classes/World.html":{}}}],["voluntarily",{"_index":1212,"title":{},"body":{"license.html":{}}}],["waived",{"_index":1366,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":1282,"title":{},"body":{"license.html":{}}}],["waives",{"_index":1290,"title":{},"body":{"license.html":{}}}],["want",{"_index":1099,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1134,"title":{},"body":{"license.html":{}}}],["way",{"_index":1048,"title":{},"body":{"index.html":{}}}],["webgl",{"_index":686,"title":{},"body":{"classes/RendererHolder.html":{},"components/ThreeViewerComponent.html":{}}}],["webglrenderer",{"_index":689,"title":{},"body":{"classes/RendererHolder.html":{}}}],["well",{"_index":1300,"title":{},"body":{"license.html":{}}}],["whatsoever",{"_index":1186,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1296,"title":{},"body":{"license.html":{}}}],["whole",{"_index":841,"title":{},"body":{"components/ThreeViewerComponent.html":{},"index.html":{}}}],["width",{"_index":623,"title":{},"body":{"interfaces/IResizable.html":{},"interfaces/ISize.html":{},"injectables/ScreenSizeService.html":{}}}],["window.addeventlistener('pointermove",{"_index":682,"title":{},"body":{"injectables/PointerService.html":{}}}],["window.addeventlistener('resize",{"_index":829,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerheight",{"_index":832,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.innerwidth",{"_index":831,"title":{},"body":{"injectables/ScreenSizeService.html":{}}}],["window.location.hash",{"_index":308,"title":{},"body":{"classes/DebugGUI.html":{}}}],["window.requestanimationframe",{"_index":908,"title":{},"body":{"injectables/TimeService.html":{}}}],["wish",{"_index":1166,"title":{},"body":{"license.html":{}}}],["without",{"_index":1077,"title":{},"body":{"index.html":{},"license.html":{}}}],["work",{"_index":1160,"title":{},"body":{"license.html":{}}}],["working",{"_index":1059,"title":{},"body":{"index.html":{}}}],["works",{"_index":1136,"title":{},"body":{"license.html":{}}}],["world",{"_index":324,"title":{"classes/World.html":{}},"body":{"classes/Engine.html":{},"classes/World.html":{},"coverage.html":{},"license.html":{}}}],["world(this.scene",{"_index":351,"title":{},"body":{"classes/Engine.html":{}}}],["world/world",{"_index":383,"title":{},"body":{"classes/Engine.html":{}}}],["worldwide",{"_index":1303,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1114,"title":{},"body":{"index.html":{}}}],["x",{"_index":494,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["y",{"_index":499,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["yes",{"_index":31,"title":{},"body":{"classes/AnimationHolder.html":{}}}],["z",{"_index":501,"title":{},"body":{"classes/Environment.html":{},"interfaces/EnvironmentMapHolder.html":{}}}],["zone.js",{"_index":986,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":209,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AnimationHolder.html":{"url":"classes/AnimationHolder.html","title":"class - AnimationHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimationHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Bundle for the animation information\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                actions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mixer: AnimationMixer, current?: AnimationAction)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        mixer\n                                                  \n                                                        \n                                                                    AnimationMixer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Mixer of the animation\n\n                                                        \n                                                \n                                                \n                                                        current\n                                                  \n                                                        \n                                                                    AnimationAction\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                Initial animation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        actions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:18\n                        \n                    \n\n            \n                \n                    Dictionary of loaded GLTF animation actions\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        play\n                        \n                    \n                \n            \n            \n                \nplay(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:34\n                \n            \n\n\n            \n                \n                    Plays the animation corresponding to the name.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the animation action to play. Should exist in the list of available actions.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular application bootstrap component\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-three-starter-kit'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n            \n                \n                    Title of the application\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Angular application bootstrap component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  /**\n   * Title of the application\n   */\n  title = 'ng-three-starter-kit';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            ThreeViewerComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { ThreeViewerComponent } from './three-viewer/three-viewer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ThreeViewerComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CameraHolder.html":{"url":"classes/CameraHolder.html","title":"class - CameraHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CameraHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/CameraHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder of the perspective camera chosen for the scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the camera to it.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PerspectiveCamera\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS camera.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/CameraHolder.ts:36\n                \n            \n\n\n            \n                \n                    Change the camera properties to follow the viewport size changes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size to consider for the calculations\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IResizable } from '../interface/IResizable';\nimport { ISize } from '../service/size/ISize';\nimport { PerspectiveCamera } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder of the perspective camera chosen for the scene.\n */\nexport class CameraHolder implements IResizable {\n  /**\n   * Instance of the ThreeJS camera.\n   */\n  readonly instance: PerspectiveCamera;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the camera to it.\n   */\n  constructor(private readonly scene: Scene) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new PerspectiveCamera(\n      35,\n      initialSize.width / initialSize.height,\n      0.1,\n      100\n    );\n    this.instance.position.set(6, 4, 8);\n    this.scene.add(this.instance);\n  }\n\n  /**\n   * Change the camera properties to follow the viewport size changes.\n   * @param size New size to consider for the calculations\n   */\n  resize(size: ISize): void {\n    this.instance.aspect = size.width / size.height;\n    this.instance.updateProjectionMatrix();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ControlsHolder.html":{"url":"classes/ControlsHolder.html","title":"class - ControlsHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ControlsHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/ControlsHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder for the OrbitControls chosen for the camera\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Camera to bind to the controls\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrbitControls\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:14\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS OrbitControls\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:36\n                \n            \n\n\n            \n                \n                    Disposes of the controls\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/ControlsHolder.ts:29\n                \n            \n\n\n            \n                \n                    Requests update on the controls instance\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Camera } from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Holder for the OrbitControls chosen for the camera\n */\nexport class ControlsHolder implements IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS OrbitControls\n   * @private\n   */\n  private readonly instance: OrbitControls;\n\n  /**\n   * Constructor\n   * @param camera Camera to bind to the controls\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly camera: Camera, private readonly canvas: HTMLCanvasElement) {\n    this.instance = new OrbitControls(camera, canvas);\n    this.instance.enableDamping = true;\n  }\n\n  /**\n   * Requests update on the controls instance\n   */\n  update() {\n    this.instance.update();\n  }\n\n  /**\n   * Disposes of the controls\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DebugGUI.html":{"url":"classes/DebugGUI.html","title":"class - DebugGUI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DebugGUI\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/debug/DebugGUI.ts\n        \n\n\n            \n                Description\n            \n            \n                Debug tool panel from lil-gui to tweak the project\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                destroy\n                            \n                            \n                                    Static\n                                getUI\n                            \n                            \n                                    Static\n                                isActive\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:10\n                        \n                    \n\n            \n                \n                    lil-gui UI singleton instance\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        destroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    destroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:38\n                \n            \n\n\n            \n                \n                    Destroys the instance of lil-gui UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getUI\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUI()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:16\n                \n            \n\n\n            \n                \n                    Instantiates the UI if none is found, and returns it.\n\n\n                    \n                    \n                    \n                        Returns :     GUI | undefined\n\n                    \n                    \n                        A singleton instance of the lil-gui library\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/debug/DebugGUI.ts:31\n                \n            \n\n\n            \n                \n                    Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n\"#debug\"\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the DebugGUI is active, else false\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import GUI from 'lil-gui';\n\n/**\n * Debug tool panel from lil-gui to tweak the project\n */\nexport class DebugGUI {\n  /**\n   * lil-gui UI singleton instance\n   */\n  private static instance: GUI | undefined;\n\n  /**\n   * Instantiates the UI if none is found, and returns it.\n   * @returns A singleton instance of the lil-gui library\n   */\n  static getUI(): GUI | undefined {\n    if (window.location.hash !== '#debug') {\n      return undefined;\n    }\n    if (!DebugGUI.instance) {\n      DebugGUI.instance = new GUI();\n    }\n    return DebugGUI.instance;\n  }\n\n  /**\n   * Gives the state of the DebugGUI, which is by default, accessible only if in the URL of the application there is\n   * \"#debug\"\n   * @returns true if the DebugGUI is active, else false\n   */\n  static isActive(): boolean {\n    return !!this.instance && window.location.hash !== '#debug';\n  }\n\n  /**\n   * Destroys the instance of lil-gui UI\n   */\n  static destroy(): void {\n    if (this.instance) {\n      this.instance.destroy();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Engine.html":{"url":"classes/Engine.html","title":"class - Engine","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Engine\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/Engine.ts\n        \n\n\n            \n                Description\n            \n            \n                Core element of the viewer.\nIt orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\nrenderer, ...).\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n                            IPointerSensible\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cameraHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                controlsHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugGUI\n                            \n                            \n                                    Private\n                                    Readonly\n                                destroyableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                rendererHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                resizableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                scene\n                            \n                            \n                                    Private\n                                    Readonly\n                                updatableList\n                            \n                            \n                                    Private\n                                    Readonly\n                                world\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                reactToPointer\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the canvas of the parent viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cameraHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:36\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS camera.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        controlsHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:46\n                        \n                    \n\n            \n                \n                    Holder that binds the controls to the camera and sets the controls' parameters.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugGUI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DebugGUI()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:24\n                        \n                    \n\n            \n                \n                    Instance of the lil-gui panel to tweak your elements.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destroyableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IDestroyable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:68\n                        \n                    \n\n            \n                \n                    List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        rendererHolder\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:41\n                        \n                    \n\n            \n                \n                    Holder that sets up the ThreeJS renderer with all the settings of the experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resizableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IResizable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:63\n                        \n                    \n\n            \n                \n                    List of the elements that need to be resized when the event is triggered\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Scene()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:30\n                        \n                    \n\n            \n                \n                    ThreeJS scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        updatableList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IUpdatable[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:58\n                        \n                    \n\n            \n                \n                    List of the elements that need to be updated on each tick.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        world\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new World(this.scene, this.debugGUI)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/Engine.ts:52\n                        \n                    \n\n            \n                \n                    Container for all the 3D objects that will show up in the scene with their resources loaded.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:126\n                \n            \n\n\n            \n                \n                    Destroys all the destroyable elements of the corresponding list and disposes\nfrom all the left elements of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reactToPointer\n                        \n                    \n                \n            \n            \n                \nreactToPointer(pointerEvent: PointerEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:117\n                \n            \n\n\n            \n                \n                    Reacts to the pointer event by passing it down to the children objects that implements the IPointerSensible interface.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    pointerEvent\n                                    \n                                            PointerEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Pointer move event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:100\n                \n            \n\n\n            \n                \n                    Resizes all the elements contained in the list of updatable objects\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New information about the size and the new pixel ratio\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/Engine.ts:108\n                \n            \n\n\n            \n                \n                    Update all the elements that were added to the updatable list on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IDestroyable } from './interface/IDestroyable';\nimport { RendererHolder } from './holder/RendererHolder';\nimport { IResizable } from './interface/IResizable';\nimport { IUpdatable } from './interface/IUpdatable';\nimport { ISize } from './service/size/ISize';\nimport { Mesh, Scene } from 'three';\nimport { ControlsHolder } from './holder/ControlsHolder';\nimport { CameraHolder } from './holder/CameraHolder';\nimport { World } from './world/World';\nimport { DebugGUI } from './debug/DebugGUI';\nimport { IExperienceTime } from './service/time/IExperienceTime';\nimport { IPointerSensible } from './interface/IPointerSensible';\n\n/**\n * Core element of the viewer.\n * It orchestrates the instantiation of the core ThreeJS ecosystem's components (scene,\n * renderer, ...).\n */\nexport class Engine implements IResizable, IUpdatable, IDestroyable, IPointerSensible {\n  /**\n   * Instance of the lil-gui panel to tweak your elements.\n   * @private\n   */\n  private readonly debugGUI = new DebugGUI();\n\n  /**\n   * ThreeJS scene\n   * @private\n   */\n  private readonly scene = new Scene();\n\n  /**\n   * Holder that sets up the ThreeJS camera.\n   * @private\n   */\n  private readonly cameraHolder;\n  /**\n   * Holder that sets up the ThreeJS renderer with all the settings of the experience.\n   * @private\n   */\n  private readonly rendererHolder;\n  /**\n   * Holder that binds the controls to the camera and sets the controls' parameters.\n   * @private\n   */\n  private readonly controlsHolder;\n\n  /**\n   * Container for all the 3D objects that will show up in the scene with their resources loaded.\n   * @private\n   */\n  private readonly world = new World(this.scene, this.debugGUI);\n\n  /**\n   * List of the elements that need to be updated on each tick.\n   * @private\n   */\n  private readonly updatableList: IUpdatable[];\n  /**\n   * List of the elements that need to be resized when the event is triggered\n   * @private\n   */\n  private readonly resizableList: IResizable[];\n  /**\n   * List of the elements that need to be disposed/destroyed at the end of the engine's lifecycle.\n   * @private\n   */\n  private readonly destroyableList: IDestroyable[];\n\n  /**\n   * Constructor\n   * @param canvas Reference to the canvas of the parent viewer\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this.cameraHolder = new CameraHolder(this.scene);\n    this.rendererHolder = new RendererHolder(this.scene, this.cameraHolder.instance, canvas);\n    this.controlsHolder = new ControlsHolder(this.cameraHolder.instance, canvas);\n\n    this.updatableList = [\n      this.rendererHolder,\n      this.controlsHolder,\n      this.world\n    ];\n\n    this.resizableList = [\n      this.cameraHolder,\n      this.rendererHolder,\n    ];\n\n    this.destroyableList = [\n      this.controlsHolder,\n      this.rendererHolder\n    ];\n  }\n\n  /**\n   * Resizes all the elements contained in the list of updatable objects\n   * @param size New information about the size and the new pixel ratio\n   */\n  resize(size: ISize): void {\n    this.resizableList.forEach((resizable) => resizable.resize(size));\n  }\n\n  /**\n   * Update all the elements that were added to the updatable list on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.updatableList.forEach((updatable) => updatable.update(experienceTime));\n  }\n\n  /**\n   * Reacts to the pointer event by passing it down to the children objects that implements the {@link\n   * IPointerSensible} interface.\n   * @param pointerEvent Pointer move event\n   */\n  reactToPointer(pointerEvent: PointerEvent): void {\n    // Add objects sensible to the pointer (example: the camera)\n  }\n\n\n  /**\n   * Destroys all the destroyable elements of the corresponding list and disposes\n   * from all the left elements of the scene.\n   */\n  destroy(): void {\n    this.scene.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.geometry.dispose();\n\n        for (const key in child.material) {\n          const value = child.material[key];\n          if (value && typeof value.dispose === 'function') {\n            value.dispose();\n          }\n        }\n      }\n    });\n    this.destroyableList.forEach((destroyable) => destroyable.destroy());\n\n    DebugGUI.destroy();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Environment.html":{"url":"classes/Environment.html","title":"class - Environment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Environment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Object representing the 3D scene environment properties like lights.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                environmentMap\n                            \n                            \n                                    Private\n                                    Readonly\n                                sunLight\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureEnvironmentMap\n                            \n                            \n                                configureSunLight\n                            \n                            \n                                destroy\n                            \n                            \n                                    Private\n                                    Static\n                                isEnvMappable\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to add the lights\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resources loaded in the project\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:45\n                        \n                    \n\n            \n                \n                    Debug tool objects to tweak the lights.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        environmentMap\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvironmentMapHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:56\n                        \n                    \n\n            \n                \n                    Environment map of the scene to generate the lights on supported materials\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sunLight\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DirectionalLight\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Environment.ts:50\n                        \n                    \n\n            \n                \n                    Directional light of the scene.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureEnvironmentMap\n                        \n                    \n                \n            \n            \n                \nconfigureEnvironmentMap()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:143\n                \n            \n\n\n            \n                \n                    Sets up the environment map of the scene and applies it to the supported materials of the scene.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureSunLight\n                        \n                    \n                \n            \n            \n                \nconfigureSunLight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:107\n                \n            \n\n\n            \n                \n                    Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:163\n                \n            \n\n\n            \n                \n                    Removes the light and environment map from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        isEnvMappable\n                        \n                    \n                \n            \n            \n                \n                    \n                    isEnvMappable(material: Material)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:97\n                \n            \n\n\n            \n                \n                    Checks if there are the correct properties on the material for setting the environment map and the environment map\nintensity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    material\n                                    \n                                            Material\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Material to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the object possesses the correct attributes to apply the environment map\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvironmentMapHolder.html":{"url":"interfaces/EnvironmentMapHolder.html","title":"interface - EnvironmentMapHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvironmentMapHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Environment.ts\n        \n\n\n            \n                Description\n            \n            \n                Properties of the environment map\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            intensity\n                                        \n                                \n                                \n                                        \n                                            texture\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        updateMaterials\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        updateMaterials\n                        \n                    \n                \n            \n            \n                \nupdateMaterials()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Environment.ts:34\n                \n            \n\n\n            \n                \n                    Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        intensity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        intensity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Intensity of the environment map\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        texture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        texture:     Texture\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Texture\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cube texture of the environment\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport {\n  DirectionalLight,\n  Material,\n  Mesh,\n  MeshLambertMaterial,\n  MeshPhongMaterial,\n  MeshPhysicalMaterial,\n  MeshStandardMaterial,\n  Scene,\n  sRGBEncoding,\n  Texture\n} from 'three';\nimport GUI from 'lil-gui';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Properties of the environment map\n */\ninterface EnvironmentMapHolder {\n  /**\n   * Intensity of the environment map\n   */\n  intensity: number;\n  /**\n   * Cube texture of the environment\n   */\n  texture: Texture;\n\n  /**\n   * Updates the scene to apply the envMap to each material of the scene that supports environment maps.\n   */\n  updateMaterials(): void;\n}\n\n/**\n * Object representing the 3D scene environment properties like lights.\n */\nexport class Environment implements IDestroyable {\n  /**\n   * Debug tool objects to tweak the lights.\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n  /**\n   * Directional light of the scene.\n   * @private\n   */\n  private readonly sunLight: DirectionalLight;\n\n  /**\n   * Environment map of the scene to generate the lights on supported materials\n   * @private\n   */\n  private readonly environmentMap: EnvironmentMapHolder;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to add the lights\n   * @param resourceLoader Resources loaded in the project\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader,\n  ) {\n\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('environment');\n    }\n    this.sunLight = new DirectionalLight('#ffffff', 3);\n    this.configureSunLight();\n    this.environmentMap = {\n      intensity: 0.4,\n      texture: this.resourceLoader.items.get('environmentMapTexture') as Texture,\n      updateMaterials: () => {\n        this.scene.traverse((child) => {\n          if (child instanceof Mesh && Environment.isEnvMappable(child.material)) {\n            child.material.envMap = this.environmentMap.texture;\n            child.material.envMapIntensity = this.environmentMap.intensity;\n            child.material.needsUpdate = true;\n          }\n        });\n      }\n    };\n\n    this.configureEnvironmentMap();\n  }\n\n  /**\n   * Checks if there are the correct properties on the material for setting the environment map and the environment map\n   * intensity.\n   * @param material Material to check\n   * @private\n   * @returns true if the object possesses the correct attributes to apply the environment map\n   */\n  private static isEnvMappable(material: Material): boolean {\n    return material instanceof MeshStandardMaterial\n      || material instanceof MeshLambertMaterial\n      || material instanceof MeshPhongMaterial\n      || material instanceof MeshPhysicalMaterial;\n  }\n\n  /**\n   * Sets up the directional light of the scene (position, shadow casting, shadow optimization ...)\n   */\n  configureSunLight(): void {\n    this.sunLight.position.set(0.25, 3, -2.25);\n    this.sunLight.castShadow = true;\n    this.sunLight.shadow.camera.far = 15;\n    this.sunLight.shadow.mapSize.set(1024, 1024);\n    this.sunLight.shadow.normalBias = 0.02;\n\n    this.scene.add(this.sunLight);\n\n    if (this.debugFolder) {\n      this.debugFolder?.add(this.sunLight, 'intensity')\n          .name('sunLightIntensity')\n          .min(0)\n          .max(10)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'x')\n          .name('sunLightX')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'y')\n          .name('sunLightY')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n      this.debugFolder.add(this.sunLight.position, 'z')\n          .name('sunLightZ')\n          .min(-5)\n          .max(5)\n          .step(0.001);\n    }\n  }\n\n  /**\n   * Sets up the environment map of the scene and applies it to the supported materials of the scene.\n   */\n  configureEnvironmentMap() {\n    this.environmentMap.texture.encoding = sRGBEncoding;\n\n    this.scene.environment = this.environmentMap.texture;\n\n    this.environmentMap.updateMaterials();\n\n    if (this.debugFolder) {\n      this.debugFolder.add(this.environmentMap, 'intensity')\n          .name('envMapIntensity')\n          .min(0)\n          .max(4)\n          .step(0.001)\n          .onChange(() => this.environmentMap.updateMaterials());\n    }\n  }\n\n  /**\n   * Removes the light and environment map from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.sunLight);\n    this.scene.environment = null;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Floor.html":{"url":"classes/Floor.html","title":"class - Floor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Floor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Floor.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the 3D floor of the scene\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                geometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                material\n                            \n                            \n                                    Private\n                                mesh\n                            \n                            \n                                    Private\n                                    Readonly\n                                textures\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureMesh\n                            \n                            \n                                configureTextures\n                            \n                            \n                                destroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which is added the floor mesh\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource that has loaded the textures to apply on the floor\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CircleGeometry\n\n                    \n                \n                \n                    \n                        Default value : new CircleGeometry(5, 64)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:14\n                        \n                    \n\n            \n                \n                    ThreeJS geometry of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        material\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MeshStandardMaterial\n\n                    \n                \n                \n                    \n                        Default value : new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:27\n                        \n                    \n\n            \n                \n                    ThreeJS Material used on the floor to apply the textures.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mesh\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Mesh\n\n                    \n                \n                \n                    \n                        Default value : new Mesh(this.geometry, this.material)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:35\n                        \n                    \n\n            \n                \n                    ThreeJS mesh that holds the geometry and the material of the floor.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textures\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Floor.ts:19\n                        \n                    \n\n            \n                \n                    ThreeJS textures loaded to be applied on the floor.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureMesh\n                        \n                    \n                \n            \n            \n                \nconfigureMesh()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:66\n                \n            \n\n\n            \n                \n                    Configure the floor to position it correctly in the scene.\nActivates the capacity of receiving shadows.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureTextures\n                        \n                    \n                \n            \n            \n                \nconfigureTextures()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:51\n                \n            \n\n\n            \n                \n                    Configures the color and map textures (encoding and tiling)\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Floor.ts:75\n                \n            \n\n\n            \n                \n                    Dispose of the floor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CircleGeometry, Mesh, MeshStandardMaterial, RepeatWrapping, sRGBEncoding, Texture } from 'three';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Contains the 3D floor of the scene\n */\nexport class Floor implements IDestroyable {\n  /**\n   * ThreeJS geometry of the floor.\n   * @private\n   */\n  private readonly geometry: CircleGeometry = new CircleGeometry(5, 64);\n  /**\n   * ThreeJS textures loaded to be applied on the floor.\n   * @private\n   */\n  private readonly textures: { color: Texture, normal: Texture } = {\n    color: this.resourceLoader.items.get('grassColorTexture') as Texture,\n    normal: this.resourceLoader.items.get('grassNormalTexture') as Texture,\n  };\n  /**\n   * ThreeJS Material used on the floor to apply the textures.\n   * @private\n   */\n  private readonly material: MeshStandardMaterial = new MeshStandardMaterial({\n    map: this.textures.color,\n    normalMap: this.textures.normal\n  });\n  /**\n   * ThreeJS mesh that holds the geometry and the material of the floor.\n   * @private\n   */\n  private mesh: Mesh = new Mesh(this.geometry, this.material);\n\n  /**\n   * Constructor\n   * @param scene Scene to which is added the floor mesh\n   * @param resourceLoader Resource that has loaded the textures to apply on the floor\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    this.configureTextures();\n    this.configureMesh();\n  }\n\n  /**\n   * Configures the color and map textures (encoding and tiling)\n   */\n  configureTextures() {\n    this.textures.color.encoding = sRGBEncoding;\n    this.textures.color.repeat.set(1.5, 1.5);\n    this.textures.color.wrapS = RepeatWrapping;\n    this.textures.color.wrapT = RepeatWrapping;\n\n    this.textures.normal.repeat.set(1.5, 1.5);\n    this.textures.normal.wrapS = RepeatWrapping;\n    this.textures.normal.wrapT = RepeatWrapping;\n  }\n\n  /**\n   * Configure the floor to position it correctly in the scene.\n   * Activates the capacity of receiving shadows.\n   */\n  configureMesh() {\n    this.mesh.rotation.x = -Math.PI * 0.5;\n    this.mesh.receiveShadow = true;\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Dispose of the floor\n   */\n  destroy(): void {\n    this.scene.remove(this.mesh);\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Fox.html":{"url":"classes/Fox.html","title":"class - Fox","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Fox\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/Fox.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds the information about the GLTF Fox loaded\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                animationHolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                debugFolder\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltf\n                            \n                            \n                                    Private\n                                    Readonly\n                                modelGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureAnimation\n                            \n                            \n                                configureModel\n                            \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, resourceLoader: ResourceLoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:67\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to add the fox\n\n                                                        \n                                                \n                                                \n                                                        resourceLoader\n                                                  \n                                                        \n                                                                        ResourceLoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Resource loader that has loaded the GLTF file of the fox\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        animationHolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnimationHolder\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:62\n                        \n                    \n\n            \n                \n                    Information of the animation for the Fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        debugFolder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GUI | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:67\n                        \n                    \n\n            \n                \n                    Debug tool to tweak the Fox and change its animations\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltf\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GLTF\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:52\n                        \n                    \n\n            \n                \n                    GLTF loader product of the fox\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        modelGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/Fox.ts:57\n                        \n                    \n\n            \n                \n                    Root group of the Fox model\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureAnimation\n                        \n                    \n                \n            \n            \n                \nconfigureAnimation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:111\n                \n            \n\n\n            \n                \n                    Sets up the animations of the Fox loaded from the gltf file.\nSwitching between animations is available in the GUI panel.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureModel\n                        \n                    \n                \n            \n            \n                \nconfigureModel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:96\n                \n            \n\n\n            \n                \n                    Sets up the Fox in the Scene.\nConfigure the capability of casting shadow for meshes composing the fox.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:150\n                \n            \n\n\n            \n                \n                    Removes the fox from the scene\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/Fox.ts:143\n                \n            \n\n\n            \n                \n                    Updates the animation mixer to animate the fox on each frame.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResourceLoader } from '../resource/ResourceLoader';\nimport { AnimationMixer, Group, Mesh, Scene } from 'three';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { GLTF } from 'three/examples/jsm/loaders/GLTFLoader';\nimport GUI from 'lil-gui';\nimport { AnimationAction } from 'three/src/animation/AnimationAction';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Bundle for the animation information\n */\nclass AnimationHolder {\n  /**\n   * Dictionary of loaded GLTF animation actions\n   */\n  readonly actions: {\n    [animationName: string]: AnimationAction\n  } = {};\n\n  /**\n   * Constructor\n   * @param mixer Mixer of the animation\n   * @param current Initial animation\n   */\n  constructor(readonly mixer: AnimationMixer,\n              readonly current?: AnimationAction) {}\n\n  /**\n   * Plays the animation corresponding to the name.\n   * @param name Name of the animation action to play. Should exist in the list of available actions.\n   */\n  play(name: string): void {\n    const newAction = this.actions[name];\n    const oldAction = this.actions['current'];\n    newAction.reset();\n    newAction.play();\n    newAction.crossFadeFrom(oldAction, 1, false);\n    this.actions['current'] = newAction;\n  }\n}\n\n/**\n * Holds the information about the GLTF Fox loaded\n */\nexport class Fox implements IUpdatable, IDestroyable {\n  /**\n   * GLTF loader product of the fox\n   * @private\n   */\n  private readonly gltf: GLTF;\n  /**\n   * Root group of the Fox model\n   * @private\n   */\n  private readonly modelGroup: Group;\n  /**\n   * Information of the animation for the Fox\n   * @private\n   */\n  private readonly animationHolder: AnimationHolder;\n  /**\n   * Debug tool to tweak the Fox and change its animations\n   * @private\n   */\n  private readonly debugFolder: GUI | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to add the fox\n   * @param resourceLoader Resource loader that has loaded the GLTF file of the fox\n   */\n  constructor(private readonly scene: Scene,\n              private readonly resourceLoader: ResourceLoader) {\n    const debugUI = DebugGUI.getUI();\n    if (debugUI) {\n      this.debugFolder = debugUI.addFolder('fox');\n    }\n\n    this.gltf = this.resourceLoader.items.get('foxModel') as GLTF;\n    this.modelGroup = this.gltf.scene;\n\n    this.animationHolder = new AnimationHolder(\n      new AnimationMixer(this.modelGroup)\n    );\n\n    this.configureModel();\n    this.configureAnimation();\n  }\n\n  /**\n   * Sets up the Fox in the Scene.\n   * Configure the capability of casting shadow for meshes composing the fox.\n   */\n  configureModel(): void {\n    this.modelGroup.scale.set(0.02, 0.02, 0.02);\n    this.scene.add(this.modelGroup);\n\n    this.modelGroup.traverse((child) => {\n      if (child instanceof Mesh) {\n        child.castShadow = true;\n      }\n    });\n  }\n\n  /**\n   * Sets up the animations of the Fox loaded from the gltf file.\n   * Switching between animations is available in the GUI panel.\n   */\n  configureAnimation(): void {\n\n    this.animationHolder.actions['idle'] = this.animationHolder.mixer.clipAction(this.gltf.animations[0]);\n    this.animationHolder.actions['walking'] = this.animationHolder.mixer.clipAction(this.gltf.animations[1]);\n    this.animationHolder.actions['running'] = this.animationHolder.mixer.clipAction(this.gltf.animations[2]);\n\n    this.animationHolder.actions['current'] = this.animationHolder.actions['idle'];\n    this.animationHolder.actions['current'].play();\n\n    if (this.debugFolder) {\n      const debugObject = {\n        playIdle: () => {\n          this.animationHolder.play('idle');\n        },\n        playWalking: () => {\n          this.animationHolder.play('walking');\n        },\n        playRunning: () => {\n          this.animationHolder.play('running');\n        }\n      };\n\n      this.debugFolder.add(debugObject, 'playIdle');\n      this.debugFolder.add(debugObject, 'playWalking');\n      this.debugFolder.add(debugObject, 'playRunning');\n    }\n  }\n\n  /**\n   * Updates the animation mixer to animate the fox on each frame.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    this.animationHolder.mixer.update(experienceTime.delta * 0.001);\n  }\n\n  /**\n   * Removes the fox from the scene\n   */\n  destroy(): void {\n    this.scene.remove(this.modelGroup);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDestroyable.html":{"url":"interfaces/IDestroyable.html","title":"interface - IDestroyable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDestroyable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IDestroyable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that need to be disposed to avoid memory leaks and so on.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        destroy\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IDestroyable.ts:8\n                \n            \n\n\n            \n                \n                    Disposes the reserved resources for a clean lifecycle\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IDestroyable {\n  /**\n   * Disposes the reserved resources for a clean lifecycle\n   */\n  destroy(): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExperienceTime.html":{"url":"interfaces/IExperienceTime.html","title":"interface - IExperienceTime","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExperienceTime\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/IExperienceTime.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the experience time.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            current\n                                        \n                                \n                                \n                                        \n                                            delta\n                                        \n                                \n                                \n                                        \n                                            elapsed\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        current:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current time used to calculate the elapsed time and the delta time.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delta:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Delta time between the current frame and the old one.\nUsed to provide the same experience on every framerate.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        elapsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        elapsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start time of the application (at the instantiation of the experience).\nUsed to calculate the elapsed time from the start of the experience.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IExperienceTime {\n  /**\n   * Start time of the application (at the instantiation of the experience).\n   * Used to calculate the elapsed time from the start of the experience.\n   */\n  start: number;\n  /**\n   * Delta time between the current frame and the old one.\n   * Used to provide the same experience on every framerate.\n   */\n  delta: number;\n  /**\n   * Current time used to calculate the elapsed time and the delta time.\n   */\n  current: number;\n  /**\n   * Elapsed time from the start of the experience.\n   */\n  elapsed: number;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IListenable.html":{"url":"interfaces/IListenable.html","title":"interface - IListenable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IListenable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IListenable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\noccasions.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IListenable.ts:11\n                \n            \n\n\n            \n                \n                    Returns an observable object that can emit some events on the stream.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\n\n/**\n * Contract for objects that will emit through an Observable object, useful to listen and to be notified on specific\n * occasions.\n */\nexport interface IListenable {\n  /**\n   * Returns an observable object that can emit some events on the stream.\n   */\n  listen(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPointerSensible.html":{"url":"interfaces/IPointerSensible.html","title":"interface - IPointerSensible","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPointerSensible\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IPointerSensible.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that makes objects that implements it sensible to the pointermove event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            reactToPointer\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        reactToPointer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactToPointer:         Consumer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Consumer\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Consumes the pointer event and reacts to it\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Consumer } from '../service/type/Consumer';\n\n/**\n * Contract that makes objects that implements it sensible to the pointermove event.\n */\nexport interface IPointerSensible {\n  /**\n   * Consumes the pointer event and reacts to it\n   */\n  reactToPointer: Consumer;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IResizable.html":{"url":"interfaces/IResizable.html","title":"interface - IResizable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IResizable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IResizable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        resize\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IResizable.ts:11\n                \n            \n\n\n            \n                \n                    Resizes the object with the new size of the viewport, and the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Information about the new size after resizing. (Width, height and pixel ratio)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ISize } from '../service/size/ISize';\n\n/**\n * Contract that symbolizes an object that handles resize and needs to be resized on DOM resize event.\n */\nexport interface IResizable {\n  /**\n   * Resizes the object with the new size of the viewport, and the new pixel ratio.\n   * @param size Information about the new size after resizing. (Width, height and pixel ratio)\n   */\n  resize(size: ISize): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISize.html":{"url":"interfaces/ISize.html","title":"interface - ISize","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISize\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/ISize.ts\n        \n\n\n            \n                Description\n            \n            \n                Information about the size\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            pixelRatio\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pixelRatio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pixelRatio:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Pixel ratio of the screen\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Information about the width\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISize {\n  /**\n   * Information about the width\n   */\n  width: number;\n  /**\n   * Information about the height\n   */\n  height: number;\n  /**\n   * Pixel ratio of the screen\n   */\n  pixelRatio: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISource.html":{"url":"interfaces/ISource.html","title":"interface - ISource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ISource.ts\n        \n\n\n            \n                Description\n            \n            \n                Source information mandatory to be loaded to the project.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            path\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pathList\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the resource\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to the single source file (used here for GLTF and for Texture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pathList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pathList:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Path to multiple required sources (used here for the CubeTexture)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         SourceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SourceType\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of resource\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ISource {\n  /**\n   * Name of the resource\n   */\n  name: string,\n  /**\n   * Type of resource\n   */\n  type: SourceType,\n  /**\n   * Path to the single source file (used here for GLTF and for Texture)\n   */\n  path?: string;\n  /**\n   * Path to multiple required sources (used here for the CubeTexture)\n   */\n  pathList?: string[]\n}\n\n/**\n * Type of resource available\n */\nexport enum SourceType {\n  GLTF = 'gltfModel',\n  TEXTURE = 'texture',\n  CUBE_TEXTURE = 'cubeTexture',\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUpdatable.html":{"url":"interfaces/IUpdatable.html","title":"interface - IUpdatable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUpdatable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/interface/IUpdatable.ts\n        \n\n\n            \n                Description\n            \n            \n                Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/interface/IUpdatable.ts:11\n                \n            \n\n\n            \n                \n                    Updates the object to the next frame state.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Contract that symbolizes that the class needs updates at each frame, and exposes the method to do so.\n */\nexport interface IUpdatable {\n  /**\n   * Updates the object to the next frame state.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PointerService.html":{"url":"injectables/PointerService.html","title":"injectable - PointerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PointerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/pointer/pointer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the pointermove event outside of Angular and executes the engine callback\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructor\nListens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\nChange Detection triggering\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:31\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/pointer/pointer.service.ts:38\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the pointermove event outside of Angular and executes the engine callback\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PointerService {\n\n  /**\n   * Constructor\n   * Listens on the pointermove event and executes the callback of the engine (if set) outside of Angular to prevent\n   * Change Detection triggering\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(\n      () => {\n        window.addEventListener('pointermove', (pointerEvent) => {\n          this.engineConsumer(pointerEvent);\n        });\n      }\n    );\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its pointermove behaviour based on event.\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on pointermove\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RendererHolder.html":{"url":"classes/RendererHolder.html","title":"class - RendererHolder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RendererHolder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/holder/RendererHolder.ts\n        \n\n\n            \n                Description\n            \n            \n                Holder that sets up the WebGL Renderer for the 3D scene.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IResizable\n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                resize\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, camera: Camera, canvas: HTMLCanvasElement)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS scene to render\n\n                                                        \n                                                \n                                                \n                                                        camera\n                                                  \n                                                        \n                                                                    Camera\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ThreeJS camera used to render the scene\n\n                                                        \n                                                \n                                                \n                                                        canvas\n                                                  \n                                                        \n                                                                    HTMLCanvasElement\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                HTML canvas element of the viewer\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebGLRenderer\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:19\n                        \n                    \n\n            \n                \n                    Instance of the ThreeJS WebGL renderer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:72\n                \n            \n\n\n            \n                \n                    Disposes of the renderer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resize\n                        \n                    \n                \n            \n            \n                \nresize(size: ISize)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:57\n                \n            \n\n\n            \n                \n                    Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    size\n                                    \n                                                ISize\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New size information of the viewport\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/holder/RendererHolder.ts:65\n                \n            \n\n\n            \n                \n                    Renders the scene at the considered frame.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { WebGLRenderer } from 'three/src/renderers/WebGLRenderer';\nimport { IResizable } from '../interface/IResizable';\nimport { PCFShadowMap, ReinhardToneMapping, sRGBEncoding } from 'three';\nimport { ISize } from '../service/size/ISize';\nimport { IUpdatable } from '../interface/IUpdatable';\nimport { Scene } from 'three/src/scenes/Scene';\nimport { Camera } from 'three/src/cameras/Camera';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { ScreenSizeService } from '../service/size/screen-size.service';\n\n/**\n * Holder that sets up the WebGL Renderer for the 3D scene.\n */\nexport class RendererHolder implements IResizable, IUpdatable, IDestroyable {\n  /**\n   * Instance of the ThreeJS WebGL renderer.\n   * @private\n   */\n  private readonly instance: WebGLRenderer;\n\n  /**\n   * Constructor\n   * @param scene ThreeJS scene to render\n   * @param camera ThreeJS camera used to render the scene\n   * @param canvas HTML canvas element of the viewer\n   */\n  constructor(private readonly scene: Scene,\n              private readonly camera: Camera,\n              private readonly canvas: HTMLCanvasElement) {\n    const initialSize = ScreenSizeService.getSize();\n    this.instance = new WebGLRenderer(\n      {\n        canvas: canvas,\n        antialias: true\n      }\n    );\n\n    this.instance.physicallyCorrectLights = true;\n    this.instance.outputEncoding = sRGBEncoding;\n\n    this.instance.toneMapping = ReinhardToneMapping;\n    this.instance.toneMappingExposure = 3;\n\n    this.instance.shadowMap.enabled = true;\n    this.instance.shadowMap.type = PCFShadowMap;\n\n    this.instance.setClearColor('#211d20');\n    this.instance.setSize(initialSize.width, initialSize.height);\n    this.instance.setPixelRatio(initialSize.pixelRatio);\n  }\n\n\n  /**\n   * Resizes the renderer to the new size of the viewport. Sets also the new pixel ratio.\n   * @param size New size information of the viewport\n   */\n  resize(size: ISize) {\n    this.instance.setSize(size.width, size.height);\n    this.instance.setPixelRatio(size.pixelRatio);\n  }\n\n  /**\n   * Renders the scene at the considered frame.\n   */\n  update(): void {\n    this.instance.render(this.scene, this.camera);\n  }\n\n  /**\n   * Disposes of the renderer.\n   */\n  destroy(): void {\n    this.instance.dispose();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceLoader.html":{"url":"classes/ResourceLoader.html","title":"class - ResourceLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/resource/ResourceLoader.ts\n        \n\n\n            \n                Description\n            \n            \n                Handles the loading of the project's resources (textures, models...)\n\n            \n\n\n            \n                Implements\n            \n            \n                            IDestroyable\n                            IListenable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cubeTextureLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                eventEmitter\n                            \n                            \n                                    Private\n                                    Readonly\n                                gltfLoader\n                            \n                            \n                                    Readonly\n                                items\n                            \n                            \n                                    Private\n                                    Readonly\n                                loadingManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                textureLoader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                listen\n                            \n                            \n                                    Private\n                                onError\n                            \n                            \n                                    Private\n                                onLoad\n                            \n                            \n                                    Private\n                                onProgress\n                            \n                            \n                                sourceLoaded\n                            \n                            \n                                startLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceList: ISource[])\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceList\n                                                  \n                                                        \n                                                                        ISource[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of the source to load\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        cubeTextureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CubeTextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:50\n                        \n                    \n\n            \n                \n                    Loader for the Cube Texture for the environment map\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        eventEmitter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:26\n                        \n                    \n\n            \n                \n                    Emits when the loading is done\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        gltfLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new GLTFLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:40\n                        \n                    \n\n            \n                \n                    Loader for GLTF models\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:21\n                        \n                    \n\n            \n                \n                    Map of the resource items loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loadingManager\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:31\n                        \n                    \n\n            \n                \n                    ThreeJS loading manager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        textureLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new TextureLoader(this.loadingManager)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:45\n                        \n                    \n\n            \n                \n                    Loader for Textures\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:125\n                \n            \n\n\n            \n                \n                    Disposes the resources loaded\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:118\n                \n            \n\n\n            \n                \n                    Returns an observable that notifies the subscribers when the loading is fully completed.\n\n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:165\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an error occurs when loading an item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the item that can't be loaded due to an error.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onLoad\n                        \n                    \n                \n            \n            \n                \n                    \n                    onLoad()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:144\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        onProgress\n                        \n                    \n                \n            \n            \n                \n                    \n                    onProgress(url: string, itemsLoaded: number, itemsTotal: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:156\n                \n            \n\n\n            \n                \n                    Callback for the loading manager to call when an item is loaded.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL of the object loaded.\n\n                                    \n                                \n                                \n                                    itemsLoaded\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Number of items that have been loaded.\n\n                                    \n                                \n                                \n                                    itemsTotal\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Total number of items that needs to be loaded to consider the loading done.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceLoaded\n                        \n                    \n                \n            \n            \n                \nsourceLoaded(source: ISource, item: Item)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:111\n                \n            \n\n\n            \n                \n                    Adds to the map the item loaded\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                ISource\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source of the resource loaded\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                                Item\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Item loaded\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/resource/ResourceLoader.ts:63\n                \n            \n\n\n            \n                \n                    Starts the loading of the resource by using the correct loader depending on the type of the resource.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CubeTexture, CubeTextureLoader, LoadingManager, Mesh, Texture, TextureLoader } from 'three';\nimport { IListenable } from '../interface/IListenable';\nimport { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { ISource, SourceType } from './ISource';\nimport { IDestroyable } from '../interface/IDestroyable';\n\n/**\n * Type of objects that can be loaded into the project\n */\nexport type Item = GLTF | Texture | CubeTexture;\n\n/**\n * Handles the loading of the project's resources (textures, models...)\n */\nexport class ResourceLoader implements IDestroyable, IListenable {\n  /**\n   * Map of the resource items loaded\n   */\n  readonly items = new Map();\n  /**\n   * Emits when the loading is done\n   * @private\n   */\n  private readonly eventEmitter = new EventEmitter();\n  /**\n   * ThreeJS loading manager\n   * @private\n   */\n  private readonly loadingManager = new LoadingManager(() => this.onLoad(),\n    (url: string, itemsLoaded: number, itemsTotal: number) => this.onProgress(url, itemsLoaded, itemsTotal),\n    (url: string) => this.onError(url)\n  );\n\n  /**\n   * Loader for GLTF models\n   * @private\n   */\n  private readonly gltfLoader = new GLTFLoader(this.loadingManager);\n  /**\n   * Loader for Textures\n   * @private\n   */\n  private readonly textureLoader = new TextureLoader(this.loadingManager);\n  /**\n   * Loader for the Cube Texture for the environment map\n   * @private\n   */\n  private readonly cubeTextureLoader = new CubeTextureLoader(this.loadingManager);\n\n  /**\n   * Constructor\n   * @param sourceList List of the source to load\n   */\n  constructor(private readonly sourceList: ISource[]) {\n    this.startLoading();\n  }\n\n  /**\n   * Starts the loading of the resource by using the correct loader depending on the type of the resource.\n   */\n  startLoading() {\n    // Load each source\n    for (const source of this.sourceList) {\n      switch (source.type) {\n        case SourceType.GLTF:\n          if (!source.path) {\n            throw new Error('Cannot load the GLTF model due to missing path property. Check the source file.');\n          }\n          this.gltfLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.TEXTURE:\n          if (!source.path) {\n            throw new Error('Cannot load the Texture due to missing path property. Check the source file.');\n          }\n          this.textureLoader.load(\n            source.path,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        case SourceType.CUBE_TEXTURE:\n          if (!source.pathList) {\n            throw new Error('Cannot load the CubeTexture due to missing pathlist property. Check the source file.');\n          }\n          this.cubeTextureLoader.load(\n            source.pathList,\n            (file) => {\n              this.sourceLoaded(source, file);\n            }\n          );\n          break;\n        default:\n          throw new Error('Type of loader does not exists');\n      }\n    }\n  }\n\n  /**\n   * Adds to the map the item loaded\n   * @param source Source of the resource loaded\n   * @param item Item loaded\n   */\n  sourceLoaded(source: ISource, item: Item): void {\n    this.items.set(source.name, item);\n  }\n\n  /**\n   * Returns an observable that notifies the subscribers when the loading is fully completed.\n   */\n  listen(): Observable {\n    return this.eventEmitter.asObservable();\n  }\n\n  /**\n   * Disposes the resources loaded\n   */\n  destroy(): void {\n    this.items.forEach((item) => {\n      if ('scene' in item) {\n        item.scene.traverse((object) => {\n          if (object instanceof Mesh) {\n            object.geometry.dispose();\n            object.material.dispose();\n          }\n        });\n      } else {\n        item.dispose();\n      }\n    });\n  }\n\n  /**\n   * Callback for the loading manager to call when the Loading is completed. It fires the event of the event emitter.\n   * @private\n   */\n  private onLoad(): void {\n    console.log('Loading complete!');\n    this.eventEmitter.emit();\n  }\n\n  /**\n   * Callback for the loading manager to call when an item is loaded.\n   * @param url URL of the object loaded.\n   * @param itemsLoaded Number of items that have been loaded.\n   * @param itemsTotal Total number of items that needs to be loaded to consider the loading done.\n   * @private\n   */\n  private onProgress(url: string, itemsLoaded: number, itemsTotal: number): void {\n    console.log(`Loading file: ${url}.\\nLoaded ${itemsLoaded} of ${itemsTotal} files.`);\n  }\n\n  /**\n   * Callback for the loading manager to call when an error occurs when loading an item.\n   * @param url URL of the item that can't be loaded due to an error.\n   * @private\n   */\n  private onError(url: string): void {\n    console.log('There was an error loading ' + url);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScreenSizeService.html":{"url":"injectables/ScreenSizeService.html","title":"injectable - ScreenSizeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScreenSizeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/size/screen-size.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getHeight\n                            \n                            \n                                    Static\n                                getPixelRatio\n                            \n                            \n                                    Static\n                                getSize\n                            \n                            \n                                    Static\n                                getWidth\n                            \n                            \n                                setConsumer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\nListen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getHeight\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:34\n                \n            \n\n\n            \n                \n                    Returns the current height of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getPixelRatio\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPixelRatio()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getSize\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSize()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:48\n                \n            \n\n\n            \n                \n                    Returns an information bundle about the viewport size\n\n\n                    \n                        Returns :         ISize\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getWidth\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWidth()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:27\n                \n            \n\n\n            \n                \n                    Returns the current width of the viewport.\n\n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:61\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\npixel ratio\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/size/screen-size.service.ts:68\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on resize\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { ISize } from './ISize';\nimport { Consumer } from '../type/Consumer';\n\n/**\n * Service that handles the size of the screen (viewport) and it listens on the resize events outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScreenSizeService {\n  /**\n   * Constructor\n   * Listen to the resize outside of Angular to execute the Engine's consumer to avoid ChangeDetection triggers\n   */\n  constructor(private readonly ngZone: NgZone) {\n    this.ngZone.runOutsideAngular(() => {\n      window.addEventListener('resize', () => {\n        this.engineConsumer(ScreenSizeService.getSize());\n      });\n    });\n  }\n\n  /**\n   * Returns the current width of the viewport.\n   */\n  static getWidth(): number {\n    return window.innerWidth;\n  }\n\n  /**\n   * Returns the current height of the viewport.\n   */\n  static getHeight(): number {\n    return window.innerHeight;\n  }\n\n  /**\n   * Returns the current pixel ratio to apply. Can be either 1 or 2 (above 2 would be overkill)\n   */\n  static getPixelRatio(): number {\n    return Math.min(window.devicePixelRatio, 2);\n  }\n\n  /**\n   * Returns an information bundle about the viewport size\n   */\n  static getSize(): ISize {\n    return {\n      width: ScreenSizeService.getWidth(),\n      height: ScreenSizeService.getHeight(),\n      pixelRatio: ScreenSizeService.getPixelRatio(),\n    };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its resize behaviour based on the new size and new\n   * pixel ratio\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer) {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on resize\n   */\n  private engineConsumer: Consumer = () => {};\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreeViewerComponent.html":{"url":"components/ThreeViewerComponent.html","title":"component - ThreeViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreeViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/three-viewer/three-viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-three-viewer\n            \n\n            \n                styleUrls\n                ./three-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./three-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                canvasRef\n                            \n                            \n                                    Private\n                                engine\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(timeService: TimeService, screenSizeService: ScreenSizeService, pointerService: PointerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeService\n                                                  \n                                                        \n                                                                        TimeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the animation loop and the time of the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        screenSizeService\n                                                  \n                                                        \n                                                                        ScreenSizeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the screen resize for the 3D experience engine\n\n                                                        \n                                                \n                                                \n                                                        pointerService\n                                                  \n                                                        \n                                                                        PointerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service that handles the pointer events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up the engine on component destruction\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/three-viewer.component.ts:41\n                \n            \n\n\n            \n                \n                    Bootstraps the 3D engine\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        canvasRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef | undefined\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('canvas', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:20\n                        \n                    \n\n            \n                \n                    Canvas that displays the 3D experience\nMade static to ensure that the canvas is available in the ngOnInit part.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engine\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Engine | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/three-viewer.component.ts:25\n                        \n                    \n\n            \n                \n                    Engine of the 3D experience to generate the ThreeJS scene.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Engine } from './engine/Engine';\nimport { TimeService } from './engine/service/time/time.service';\nimport { ScreenSizeService } from './engine/service/size/screen-size.service';\nimport { PointerService } from './engine/service/pointer/pointer.service';\n\n/**\n * ThreeJS viewer containing the canvas to display the WebGL experience and the engine that runs the whole.\n */\n@Component({\n  selector: 'app-three-viewer',\n  templateUrl: './three-viewer.component.html',\n  styleUrls: ['./three-viewer.component.scss'],\n})\nexport class ThreeViewerComponent implements OnInit, OnDestroy {\n  /**\n   * Canvas that displays the 3D experience\n   * Made static to ensure that the canvas is available in the ngOnInit part.\n   */\n  @ViewChild('canvas', { static: true }) canvasRef: ElementRef | undefined;\n  /**\n   * Engine of the 3D experience to generate the ThreeJS scene.\n   * @private\n   */\n  private engine: Engine | undefined;\n\n  /**\n   * Constructor\n   * @param timeService Service that handles the animation loop and the time of the 3D experience engine\n   * @param screenSizeService Service that handles the screen resize for the 3D experience engine\n   * @param pointerService Service that handles the pointer events\n   */\n  constructor(private readonly timeService: TimeService,\n              private readonly screenSizeService: ScreenSizeService,\n              private readonly pointerService: PointerService) {}\n\n  /**\n   * Bootstraps the 3D engine\n   * @throws Error if the canvas to display the experience is undefined\n   */\n  ngOnInit() {\n    if (!this.canvasRef) {\n      throw new Error('Canvas should be defined to bootstrap the WebGL Engine');\n    }\n    this.engine = new Engine(this.canvasRef.nativeElement);\n\n    this.timeService.setConsumer((experienceTime) => this.engine?.update(experienceTime));\n    this.timeService.tick(); //First impulsion of the tick loop\n\n    this.screenSizeService.setConsumer((size) => this.engine?.resize(size));\n\n    this.pointerService.setConsumer((pointerEvent) => this.engine?.reactToPointer(pointerEvent));\n  }\n\n  /**\n   * Cleans up the engine on component destruction\n   */\n  ngOnDestroy(): void {\n    this.engine?.destroy();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./three-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ThreeViewerComponent', 'selector': 'app-three-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThreeViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TimeService.html":{"url":"injectables/TimeService.html","title":"injectable - TimeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TimeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/service/time/time.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that handles the time of the 3D experience and the main loop outside of Angular\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                engineConsumer\n                            \n                            \n                                    Private\n                                    Readonly\n                                experienceTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getExperienceTime\n                            \n                            \n                                setConsumer\n                            \n                            \n                                tick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                        NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getExperienceTime\n                        \n                    \n                \n            \n            \n                \ngetExperienceTime()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:52\n                \n            \n\n\n            \n                \n                    Gets the time object of the experience that contains the information like delta time, elapsed time from the start\nof the experience.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsumer\n                        \n                    \n                \n            \n            \n                \nsetConsumer(consumer: Consumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:60\n                \n            \n\n\n            \n                \n                    Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                                Consumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tick\n                        \n                    \n                \n            \n            \n                \ntick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/service/time/time.service.ts:35\n                \n            \n\n\n            \n                \n                    Handles the time of the experience by emitting on each frame an event to forward updates.\nExecuted outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        engineConsumer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consumer\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:67\n                        \n                    \n\n            \n                \n                    Slot to keep track of the engine consumer to execute out of the NgZone on tick\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        experienceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IExperienceTime\n\n                    \n                \n                \n                    \n                        Default value : {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/service/time/time.service.ts:18\n                        \n                    \n\n            \n                \n                    Bundle to keep information about the time of the experience.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NgZone } from '@angular/core';\nimport { IExperienceTime } from './IExperienceTime';\nimport { Consumer } from '../type/Consumer';\n\n\n/**\n * Service that handles the time of the 3D experience and the main loop outside of Angular\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TimeService {\n\n  /**\n   * Bundle to keep information about the time of the experience.\n   * @private\n   */\n  private readonly experienceTime: IExperienceTime = {\n    start: Date.now(),\n    delta: 0,\n    elapsed: 0,\n    current: 0,\n  };\n\n  /**\n   * Constructor\n   */\n  constructor(private readonly ngZone: NgZone) {\n  }\n\n  /**\n   * Handles the time of the experience by emitting on each frame an event to forward updates.\n   * Executed outside the NgZone to avoid heavy load and performance issues due to the Change Detection.\n   */\n  tick() {\n    this.ngZone.runOutsideAngular(() => {\n      const currentTime = Date.now();\n      this.experienceTime.delta = currentTime - this.experienceTime.current;\n      this.experienceTime.current = currentTime;\n\n      this.experienceTime.elapsed = this.experienceTime.current - this.experienceTime.start;\n\n      this.engineConsumer(this.experienceTime);\n      window.requestAnimationFrame(() => this.tick());\n    });\n  }\n\n  /**\n   * Gets the time object of the experience that contains the information like delta time, elapsed time from the start\n   * of the experience.\n   */\n  getExperienceTime() {\n    return { ...this.experienceTime };\n  }\n\n  /**\n   * Sets the consumer that will be used by the engine to determine its update behaviour based on the new time bundle\n   * @param consumer Callback that needs to be executed outside the NgZone to avoid heavy change detection processes.\n   */\n  setConsumer(consumer: Consumer): void {\n    this.engineConsumer = consumer;\n  }\n\n  /**\n   * Slot to keep track of the engine consumer to execute out of the NgZone on tick\n   */\n  private engineConsumer: Consumer = () => {};\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/World.html":{"url":"classes/World.html","title":"class - World","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  World\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/three-viewer/engine/world/World.ts\n        \n\n\n            \n                Description\n            \n            \n                Holds all the 3D elements that are instantiated in the 3D world.\n\n            \n\n\n            \n                Implements\n            \n            \n                            IUpdatable\n                            IDestroyable\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                environment\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                fox\n                            \n                            \n                                    Private\n                                    Readonly\n                                resourceLoader\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroy\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(scene: Scene, debugGUI: DebugGUI)\n                    \n                \n                        \n                            \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        scene\n                                                  \n                                                        \n                                                                    Scene\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Scene to which add the 3D object present in the world\n\n                                                        \n                                                \n                                                \n                                                        debugGUI\n                                                  \n                                                        \n                                                                        DebugGUI\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Panel to tweak the world object.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:43\n                        \n                    \n\n            \n                \n                    Environment instance that handles lights and environment map of the 3D world.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Floor | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:33\n                        \n                    \n\n            \n                \n                    Floor that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Fox | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:38\n                        \n                    \n\n            \n                \n                    Fox that is displayed in the 3D experience.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        resourceLoader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ResourceLoader(sourceList)\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:27\n                        \n                    \n\n            \n                \n                    Resource loader that loads the sources described in the corresponding file.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/three-viewer/engine/world/World.ts:22\n                        \n                    \n\n            \n                \n                    Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\ncollected.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        destroy\n                        \n                    \n                \n            \n            \n                \ndestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:75\n                \n            \n\n\n            \n                \n                    Destroys the world and dispose of resources to avoid memory leaks and so on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(experienceTime: IExperienceTime)\n                \n            \n\n\n            \n                \n                    Defined in src/app/three-viewer/engine/world/World.ts:66\n                \n            \n\n\n            \n                \n                    Updates the element that needs to be updated on each tick.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    experienceTime\n                                    \n                                                IExperienceTime\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Bundle of time information about the frame\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { IUpdatable } from '../interface/IUpdatable';\nimport { ResourceLoader } from '../resource/ResourceLoader';\nimport { Subscription } from 'rxjs';\nimport { IDestroyable } from '../interface/IDestroyable';\nimport { sourceList } from '../resource/sources-list';\nimport { Environment } from './Environment';\nimport { DebugGUI } from '../debug/DebugGUI';\nimport { Scene } from 'three';\nimport { Fox } from './Fox';\nimport { Floor } from './Floor';\nimport { IExperienceTime } from '../service/time/IExperienceTime';\n\n/**\n * Holds all the 3D elements that are instantiated in the 3D world.\n */\nexport class World implements IUpdatable, IDestroyable {\n  /**\n   * Reference to the resource loader subscription that needs to be destroyed when the World instance is garbage\n   * collected.\n   * @private\n   */\n  private readonly subscription: Subscription;\n  /**\n   * Resource loader that loads the sources described in the corresponding file.\n   * @private\n   */\n  private readonly resourceLoader = new ResourceLoader(sourceList);\n\n  /**\n   * Floor that is displayed in the 3D experience.\n   * @private\n   */\n  private floor: Floor | undefined;\n  /**\n   * Fox that is displayed in the 3D experience.\n   * @private\n   */\n  private fox: Fox | undefined;\n  /**\n   * Environment instance that handles lights and environment map of the 3D world.\n   * @private\n   */\n  private environment: Environment | undefined;\n\n  /**\n   * Constructor\n   * @param scene Scene to which add the 3D object present in the world\n   * @param debugGUI Panel to tweak the world object.\n   */\n  constructor(private readonly scene: Scene,\n              private readonly debugGUI: DebugGUI) {\n    this.subscription = this.resourceLoader.listen()\n                            .subscribe(() => {\n                              console.log('Resources are ready');\n                              this.floor = new Floor(scene, this.resourceLoader);\n                              this.fox = new Fox(scene,\n                                this.resourceLoader);\n                              this.environment = new Environment(scene, this.resourceLoader);\n                            });\n  }\n\n  /**\n   * Updates the element that needs to be updated on each tick.\n   * @param experienceTime Bundle of time information about the frame\n   */\n  update(experienceTime: IExperienceTime): void {\n    if (this.fox) {\n      this.fox.update(experienceTime);\n    }\n  }\n\n  /**\n   * Destroys the world and dispose of resources to avoid memory leaks and so on.\n   */\n  destroy(): void {\n    this.subscription.unsubscribe();\n\n    this.resourceLoader.destroy();\n\n    this.floor?.destroy();\n    this.fox?.destroy();\n    this.environment?.destroy();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/Engine.ts\n            \n            class\n            Engine\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/debug/DebugGUI.ts\n            \n            class\n            DebugGUI\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/CameraHolder.ts\n            \n            class\n            CameraHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/ControlsHolder.ts\n            \n            class\n            ControlsHolder\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/holder/RendererHolder.ts\n            \n            class\n            RendererHolder\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IDestroyable.ts\n            \n            interface\n            IDestroyable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IListenable.ts\n            \n            interface\n            IListenable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IPointerSensible.ts\n            \n            interface\n            IPointerSensible\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IResizable.ts\n            \n            interface\n            IResizable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/interface/IUpdatable.ts\n            \n            interface\n            IUpdatable\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ISource.ts\n            \n            interface\n            ISource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/ResourceLoader.ts\n            \n            class\n            ResourceLoader\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/resource/sources-list.ts\n            \n            variable\n            sourceList\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/pointer/pointer.service.ts\n            \n            injectable\n            PointerService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/ISize.ts\n            \n            interface\n            ISize\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/size/screen-size.service.ts\n            \n            injectable\n            ScreenSizeService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/IExperienceTime.ts\n            \n            interface\n            IExperienceTime\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/service/time/time.service.ts\n            \n            injectable\n            TimeService\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            class\n            Environment\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Environment.ts\n            \n            interface\n            EnvironmentMapHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Floor.ts\n            \n            class\n            Floor\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            AnimationHolder\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/Fox.ts\n            \n            class\n            Fox\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/three-viewer/engine/world/World.ts\n            \n            class\n            World\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/app/three-viewer/three-viewer.component.ts\n            \n            component\n            ThreeViewerComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^14.0.0\n        \n            @angular/common : ^14.0.0\n        \n            @angular/compiler : ^14.0.0\n        \n            @angular/core : ^14.0.0\n        \n            @angular/forms : ^14.0.0\n        \n            @angular/platform-browser : ^14.0.0\n        \n            @angular/platform-browser-dynamic : ^14.0.0\n        \n            @angular/router : ^14.0.0\n        \n            glslify-loader : ^2.0.0\n        \n            lil-gui : ^0.16.1\n        \n            raw-loader : ^4.0.2\n        \n            rxjs : ~7.5.0\n        \n            three : ^0.142.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SourceType   (src/.../ISource.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/resource/ISource.ts\n    \n        \n            \n                \n                    \n                        \n                        SourceType\n                    \n                \n                    \n                        \n                            Type of resource available\n\n                        \n                    \n                        \n                            \n                                 GLTF\n                            \n                        \n                        \n                            \n                                Value : gltfModel\n                            \n                        \n                        \n                            \n                                 TEXTURE\n                            \n                        \n                        \n                            \n                                Value : texture\n                            \n                        \n                        \n                            \n                                 CUBE_TEXTURE\n                            \n                        \n                        \n                            \n                                Value : cubeTexture\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    \n    \n    ng-three-starter-kit\n    \n        An Angular 14 template for your ThreeJS experiences\n    \n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n         \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n\n\n    \n\n\nStack 🧰\n\n    \n    \n    \n    \n\n\n\nAngular v14\nThreejs (r141)\n@types/three (r141)\n\nQuick Start 🏁\n➡️ Documentation ⬅️\nHow to use this template 🔧\n\n    \n\n\n\nClick on Use this template\nEnter the ✨awesome✨ name of your repository\nChoose the visibility of the repo\nClick on Create repository from template\nYou are now the owner of a new Angular ThreeJS project. Congratulations !\n\n(You can clone your new repository with git clone  in your Terminal)\nServe the application 👨‍💻\nnpm startor\n\nng serveBy default, you can access it through: http://localhost:4200/\nWhat you should see\n\n    \n\n\nBuild the application 🏗️\nnpm run buildor\n\nng buildA dist folder is generated that can be statically hosted.\nDebug and tweak your 3D scene with lil-gui 🐞\nBy default, you can add #debug in the URL to access the debug panel, useful to tweak your scene.\nBe sure to give a reload if you cannot see it.\nWhat you can expect to see\n\n    \n\n\nSpecial Thanks 💖\nHuge thanks to Bruno Simon for all the inspiration and the lessons\nhe provides kindly.\nThis project is highly inspired by the Threejs Journey (Highly recommend it by the way).\nI reworked the whole thing, so that it would fit in an Angular 14 project, with Typescript, obviously.\nFeatures 🛠️\n\nBoilerplate code to set up the Threejs Scene, ready to use.\n3D Assets to test that the template is working for you with the loaders.\nGLTF Loader: You should see the\nfamous GLTF Fox on startup (animated)\nTexture Loader: You should see the floor with both color and normal textures.\nCube Texture Loader: You should also see that the environment map is loaded and applied on the scene.\n\n\nArchitecture of the project in many folders to keep it organized\nDebug UI integrated (equivalent to dat-gui) and easily accessible due to static singleton pattern\nUtil service\nExecutes the animation loop and the resize outside the NgZone to avoid performance issues due to Angular's Change\ndetection\nInformation obtainable easily without painful constructor argument everywhere. (static method)\nProvides a PointerService to handle pointermove events and executes the pointermove callback of the engine outside\nthe NgZone\n\n\n\nIncoming Features ⚙️\n\nJest integration for unit testing (over Karma/Jasmine)\nDraco Compression option handling for the GLTF loader\n\nNotes 🗒️\nYou don't need to use the \"THREE\" namespace in the project as usual.\nYou can simply put the name of the type you want to use and put the right import.\nimport * as THREE from 'three';\n\nconst geometry = new THREE.BoxBufferGeometry(1, 1, 1);\nconst material = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new THREE.Mesh(geometry, material);\n//...becomes\nimport { BoxBufferGeometry, MeshBasicMaterial, Mesh } from 'three';\n\nconst geometry = new BoxBufferGeometry(1, 1, 1);\nconst material = new MeshBasicMaterial({ color: 0xff0000 });\n\nconst mesh = new Mesh(geometry, material);\n//...It's, in my opinion, a more angular-friendly way of writing our code.\nTwitter 🐦\nYou can reach me on Twitter:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCreative Commons Legal Code\nCC0 1.0 Universal\nCREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\nLEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\nATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\nINFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\nREGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\nPROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\nTHE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\nHEREUNDER.Statement of Purpose\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\nCopyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\nWaiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\nPublic License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\nLimitations and Disclaimers.\n\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nThreeViewerComponent\n\nThreeViewerComponent\n\nAppModule -->\n\nThreeViewerComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.4.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consumer   (src/.../Consumer.ts)\n                        \n                        \n                            Item   (src/.../ResourceLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/three-viewer/engine/service/type/Consumer.ts\n    \n    \n        \n            \n                \n                    \n                    Consumer\n                \n            \n            \n                \n                    Represents an operation that accepts a single input argument and returns no result.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    src/app/three-viewer/engine/resource/ResourceLoader.ts\n    \n    \n        \n            \n                \n                    \n                    Item\n                \n            \n            \n                \n                    Type of objects that can be loaded into the project\n\n                \n            \n            \n                \n                        GLTF | Texture | CubeTexture\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            sourceList   (src/.../sources-list.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production on\n   */\n  production: true\n}\n                    \n                \n\n            \n                \n                    Production environment variables\n\n                \n            \n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  /**\n   * Production off\n   */\n  production: false\n}\n                    \n                \n\n            \n                \n                    Development environment variables\n\n                \n            \n\n        \n    \n\n    src/app/three-viewer/engine/resource/sources-list.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        sourceList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ISource[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'environmentMapTexture',\n    type: SourceType.CUBE_TEXTURE,\n    pathList: [\n      './assets/textures/environmentMap/px.jpg',\n      './assets/textures/environmentMap/nx.jpg',\n      './assets/textures/environmentMap/py.jpg',\n      './assets/textures/environmentMap/ny.jpg',\n      './assets/textures/environmentMap/pz.jpg',\n      './assets/textures/environmentMap/nz.jpg'\n    ]\n  }, {\n    name: 'grassColorTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/color.jpg'\n  }, {\n    name: 'grassNormalTexture',\n    type: SourceType.TEXTURE,\n    path: './assets/textures/dirt/normal.jpg'\n  }, {\n    name: 'foxModel',\n    type: SourceType.GLTF,\n    path: './assets/models/Fox/glTF/Fox.gltf'\n  }\n]\n                    \n                \n\n            \n                \n                    List of the resources to load\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
