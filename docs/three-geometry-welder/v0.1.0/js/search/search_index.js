var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/BufferGeometryWelder.html",[0,0.62,1,0.62]],["body/classes/BufferGeometryWelder.html",[0,0.197,1,0.341,2,0.573,3,0.573,4,2.297,5,0.398,6,0.398,7,1.524,8,0.489,9,2.193,10,1.343,11,1.494,12,1.562,13,0.991,14,1.562,15,1.179,16,2.087,17,0.489,18,3.286,19,2.864,20,1.31,21,1.31,22,1.31,23,1.762,24,1.31,25,1.31,26,0.991,27,1.31,28,0.991,29,1.31,30,0.991,31,0.991,32,1.31,33,1.562,34,0.991,35,1.562,36,0.573,37,2.297,38,2.074,39,3.162,40,2.653,41,0.991,42,2.074,43,2.829,44,1.765,45,1.31,46,1.31,47,1.966,48,2.012,49,1.31,50,1.085,51,0.91,52,1.765,53,1.31,54,2.074,55,0.138,56,2.074,57,1.844,58,1.441,59,1.31,60,1.762,61,0.991,62,1.562,63,0.771,64,0.991,65,0.991,66,1.562,67,1.524,68,0.991,69,1.562,70,0.991,71,2.193,72,0.991,73,0.689,74,1.562,75,1.562,76,1.343,77,0.991,78,1.933,79,0.573,80,1.562,81,0.573,82,1.933,83,0.991,84,0.991,85,0.991,86,0.573,87,0.991,88,0.573,89,0.689,90,0.573,91,0.573,92,0.991,93,2.926,94,0.991,95,0.991,96,2.074,97,0.991,98,0.689,99,2.193,100,1.227,101,0.991,102,0.991,103,0.991,104,0.991,105,0.573,106,0.991,107,0.991,108,0.991,109,0.573,110,2.297,111,1.933,112,0.573,113,1.083,114,1.31,115,0.991,116,1.31,117,1.31,118,0.991,119,1.31,120,2.465,121,0.573,122,0.573,123,1.765,124,0.689,125,0.398,126,2.535,127,0.991,128,0.398,129,0.573,130,1.31,131,1.31,132,1.31,133,1.31,134,0.573,135,1.933,136,1.933,137,0.573,138,1.765,139,0.991,140,1.31,141,0.573,142,0.991,143,0.991,144,0.991,145,0.991,146,2.193,147,0.991,148,1.31,149,0.573,150,1.31,151,0.991,152,0.573,153,0.573,154,0.991,155,0.991,156,0.991,157,0.991,158,0.573,159,0.573,160,0.573,161,0.573,162,0.398,163,0.991,164,0.991,165,0.283,166,0.573,167,1.31,168,2.465,169,0.398,170,0.398,171,1.765,172,0.573,173,0.573,174,0.991,175,0.573,176,0.573,177,0.573,178,0.573,179,0.573,180,1.765,181,0.573,182,0.573,183,0.573,184,0.573,185,1.762,186,0.573,187,0.991,188,1.562,189,0.991,190,0.991,191,0.573,192,0.573,193,0.573,194,0.573,195,0.573,196,0.573,197,0.573,198,0.573,199,0.573,200,1.31,201,0.573,202,0.573,203,0.991,204,0.573,205,0.573,206,0.573,207,0.991,208,0.573,209,0.573,210,0.991,211,0.573,212,0.991,213,0.573,214,0.573,215,0.573,216,1.31,217,1.933,218,0.991,219,1.31,220,0.573,221,0.573,222,0.573,223,0.573,224,0.573,225,0.573,226,0.573,227,0.573,228,0.573,229,0.573,230,1.31,231,0.573,232,0.573,233,0.573,234,0.573,235,0.573,236,0.573,237,0.398,238,0.038,239,0.038]],["title/coverage.html",[240,1.683]],["body/coverage.html",[0,0.905,1,0.905,5,1.829,6,1.829,55,0.125,57,1.829,113,1.3,238,0.118,239,0.118,240,1.829,241,1.829,242,2.632,243,2.632,244,2.632,245,2.632,246,2.632,247,2.632]],["title/dependencies.html",[248,1.061,249,1.5]],["body/dependencies.html",[55,0.127,165,1.345,238,0.121,239,0.121,249,1.893,250,2.724,251,2.724]],["title/index.html",[16,1.061,252,1.527,253,1.527]],["body/index.html",[1,0.587,8,0.844,11,1.589,15,1.313,23,1.622,47,1.187,48,1.187,50,1.187,51,1.187,55,0.134,58,1.187,60,1.187,63,1.153,67,1.622,73,1.622,76,1.985,89,2.078,98,1.187,100,1.985,113,1.153,124,1.622,125,1.622,128,1.187,162,1.187,165,1.313,169,1.187,170,1.187,185,1.985,238,0.09,239,0.09,241,1.187,254,1.708,255,1.708,256,1.708,257,1.708,258,1.622,259,1.708,260,1.708,261,1.708,262,1.708,263,1.708,264,2.334,265,1.708,266,1.708,267,1.708,268,1.708,269,1.708,270,1.708,271,1.708,272,1.708,273,1.708,274,1.708,275,1.708,276,1.708,277,1.708,278,1.708,279,2.334,280,1.708,281,1.708,282,1.708,283,1.708,284,1.708,285,2.334,286,2.334,287,1.708,288,1.708,289,1.708,290,1.708,291,2.334,292,1.708,293,1.708,294,1.708,295,1.708,296,1.708,297,1.708,298,1.708,299,1.708,300,1.708,301,1.708,302,1.708,303,2.857,304,1.708,305,2.334,306,1.708,307,1.708,308,1.708,309,1.708,310,1.708,311,2.658,312,1.708,313,2.334,314,2.334,315,1.708,316,1.708,317,1.708,318,1.708,319,1.708,320,1.708,321,1.708,322,1.708,323,1.708,324,1.708,325,1.708,326,1.708,327,1.708,328,1.708,329,1.708,330,1.708,331,1.708,332,1.708,333,1.708,334,1.708,335,2.334,336,1.708]],["title/modules.html",[337,1.683]],["body/modules.html",[55,0.122,238,0.122,239,0.122,337,1.92]],["title/overview.html",[338,1.683]],["body/overview.html",[0,0.943,55,0.121,237,1.906,238,0.121,239,0.121,338,1.906]],["title/properties.html",[17,1.066,248,1.061]],["body/properties.html",[7,1.847,8,1.313,10,1.847,11,1.313,15,1.313,17,1.313,55,0.13,63,1.313,238,0.119,239,0.119,258,1.847,339,2.659,340,2.659]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":200,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["0.1.0",{"_index":340,"title":{},"body":{"properties.html":{}}}],["0.145.0",{"_index":251,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":237,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"overview.html":{}}}],["100",{"_index":244,"title":{},"body":{"coverage.html":{}}}],["15/15",{"_index":245,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":188,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["3d",{"_index":327,"title":{},"body":{"index.html":{}}}],["6",{"_index":170,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["65536",{"_index":193,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["_",{"_index":216,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["accuracy",{"_index":312,"title":{},"body":{"index.html":{}}}],["against",{"_index":94,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["aim",{"_index":13,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["app",{"_index":309,"title":{},"body":{"index.html":{}}}],["applies",{"_index":142,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["array",{"_index":146,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["array.from(destinationattribute.array",{"_index":232,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["array.from(sourceattribute.array",{"_index":234,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["array[offset",{"_index":184,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["arraylike",{"_index":140,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["arraytype",{"_index":192,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["arraytype(facecount",{"_index":197,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["attribute",{"_index":48,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["attribute's",{"_index":161,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["attributes",{"_index":67,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["attributesize",{"_index":187,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["attributeskeys",{"_index":20,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["based",{"_index":114,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["behaviour",{"_index":332,"title":{},"body":{"index.html":{}}}],["better",{"_index":302,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":148,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["box3",{"_index":163,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["buffer",{"_index":60,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["bufferattribute",{"_index":110,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["buffergeometry",{"_index":37,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["buffergeometrywelder",{"_index":1,"title":{"classes/BufferGeometryWelder.html":{}},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"index.html":{}}}],["buffergeometrywelder(geometry",{"_index":270,"title":{},"body":{"index.html":{}}}],["case",{"_index":236,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["change",{"_index":331,"title":{},"body":{"index.html":{}}}],["check",{"_index":334,"title":{},"body":{"index.html":{}}}],["checked",{"_index":151,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["checking",{"_index":101,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["class",{"_index":0,"title":{"classes/BufferGeometryWelder.html":{}},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["cleaned",{"_index":294,"title":{},"body":{"index.html":{}}}],["code",{"_index":100,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["common",{"_index":145,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["compared",{"_index":68,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["connects",{"_index":198,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["considered",{"_index":95,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["const",{"_index":185,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["constructor",{"_index":35,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["constructor(sourcebuffergeometry",{"_index":36,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["coverage",{"_index":240,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":14,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["createattribute",{"_index":27,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["createattribute(sourceattribute",{"_index":109,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["current",{"_index":131,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["customizable",{"_index":254,"title":{},"body":{"index.html":{}}}],["customization",{"_index":325,"title":{},"body":{"index.html":{}}}],["decide",{"_index":69,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["default",{"_index":91,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["defined",{"_index":40,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["dependencies",{"_index":249,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depending",{"_index":115,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"properties.html":{}}}],["destination",{"_index":82,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["destinationarray",{"_index":231,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["destinationattribute",{"_index":228,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["destinationbuffergeometry",{"_index":21,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["destinationgeometry",{"_index":273,"title":{},"body":{"index.html":{}}}],["determine",{"_index":143,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["determines",{"_index":123,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["determinevertexindexfromallattributesat",{"_index":28,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["determinevertexindexfromallattributesat(position",{"_index":121,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["determinevertexindexfrompositionat",{"_index":29,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["determinevertexindexfrompositionat(x",{"_index":134,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["different",{"_index":317,"title":{},"body":{"index.html":{}}}],["dispose",{"_index":155,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["documentation",{"_index":241,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["don't",{"_index":333,"title":{},"body":{"index.html":{}}}],["dropped",{"_index":104,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["duplicated",{"_index":103,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["each",{"_index":45,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["easier",{"_index":296,"title":{},"body":{"index.html":{}}}],["element",{"_index":127,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["enables",{"_index":305,"title":{},"body":{"index.html":{}}}],["encountered",{"_index":321,"title":{},"body":{"index.html":{}}}],["equal",{"_index":199,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["eventual",{"_index":144,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["example",{"_index":128,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["exists",{"_index":130,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["export",{"_index":166,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["facecount",{"_index":190,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["false",{"_index":169,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["features",{"_index":304,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{}}}],["find",{"_index":290,"title":{},"body":{"index.html":{}}}],["float32array",{"_index":182,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["float32array(this.vertexindexlist.length",{"_index":229,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["floor",{"_index":30,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["floor(array",{"_index":139,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["full",{"_index":124,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["fyrestar",{"_index":289,"title":{},"body":{"index.html":{}}}],["generate",{"_index":108,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["generated",{"_index":154,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["generateindexedgeometry",{"_index":31,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["generateindexedgeometry(isfullcomparison",{"_index":147,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["generates",{"_index":150,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["geometry",{"_index":11,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{},"properties.html":{}}}],["geometrywelder",{"_index":269,"title":{},"body":{"index.html":{}}}],["geometrywelder.getmergedbuffergeometry",{"_index":274,"title":{},"body":{"index.html":{}}}],["getmergedbuffergeometry",{"_index":33,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["getting",{"_index":252,"title":{"index.html":{}},"body":{}}],["give",{"_index":97,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["groups",{"_index":210,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["groups.length",{"_index":213,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["hard",{"_index":292,"title":{},"body":{"index.html":{}}}],["hash",{"_index":99,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["hashattribute",{"_index":34,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["hashattribute(attribute",{"_index":158,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["hashid",{"_index":167,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["hashmap",{"_index":92,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["here",{"_index":291,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":242,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":162,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["increase",{"_index":307,"title":{},"body":{"index.html":{}}}],["increment",{"_index":226,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["independents",{"_index":157,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"classes/BufferGeometryWelder.html":{}}}],["indexarray",{"_index":196,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["indexed",{"_index":15,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{},"properties.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["information",{"_index":160,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["install",{"_index":267,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":181,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["interleavedbufferattribute",{"_index":111,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["isfullcomparison",{"_index":38,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["item",{"_index":116,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["job",{"_index":320,"title":{},"body":{"index.html":{}}}],["keys",{"_index":80,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["know",{"_index":102,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["l",{"_index":212,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["lack",{"_index":324,"title":{},"body":{"index.html":{}}}],["left",{"_index":297,"title":{},"body":{"index.html":{}}}],["length",{"_index":107,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["library",{"_index":264,"title":{},"body":{"index.html":{}}}],["list",{"_index":66,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["literal",{"_index":90,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["lot",{"_index":322,"title":{},"body":{"index.html":{}}}],["low",{"_index":314,"title":{},"body":{"index.html":{}}}],["lower",{"_index":49,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["made",{"_index":295,"title":{},"body":{"index.html":{}}}],["making",{"_index":330,"title":{},"body":{"index.html":{}}}],["matching",{"_index":239,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["math.floor(array[offset",{"_index":183,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["math.floor(x",{"_index":221,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["math.floor(y",{"_index":222,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["math.floor(z",{"_index":223,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["math.pow(10",{"_index":172,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["meant",{"_index":319,"title":{},"body":{"index.html":{}}}],["merge",{"_index":42,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["merged",{"_index":84,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["mergevertices",{"_index":303,"title":{},"body":{"index.html":{}}}],["merging",{"_index":256,"title":{},"body":{"index.html":{}}}],["mesh",{"_index":311,"title":{},"body":{"index.html":{}}}],["mesh(destinationgeometry",{"_index":276,"title":{},"body":{"index.html":{}}}],["method",{"_index":288,"title":{},"body":{"index.html":{}}}],["methods",{"_index":26,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["modules",{"_index":337,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":52,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["morph",{"_index":87,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["morphattribute.itemsize",{"_index":214,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["morphkeys",{"_index":22,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["myindexedmesh",{"_index":275,"title":{},"body":{"index.html":{}}}],["myindexedmesh;special",{"_index":283,"title":{},"body":{"index.html":{}}}],["n",{"_index":227,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["name",{"_index":56,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["need",{"_index":74,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["needs",{"_index":61,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["new",{"_index":113,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":44,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["non",{"_index":306,"title":{},"body":{"index.html":{}}}],["notes",{"_index":316,"title":{},"body":{"index.html":{}}}],["npm",{"_index":266,"title":{},"body":{"index.html":{}}}],["number",{"_index":39,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["numbervertexbyface",{"_index":189,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["numerate",{"_index":106,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["object.keys(this.sourcebuffergeometry.attributes",{"_index":176,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["object.keys(this.sourcebuffergeometry.morphattributes",{"_index":178,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["official",{"_index":318,"title":{},"body":{"index.html":{}}}],["offset",{"_index":126,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["old",{"_index":281,"title":{},"body":{"index.html":{}}}],["once",{"_index":83,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["one",{"_index":63,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{},"properties.html":{}}}],["optional",{"_index":58,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["overview",{"_index":338,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":248,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":168,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["parameter",{"_index":73,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["peer",{"_index":250,"title":{},"body":{"dependencies.html":{}}}],["performance",{"_index":308,"title":{},"body":{"index.html":{}}}],["poly",{"_index":315,"title":{},"body":{"index.html":{}}}],["position",{"_index":47,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["position.length",{"_index":191,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["precision",{"_index":23,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["private",{"_index":18,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["problems",{"_index":323,"title":{},"body":{"index.html":{}}}],["project",{"_index":293,"title":{},"body":{"index.html":{}}}],["properties",{"_index":17,"title":{"properties.html":{}},"body":{"classes/BufferGeometryWelder.html":{},"properties.html":{}}}],["public",{"_index":32,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["pushing",{"_index":225,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["quick",{"_index":262,"title":{},"body":{"index.html":{}}}],["r144",{"_index":261,"title":{},"body":{"index.html":{}}}],["r145",{"_index":259,"title":{},"body":{"index.html":{}}}],["reach",{"_index":336,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":19,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["really",{"_index":299,"title":{},"body":{"index.html":{}}}],["reference",{"_index":133,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["results",{"_index":238,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":180,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["returned",{"_index":85,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["returns",{"_index":120,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["reworked",{"_index":285,"title":{},"body":{"index.html":{}}}],["rid",{"_index":280,"title":{},"body":{"index.html":{}}}],["roughly",{"_index":53,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["run",{"_index":265,"title":{},"body":{"index.html":{}}}],["safely",{"_index":156,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["same",{"_index":98,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["scan",{"_index":328,"title":{},"body":{"index.html":{}}}],["second",{"_index":271,"title":{},"body":{"index.html":{}}}],["service",{"_index":8,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{},"properties.html":{}}}],["set",{"_index":125,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["setting",{"_index":132,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["shared",{"_index":71,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["similar",{"_index":96,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["simplify",{"_index":51,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["size",{"_index":117,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["sourcearray",{"_index":233,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["sourceattribute",{"_index":119,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["sourceattribute.itemsize",{"_index":230,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["sourcebuffergeometry",{"_index":59,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["sphere",{"_index":164,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts",{"_index":6,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{}}}],["src/buffergeometrywelder.ts:11",{"_index":88,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:16",{"_index":81,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:197",{"_index":122,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:21",{"_index":86,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:233",{"_index":137,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:26",{"_index":79,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:260",{"_index":112,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:31",{"_index":105,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:324",{"_index":159,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:37",{"_index":41,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:66",{"_index":153,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:76",{"_index":141,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["src/buffergeometrywelder.ts:89",{"_index":149,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["stack",{"_index":257,"title":{},"body":{"index.html":{}}}],["start",{"_index":263,"title":{},"body":{"index.html":{}}}],["started",{"_index":253,"title":{"index.html":{}},"body":{}}],["statements",{"_index":243,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":118,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["string",{"_index":78,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["switch",{"_index":235,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["table",{"_index":247,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":246,"title":{},"body":{"coverage.html":{}}}],["thanks",{"_index":284,"title":{},"body":{"index.html":{}}}],["third",{"_index":272,"title":{},"body":{"index.html":{}}}],["this.attributeskeys",{"_index":175,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.createattribute(source",{"_index":201,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.destinationbuffergeometry",{"_index":174,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.destinationbuffergeometry.boundingbox",{"_index":207,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.destinationbuffergeometry.boundingsphere",{"_index":203,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.destinationbuffergeometry.computeboundingbox",{"_index":209,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.destinationbuffergeometry.computeboundingsphere",{"_index":205,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.generateindexedgeometry(isfullcomparison",{"_index":179,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.hashattribute(morphattribute",{"_index":215,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.morphkeys",{"_index":177,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.mymesh",{"_index":282,"title":{},"body":{"index.html":{}}}],["this.mymesh.geometry",{"_index":268,"title":{},"body":{"index.html":{}}}],["this.mymesh.geometry.dispose",{"_index":278,"title":{},"body":{"index.html":{}}}],["this.mymesh.material",{"_index":277,"title":{},"body":{"index.html":{}}}],["this.precision",{"_index":171,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.attributes.position.array",{"_index":186,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.boundingbox",{"_index":206,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.boundingbox.clone",{"_index":208,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.boundingsphere",{"_index":202,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.boundingsphere.clone",{"_index":204,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.sourcebuffergeometry.groups",{"_index":211,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.vertexdictionnary[hashid",{"_index":217,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.vertexindexlist",{"_index":173,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.vertexindexlist.length",{"_index":219,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.vertexindexlist.push(index",{"_index":224,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["this.vertexindexlist.push(position",{"_index":220,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["three",{"_index":165,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"dependencies.html":{},"index.html":{}}}],["threejs",{"_index":258,"title":{},"body":{"index.html":{},"properties.html":{}}}],["together",{"_index":12,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["toindexed",{"_index":287,"title":{},"body":{"index.html":{}}}],["tolerance",{"_index":72,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["tolerant",{"_index":77,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["tradeoff",{"_index":310,"title":{},"body":{"index.html":{}}}],["tried",{"_index":326,"title":{},"body":{"index.html":{}}}],["true",{"_index":64,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["twitter",{"_index":335,"title":{},"body":{"index.html":{}}}],["two",{"_index":75,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["type",{"_index":57,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"coverage.html":{}}}],["types/three",{"_index":260,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":286,"title":{},"body":{"index.html":{}}}],["uint16array",{"_index":195,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["uint32array",{"_index":194,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["undefined",{"_index":218,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["unmaintained",{"_index":298,"title":{},"body":{"index.html":{}}}],["unsuccessful",{"_index":329,"title":{},"body":{"index.html":{}}}],["use",{"_index":89,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["used",{"_index":9,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["useful",{"_index":300,"title":{},"body":{"index.html":{}}}],["using",{"_index":46,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["value",{"_index":50,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["vector3",{"_index":129,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["version",{"_index":339,"title":{},"body":{"properties.html":{}}}],["vertex",{"_index":93,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["vertexdictionnary",{"_index":24,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["vertexindexlist",{"_index":25,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["vertice",{"_index":70,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["vertices",{"_index":43,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["very",{"_index":313,"title":{},"body":{"index.html":{}}}],["void",{"_index":152,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["want",{"_index":279,"title":{},"body":{"index.html":{}}}],["way",{"_index":255,"title":{},"body":{"index.html":{}}}],["weld",{"_index":10,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"properties.html":{}}}],["welded",{"_index":62,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["welder",{"_index":76,"title":{},"body":{"classes/BufferGeometryWelder.html":{},"index.html":{}}}],["whole",{"_index":65,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["works",{"_index":301,"title":{},"body":{"index.html":{}}}],["x",{"_index":138,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["y",{"_index":135,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}],["z",{"_index":136,"title":{},"body":{"classes/BufferGeometryWelder.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/BufferGeometryWelder.html":{"url":"classes/BufferGeometryWelder.html","title":"class - BufferGeometryWelder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BufferGeometryWelder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/BufferGeometryWelder.ts\n        \n\n\n            \n                Description\n            \n            \n                Service that is used to weld the geometry all together. The aim is to create an indexed geometry\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                attributesKeys\n                            \n                            \n                                    Private\n                                    Readonly\n                                destinationBufferGeometry\n                            \n                            \n                                    Private\n                                    Readonly\n                                morphKeys\n                            \n                            \n                                    Private\n                                    Readonly\n                                precision\n                            \n                            \n                                    Private\n                                    Readonly\n                                vertexDictionnary\n                            \n                            \n                                    Private\n                                    Readonly\n                                vertexIndexList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createAttribute\n                            \n                            \n                                    Private\n                                determineVertexIndexFromAllAttributesAt\n                            \n                            \n                                    Private\n                                determineVertexIndexFromPositionAt\n                            \n                            \n                                    Private\n                                floor\n                            \n                            \n                                    Private\n                                generateIndexedGeometry\n                            \n                            \n                                    Public\n                                getMergedBufferGeometry\n                            \n                            \n                                    Private\n                                hashAttribute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sourceBufferGeometry: BufferGeometry, isFullComparison, precision: number)\n                    \n                \n                        \n                            \n                                Defined in src/BufferGeometryWelder.ts:37\n                            \n                        \n\n                \n                    \n                            Constructor\n  Else, it will merge vertices that are next to each other by only using the position attribute.\n  a lower value and will simplify the geometry more roughly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sourceBufferGeometry\n                                                  \n                                                        \n                                                                    BufferGeometry\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Buffer geometry that needs to be welded into indexed one.\n\n                                                        \n                                                \n                                                \n                                                        isFullComparison\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                If true, the whole list of attributes will be compared to decide if a vertice is shared.\nElse, it will merge vertices that are next to each other by only using the position attribute.\n\n                                                        \n                                                \n                                                \n                                                        precision\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Tolerance parameter to decide if we need to merge two vertices. The welder is more tolerant with\na lower value and will simplify the geometry more roughly.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        attributesKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:26\n                        \n                    \n\n            \n                \n                    Keys for the attributes of the geometry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        destinationBufferGeometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BufferGeometry\n\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:16\n                        \n                    \n\n            \n                \n                    Destination for the geometry once merged. This will be the returned geometry.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        morphKeys\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:21\n                        \n                    \n\n            \n                \n                    Morph keys.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        precision\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:11\n                        \n                    \n\n            \n                \n                    Precision to use to weld the geometry\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        vertexDictionnary\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:37\n                        \n                    \n\n            \n                \n                    Hashmap of the vertex against the index number of the vertex. All vertices that are considered as similar give the same hash code. If a similar vertex is checking its hash, it can know if it duplicated and if it need to be dropped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        vertexIndexList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                    \n                        \n                                Defined in src/BufferGeometryWelder.ts:31\n                        \n                    \n\n            \n                \n                    List used to numerate the vertices: length is used as the index number that will be used to generate the index buffer.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAttribute(sourceAttribute: BufferAttribute | InterleavedBufferAttribute)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:260\n                \n            \n\n\n            \n                \n                    Create a new destination attribute based on the source one for indexed geometry, depending on the item size stored in the source attribute.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourceAttribute\n                                    \n                                            BufferAttribute | InterleavedBufferAttribute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Source attribute to weld\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     BufferAttribute\n\n                    \n                    \n                        a welded buffer attribute\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineVertexIndexFromAllAttributesAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineVertexIndexFromAllAttributesAt(position: number)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:197\n                \n            \n\n\n            \n                \n                    Determines the shared vertex index for the full set of attributes.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index position offset of the element in the buffer attribute. (For example, the number of the Vector3 in the position attribute)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The index of the shared vertices if it exists or the current index of the vertex by setting it as reference for other similar vertices.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        determineVertexIndexFromPositionAt\n                        \n                    \n                \n            \n            \n                \n                    \n                    determineVertexIndexFromPositionAt(x: number, y: number, z: number, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:233\n                \n            \n\n\n            \n                \n                    Determines the shared vertex index for the position attribute only.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        X position of the vertex\n\n                                    \n                                \n                                \n                                    y\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Y position of the vertex\n\n                                    \n                                \n                                \n                                    z\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Z position of the vertex\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the vertex\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The index of the shared vertices if it exists or the current index of the vertex by setting it as reference for other similar vertices.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        floor\n                        \n                    \n                \n            \n            \n                \n                    \n                    floor(array: ArrayLike, offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:76\n                \n            \n\n\n            \n                \n                    Applies the precision to determine the eventual common hash code.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            ArrayLike\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Attribute array\n\n                                    \n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Offset in the array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        generateIndexedGeometry\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateIndexedGeometry(isFullComparison: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:89\n                \n            \n\n\n            \n                \n                    Generates the indexed destination geometry.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    isFullComparison\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Determines if all the attributes must be checked or only position to merge vertices together.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getMergedBufferGeometry\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMergedBufferGeometry()\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:66\n                \n            \n\n\n            \n                \n                    Returns the indexed buffer geometry generated by the welder.\nYou can dispose the source buffer geometry safely, the two are independents in the welder.\n\n\n                    \n                        Returns :     BufferGeometry\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        hashAttribute\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashAttribute(attribute: BufferAttribute | InterleavedBufferAttribute, offset: number)\n                \n            \n\n\n            \n                \n                    Defined in src/BufferGeometryWelder.ts:324\n                \n            \n\n\n            \n                \n                    Generates the hash based on the item size of the buffer attribute.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                            BufferAttribute | InterleavedBufferAttribute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Attribute information\n\n                                    \n                                \n                                \n                                    offset\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Offset of the element in the attribute's array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the hash code\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Box3, BufferAttribute, BufferGeometry, InterleavedBufferAttribute, Sphere, } from \"three\";\n\n/**\n * Service that is used to weld the geometry all together. The aim is to create an indexed geometry\n */\nexport class BufferGeometryWelder {\n  /**\n   * Precision to use to weld the geometry\n   * @private\n   */\n  private readonly precision: number;\n  /**\n   * Destination for the geometry once merged. This will be the returned geometry.\n   * @private\n   */\n  private readonly destinationBufferGeometry: BufferGeometry;\n  /**\n   * Morph keys.\n   * @private\n   */\n  private readonly morphKeys: string[];\n  /**\n   * Keys for the attributes of the geometry\n   * @private\n   */\n  private readonly attributesKeys: string[];\n  /**\n   * List used to numerate the vertices: length is used as the index number that will be used to generate the index buffer.\n   * @private\n   */\n  private readonly vertexIndexList: number[];\n\n  /**\n   * Hashmap of the vertex against the index number of the vertex. All vertices that are considered as similar give the same hash code. If a similar vertex is checking its hash, it can know if it duplicated and if it need to be dropped.\n   * @private\n   */\n  private readonly vertexDictionnary: { [hashId: string]: number } = {};\n\n  /**\n   * Constructor\n   * @param sourceBufferGeometry Buffer geometry that needs to be welded into indexed one.\n   * @param isFullComparison If true, the whole list of attributes will be compared to decide if a vertice is shared.\n   *   Else, it will merge vertices that are next to each other by only using the position attribute.\n   * @param precision Tolerance parameter to decide if we need to merge two vertices. The welder is more tolerant with\n   *   a lower value and will simplify the geometry more roughly.\n   */\n  constructor(\n    private readonly sourceBufferGeometry: BufferGeometry,\n    isFullComparison = false,\n    precision = 6\n  ) {\n    this.precision = Math.pow(10, precision);\n    this.vertexIndexList = [];\n\n    this.destinationBufferGeometry = new BufferGeometry();\n\n    this.attributesKeys = Object.keys(this.sourceBufferGeometry.attributes);\n    this.morphKeys = Object.keys(this.sourceBufferGeometry.morphAttributes);\n    this.generateIndexedGeometry(isFullComparison);\n  }\n\n  /**\n   * Returns the indexed buffer geometry generated by the welder.\n   * You can dispose the source buffer geometry safely, the two are independents in the welder.\n   */\n  public getMergedBufferGeometry(): BufferGeometry {\n    return this.destinationBufferGeometry;\n  }\n\n  /**\n   * Applies the precision to determine the eventual common hash code.\n   * @param array Attribute array\n   * @param offset Offset in the array\n   * @private\n   */\n  private floor(array: ArrayLike, offset: number) {\n    if (array instanceof Float32Array) {\n      return Math.floor(array[offset] * this.precision);\n    } else {\n      return array[offset];\n    }\n  }\n\n  /**\n   * Generates the indexed destination geometry.\n   * @param isFullComparison Determines if all the attributes must be checked or only position to merge vertices together.\n   * @private\n   */\n  private generateIndexedGeometry(isFullComparison: boolean) {\n    const position = this.sourceBufferGeometry.attributes.position.array;\n\n    const attributeSize = 3;\n    const numberVertexByFace = 3;\n    const faceCount = position.length / attributeSize / numberVertexByFace;\n\n    const ArrayType = faceCount * 3 > 65536 ? Uint32Array : Uint16Array;\n    const indexArray = new ArrayType(faceCount * 3);\n\n    // Full index only connects vertices where all attributes are equal\n\n    if (isFullComparison) {\n      for (let i = 0; i \n          this.createAttribute(source)\n        );\n    }\n\n    if (this.sourceBufferGeometry.boundingSphere) {\n      this.destinationBufferGeometry.boundingSphere =\n        this.sourceBufferGeometry.boundingSphere.clone();\n    } else {\n      this.destinationBufferGeometry.boundingSphere = new Sphere();\n      this.destinationBufferGeometry.computeBoundingSphere();\n    }\n\n    if (this.sourceBufferGeometry.boundingBox) {\n      this.destinationBufferGeometry.boundingBox =\n        this.sourceBufferGeometry.boundingBox.clone();\n    } else {\n      this.destinationBufferGeometry.boundingBox = new Box3();\n      this.destinationBufferGeometry.computeBoundingBox();\n    }\n\n    // Groups\n\n    const groups = this.sourceBufferGeometry.groups;\n\n    for (let i = 0, l = groups.length; i  {\n          const offset = morphAttribute.itemSize * position;\n          hashId += this.hashAttribute(morphAttribute, offset) + \"_\";\n        }\n      );\n    }\n\n    if (this.vertexDictionnary[hashId] === undefined) {\n      this.vertexDictionnary[hashId] = this.vertexIndexList.length;\n\n      this.vertexIndexList.push(position);\n    }\n\n    return this.vertexDictionnary[hashId];\n  }\n\n  /**\n   * Determines the shared vertex index for the position attribute only.\n   * @param x X position of the vertex\n   * @param y Y position of the vertex\n   * @param z Z position of the vertex\n   * @param index index of the vertex\n   * @returns The index of the shared vertices if it exists or the current index of the vertex by setting it as reference for other similar vertices.\n   * @private\n   */\n  private determineVertexIndexFromPositionAt(\n    x: number,\n    y: number,\n    z: number,\n    index: number\n  ) {\n    const hashId =\n      Math.floor(x * this.precision) +\n      \"_\" +\n      Math.floor(y * this.precision) +\n      \"_\" +\n      Math.floor(z * this.precision);\n\n    if (this.vertexDictionnary[hashId] === undefined) {\n      this.vertexDictionnary[hashId] = this.vertexIndexList.length;\n      this.vertexIndexList.push(index); //By pushing, increment the next n° of the next vertex\n    }\n\n    return this.vertexDictionnary[hashId];\n  }\n\n  /**\n   * Create a new destination attribute based on the source one for indexed geometry, depending on the item size stored in the source attribute.\n   * @param sourceAttribute Source attribute to weld\n   * @returns a welded buffer attribute\n   * @private\n   */\n  private createAttribute(\n    sourceAttribute: BufferAttribute | InterleavedBufferAttribute\n  ): BufferAttribute {\n    const destinationAttribute = new BufferAttribute(\n      new Float32Array(this.vertexIndexList.length * sourceAttribute.itemSize),\n      sourceAttribute.itemSize\n    );\n\n    const destinationArray = Array.from(destinationAttribute.array);\n    const sourceArray = Array.from(sourceAttribute.array);\n\n    switch (sourceAttribute.itemSize) {\n      case 1:\n        for (let i = 0, l = this.vertexIndexList.length; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/BufferGeometryWelder.ts\n            \n            class\n            BufferGeometryWelder\n            \n                100 %\n                (15/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            three : ^0.145.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n    \n    three-geometry-welder\n    \n        A customizable way of merging your buffer geometry\n    \n\n\n\nStack 🧰\n\n    \n    \n\n\n\nThreejs (r145)\n@types/three (r144)\n\nQuick Start 🏁\n➡️ Documentation ⬅️\nHow to use this library 🔧\nRun npm install three-geometry-welder\nThen you can use in your code:\nimport { BufferGeometryWelder } from \"three-geometry-welder\";\n\n//...\n\nconst geometry = this.myMesh.geometry;\n\nconst geometryWelder = new BufferGeometryWelder(geometry, false, 6); // The second and third parameter are optional.\nconst destinationGeometry = geometryWelder.getMergedBufferGeometry();\n\nconst myIndexedMesh = new Mesh(destinationGeometry, this.myMesh.material);\nthis.myMesh.geometry.dispose(); //If you want to get rid of your old geometry not indexed.\nthis.myMesh = myIndexedMesh;Special Thanks 💖\nThis code is a reworked one in typescript of toIndexed() method of @Fyrestar\nthat you can find here.\nThe code was hard to use in my Typescript project, I reworked, cleaned and made a service of it, to be easier to use. \nThe code was left unmaintained, but it is really useful and works better than mergeVertices(). \nFeatures 🛠️\n\nEnables to get an indexed geometry from a non indexed one.\nCan be on full set of attributes or only on the position attribute.\nThe precision parameter enables you to simplify your geometry which can increase the performance of your app (with a tradeoff on the mesh accuracy: with a very low precision value, you will get a very low-poly mesh)\n\nNotes 🗒️\nHow is it different from mergeVertices() from the official ThreeJS library?:\nIt is meant to do the same job. I encountered a lot of problems with mergeVertices() and there is a lack of customization.\nFor example, I tried to use mergeVertices() of a 3D scan, it was unsuccessful to do so, and also making all in the mesh. \nHere you can also change the behaviour of the welder if you don't want it to check the full set of attributes.\nTwitter 🐦\nYou can reach me on Twitter:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.1.0\n        \n            Description : Service to weld some ThreeJS geometry to indexed one\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
